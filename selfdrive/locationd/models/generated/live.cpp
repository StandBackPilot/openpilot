#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7968334240474235674) {
   out_7968334240474235674[0] = 0;
   out_7968334240474235674[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7968334240474235674[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7968334240474235674[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7968334240474235674[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7968334240474235674[5] = -sin(in_vec[1]);
   out_7968334240474235674[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7968334240474235674[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7968334240474235674[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7968334240474235674[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7968334240474235674[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7968334240474235674[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7968334240474235674[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7968334240474235674[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7968334240474235674[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7968334240474235674[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7968334240474235674[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7968334240474235674[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2210371994950831199) {
   out_2210371994950831199[0] = delta_x[0] + nom_x[0];
   out_2210371994950831199[1] = delta_x[1] + nom_x[1];
   out_2210371994950831199[2] = delta_x[2] + nom_x[2];
   out_2210371994950831199[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2210371994950831199[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2210371994950831199[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2210371994950831199[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2210371994950831199[7] = delta_x[6] + nom_x[7];
   out_2210371994950831199[8] = delta_x[7] + nom_x[8];
   out_2210371994950831199[9] = delta_x[8] + nom_x[9];
   out_2210371994950831199[10] = delta_x[9] + nom_x[10];
   out_2210371994950831199[11] = delta_x[10] + nom_x[11];
   out_2210371994950831199[12] = delta_x[11] + nom_x[12];
   out_2210371994950831199[13] = delta_x[12] + nom_x[13];
   out_2210371994950831199[14] = delta_x[13] + nom_x[14];
   out_2210371994950831199[15] = delta_x[14] + nom_x[15];
   out_2210371994950831199[16] = delta_x[15] + nom_x[16];
   out_2210371994950831199[17] = delta_x[16] + nom_x[17];
   out_2210371994950831199[18] = delta_x[17] + nom_x[18];
   out_2210371994950831199[19] = delta_x[18] + nom_x[19];
   out_2210371994950831199[20] = delta_x[19] + nom_x[20];
   out_2210371994950831199[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6560080521163361192) {
   out_6560080521163361192[0] = -nom_x[0] + true_x[0];
   out_6560080521163361192[1] = -nom_x[1] + true_x[1];
   out_6560080521163361192[2] = -nom_x[2] + true_x[2];
   out_6560080521163361192[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6560080521163361192[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6560080521163361192[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6560080521163361192[6] = -nom_x[7] + true_x[7];
   out_6560080521163361192[7] = -nom_x[8] + true_x[8];
   out_6560080521163361192[8] = -nom_x[9] + true_x[9];
   out_6560080521163361192[9] = -nom_x[10] + true_x[10];
   out_6560080521163361192[10] = -nom_x[11] + true_x[11];
   out_6560080521163361192[11] = -nom_x[12] + true_x[12];
   out_6560080521163361192[12] = -nom_x[13] + true_x[13];
   out_6560080521163361192[13] = -nom_x[14] + true_x[14];
   out_6560080521163361192[14] = -nom_x[15] + true_x[15];
   out_6560080521163361192[15] = -nom_x[16] + true_x[16];
   out_6560080521163361192[16] = -nom_x[17] + true_x[17];
   out_6560080521163361192[17] = -nom_x[18] + true_x[18];
   out_6560080521163361192[18] = -nom_x[19] + true_x[19];
   out_6560080521163361192[19] = -nom_x[20] + true_x[20];
   out_6560080521163361192[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5600525409187939404) {
   out_5600525409187939404[0] = 1.0;
   out_5600525409187939404[1] = 0;
   out_5600525409187939404[2] = 0;
   out_5600525409187939404[3] = 0;
   out_5600525409187939404[4] = 0;
   out_5600525409187939404[5] = 0;
   out_5600525409187939404[6] = 0;
   out_5600525409187939404[7] = 0;
   out_5600525409187939404[8] = 0;
   out_5600525409187939404[9] = 0;
   out_5600525409187939404[10] = 0;
   out_5600525409187939404[11] = 0;
   out_5600525409187939404[12] = 0;
   out_5600525409187939404[13] = 0;
   out_5600525409187939404[14] = 0;
   out_5600525409187939404[15] = 0;
   out_5600525409187939404[16] = 0;
   out_5600525409187939404[17] = 0;
   out_5600525409187939404[18] = 0;
   out_5600525409187939404[19] = 0;
   out_5600525409187939404[20] = 0;
   out_5600525409187939404[21] = 0;
   out_5600525409187939404[22] = 1.0;
   out_5600525409187939404[23] = 0;
   out_5600525409187939404[24] = 0;
   out_5600525409187939404[25] = 0;
   out_5600525409187939404[26] = 0;
   out_5600525409187939404[27] = 0;
   out_5600525409187939404[28] = 0;
   out_5600525409187939404[29] = 0;
   out_5600525409187939404[30] = 0;
   out_5600525409187939404[31] = 0;
   out_5600525409187939404[32] = 0;
   out_5600525409187939404[33] = 0;
   out_5600525409187939404[34] = 0;
   out_5600525409187939404[35] = 0;
   out_5600525409187939404[36] = 0;
   out_5600525409187939404[37] = 0;
   out_5600525409187939404[38] = 0;
   out_5600525409187939404[39] = 0;
   out_5600525409187939404[40] = 0;
   out_5600525409187939404[41] = 0;
   out_5600525409187939404[42] = 0;
   out_5600525409187939404[43] = 0;
   out_5600525409187939404[44] = 1.0;
   out_5600525409187939404[45] = 0;
   out_5600525409187939404[46] = 0;
   out_5600525409187939404[47] = 0;
   out_5600525409187939404[48] = 0;
   out_5600525409187939404[49] = 0;
   out_5600525409187939404[50] = 0;
   out_5600525409187939404[51] = 0;
   out_5600525409187939404[52] = 0;
   out_5600525409187939404[53] = 0;
   out_5600525409187939404[54] = 0;
   out_5600525409187939404[55] = 0;
   out_5600525409187939404[56] = 0;
   out_5600525409187939404[57] = 0;
   out_5600525409187939404[58] = 0;
   out_5600525409187939404[59] = 0;
   out_5600525409187939404[60] = 0;
   out_5600525409187939404[61] = 0;
   out_5600525409187939404[62] = 0;
   out_5600525409187939404[63] = 0;
   out_5600525409187939404[64] = 0;
   out_5600525409187939404[65] = 0;
   out_5600525409187939404[66] = -0.5*state[4];
   out_5600525409187939404[67] = -0.5*state[5];
   out_5600525409187939404[68] = -0.5*state[6];
   out_5600525409187939404[69] = 0;
   out_5600525409187939404[70] = 0;
   out_5600525409187939404[71] = 0;
   out_5600525409187939404[72] = 0;
   out_5600525409187939404[73] = 0;
   out_5600525409187939404[74] = 0;
   out_5600525409187939404[75] = 0;
   out_5600525409187939404[76] = 0;
   out_5600525409187939404[77] = 0;
   out_5600525409187939404[78] = 0;
   out_5600525409187939404[79] = 0;
   out_5600525409187939404[80] = 0;
   out_5600525409187939404[81] = 0;
   out_5600525409187939404[82] = 0;
   out_5600525409187939404[83] = 0;
   out_5600525409187939404[84] = 0;
   out_5600525409187939404[85] = 0;
   out_5600525409187939404[86] = 0;
   out_5600525409187939404[87] = 0.5*state[3];
   out_5600525409187939404[88] = 0.5*state[6];
   out_5600525409187939404[89] = -0.5*state[5];
   out_5600525409187939404[90] = 0;
   out_5600525409187939404[91] = 0;
   out_5600525409187939404[92] = 0;
   out_5600525409187939404[93] = 0;
   out_5600525409187939404[94] = 0;
   out_5600525409187939404[95] = 0;
   out_5600525409187939404[96] = 0;
   out_5600525409187939404[97] = 0;
   out_5600525409187939404[98] = 0;
   out_5600525409187939404[99] = 0;
   out_5600525409187939404[100] = 0;
   out_5600525409187939404[101] = 0;
   out_5600525409187939404[102] = 0;
   out_5600525409187939404[103] = 0;
   out_5600525409187939404[104] = 0;
   out_5600525409187939404[105] = 0;
   out_5600525409187939404[106] = 0;
   out_5600525409187939404[107] = 0;
   out_5600525409187939404[108] = -0.5*state[6];
   out_5600525409187939404[109] = 0.5*state[3];
   out_5600525409187939404[110] = 0.5*state[4];
   out_5600525409187939404[111] = 0;
   out_5600525409187939404[112] = 0;
   out_5600525409187939404[113] = 0;
   out_5600525409187939404[114] = 0;
   out_5600525409187939404[115] = 0;
   out_5600525409187939404[116] = 0;
   out_5600525409187939404[117] = 0;
   out_5600525409187939404[118] = 0;
   out_5600525409187939404[119] = 0;
   out_5600525409187939404[120] = 0;
   out_5600525409187939404[121] = 0;
   out_5600525409187939404[122] = 0;
   out_5600525409187939404[123] = 0;
   out_5600525409187939404[124] = 0;
   out_5600525409187939404[125] = 0;
   out_5600525409187939404[126] = 0;
   out_5600525409187939404[127] = 0;
   out_5600525409187939404[128] = 0;
   out_5600525409187939404[129] = 0.5*state[5];
   out_5600525409187939404[130] = -0.5*state[4];
   out_5600525409187939404[131] = 0.5*state[3];
   out_5600525409187939404[132] = 0;
   out_5600525409187939404[133] = 0;
   out_5600525409187939404[134] = 0;
   out_5600525409187939404[135] = 0;
   out_5600525409187939404[136] = 0;
   out_5600525409187939404[137] = 0;
   out_5600525409187939404[138] = 0;
   out_5600525409187939404[139] = 0;
   out_5600525409187939404[140] = 0;
   out_5600525409187939404[141] = 0;
   out_5600525409187939404[142] = 0;
   out_5600525409187939404[143] = 0;
   out_5600525409187939404[144] = 0;
   out_5600525409187939404[145] = 0;
   out_5600525409187939404[146] = 0;
   out_5600525409187939404[147] = 0;
   out_5600525409187939404[148] = 0;
   out_5600525409187939404[149] = 0;
   out_5600525409187939404[150] = 0;
   out_5600525409187939404[151] = 0;
   out_5600525409187939404[152] = 0;
   out_5600525409187939404[153] = 1.0;
   out_5600525409187939404[154] = 0;
   out_5600525409187939404[155] = 0;
   out_5600525409187939404[156] = 0;
   out_5600525409187939404[157] = 0;
   out_5600525409187939404[158] = 0;
   out_5600525409187939404[159] = 0;
   out_5600525409187939404[160] = 0;
   out_5600525409187939404[161] = 0;
   out_5600525409187939404[162] = 0;
   out_5600525409187939404[163] = 0;
   out_5600525409187939404[164] = 0;
   out_5600525409187939404[165] = 0;
   out_5600525409187939404[166] = 0;
   out_5600525409187939404[167] = 0;
   out_5600525409187939404[168] = 0;
   out_5600525409187939404[169] = 0;
   out_5600525409187939404[170] = 0;
   out_5600525409187939404[171] = 0;
   out_5600525409187939404[172] = 0;
   out_5600525409187939404[173] = 0;
   out_5600525409187939404[174] = 0;
   out_5600525409187939404[175] = 1.0;
   out_5600525409187939404[176] = 0;
   out_5600525409187939404[177] = 0;
   out_5600525409187939404[178] = 0;
   out_5600525409187939404[179] = 0;
   out_5600525409187939404[180] = 0;
   out_5600525409187939404[181] = 0;
   out_5600525409187939404[182] = 0;
   out_5600525409187939404[183] = 0;
   out_5600525409187939404[184] = 0;
   out_5600525409187939404[185] = 0;
   out_5600525409187939404[186] = 0;
   out_5600525409187939404[187] = 0;
   out_5600525409187939404[188] = 0;
   out_5600525409187939404[189] = 0;
   out_5600525409187939404[190] = 0;
   out_5600525409187939404[191] = 0;
   out_5600525409187939404[192] = 0;
   out_5600525409187939404[193] = 0;
   out_5600525409187939404[194] = 0;
   out_5600525409187939404[195] = 0;
   out_5600525409187939404[196] = 0;
   out_5600525409187939404[197] = 1.0;
   out_5600525409187939404[198] = 0;
   out_5600525409187939404[199] = 0;
   out_5600525409187939404[200] = 0;
   out_5600525409187939404[201] = 0;
   out_5600525409187939404[202] = 0;
   out_5600525409187939404[203] = 0;
   out_5600525409187939404[204] = 0;
   out_5600525409187939404[205] = 0;
   out_5600525409187939404[206] = 0;
   out_5600525409187939404[207] = 0;
   out_5600525409187939404[208] = 0;
   out_5600525409187939404[209] = 0;
   out_5600525409187939404[210] = 0;
   out_5600525409187939404[211] = 0;
   out_5600525409187939404[212] = 0;
   out_5600525409187939404[213] = 0;
   out_5600525409187939404[214] = 0;
   out_5600525409187939404[215] = 0;
   out_5600525409187939404[216] = 0;
   out_5600525409187939404[217] = 0;
   out_5600525409187939404[218] = 0;
   out_5600525409187939404[219] = 1.0;
   out_5600525409187939404[220] = 0;
   out_5600525409187939404[221] = 0;
   out_5600525409187939404[222] = 0;
   out_5600525409187939404[223] = 0;
   out_5600525409187939404[224] = 0;
   out_5600525409187939404[225] = 0;
   out_5600525409187939404[226] = 0;
   out_5600525409187939404[227] = 0;
   out_5600525409187939404[228] = 0;
   out_5600525409187939404[229] = 0;
   out_5600525409187939404[230] = 0;
   out_5600525409187939404[231] = 0;
   out_5600525409187939404[232] = 0;
   out_5600525409187939404[233] = 0;
   out_5600525409187939404[234] = 0;
   out_5600525409187939404[235] = 0;
   out_5600525409187939404[236] = 0;
   out_5600525409187939404[237] = 0;
   out_5600525409187939404[238] = 0;
   out_5600525409187939404[239] = 0;
   out_5600525409187939404[240] = 0;
   out_5600525409187939404[241] = 1.0;
   out_5600525409187939404[242] = 0;
   out_5600525409187939404[243] = 0;
   out_5600525409187939404[244] = 0;
   out_5600525409187939404[245] = 0;
   out_5600525409187939404[246] = 0;
   out_5600525409187939404[247] = 0;
   out_5600525409187939404[248] = 0;
   out_5600525409187939404[249] = 0;
   out_5600525409187939404[250] = 0;
   out_5600525409187939404[251] = 0;
   out_5600525409187939404[252] = 0;
   out_5600525409187939404[253] = 0;
   out_5600525409187939404[254] = 0;
   out_5600525409187939404[255] = 0;
   out_5600525409187939404[256] = 0;
   out_5600525409187939404[257] = 0;
   out_5600525409187939404[258] = 0;
   out_5600525409187939404[259] = 0;
   out_5600525409187939404[260] = 0;
   out_5600525409187939404[261] = 0;
   out_5600525409187939404[262] = 0;
   out_5600525409187939404[263] = 1.0;
   out_5600525409187939404[264] = 0;
   out_5600525409187939404[265] = 0;
   out_5600525409187939404[266] = 0;
   out_5600525409187939404[267] = 0;
   out_5600525409187939404[268] = 0;
   out_5600525409187939404[269] = 0;
   out_5600525409187939404[270] = 0;
   out_5600525409187939404[271] = 0;
   out_5600525409187939404[272] = 0;
   out_5600525409187939404[273] = 0;
   out_5600525409187939404[274] = 0;
   out_5600525409187939404[275] = 0;
   out_5600525409187939404[276] = 0;
   out_5600525409187939404[277] = 0;
   out_5600525409187939404[278] = 0;
   out_5600525409187939404[279] = 0;
   out_5600525409187939404[280] = 0;
   out_5600525409187939404[281] = 0;
   out_5600525409187939404[282] = 0;
   out_5600525409187939404[283] = 0;
   out_5600525409187939404[284] = 0;
   out_5600525409187939404[285] = 1.0;
   out_5600525409187939404[286] = 0;
   out_5600525409187939404[287] = 0;
   out_5600525409187939404[288] = 0;
   out_5600525409187939404[289] = 0;
   out_5600525409187939404[290] = 0;
   out_5600525409187939404[291] = 0;
   out_5600525409187939404[292] = 0;
   out_5600525409187939404[293] = 0;
   out_5600525409187939404[294] = 0;
   out_5600525409187939404[295] = 0;
   out_5600525409187939404[296] = 0;
   out_5600525409187939404[297] = 0;
   out_5600525409187939404[298] = 0;
   out_5600525409187939404[299] = 0;
   out_5600525409187939404[300] = 0;
   out_5600525409187939404[301] = 0;
   out_5600525409187939404[302] = 0;
   out_5600525409187939404[303] = 0;
   out_5600525409187939404[304] = 0;
   out_5600525409187939404[305] = 0;
   out_5600525409187939404[306] = 0;
   out_5600525409187939404[307] = 1.0;
   out_5600525409187939404[308] = 0;
   out_5600525409187939404[309] = 0;
   out_5600525409187939404[310] = 0;
   out_5600525409187939404[311] = 0;
   out_5600525409187939404[312] = 0;
   out_5600525409187939404[313] = 0;
   out_5600525409187939404[314] = 0;
   out_5600525409187939404[315] = 0;
   out_5600525409187939404[316] = 0;
   out_5600525409187939404[317] = 0;
   out_5600525409187939404[318] = 0;
   out_5600525409187939404[319] = 0;
   out_5600525409187939404[320] = 0;
   out_5600525409187939404[321] = 0;
   out_5600525409187939404[322] = 0;
   out_5600525409187939404[323] = 0;
   out_5600525409187939404[324] = 0;
   out_5600525409187939404[325] = 0;
   out_5600525409187939404[326] = 0;
   out_5600525409187939404[327] = 0;
   out_5600525409187939404[328] = 0;
   out_5600525409187939404[329] = 1.0;
   out_5600525409187939404[330] = 0;
   out_5600525409187939404[331] = 0;
   out_5600525409187939404[332] = 0;
   out_5600525409187939404[333] = 0;
   out_5600525409187939404[334] = 0;
   out_5600525409187939404[335] = 0;
   out_5600525409187939404[336] = 0;
   out_5600525409187939404[337] = 0;
   out_5600525409187939404[338] = 0;
   out_5600525409187939404[339] = 0;
   out_5600525409187939404[340] = 0;
   out_5600525409187939404[341] = 0;
   out_5600525409187939404[342] = 0;
   out_5600525409187939404[343] = 0;
   out_5600525409187939404[344] = 0;
   out_5600525409187939404[345] = 0;
   out_5600525409187939404[346] = 0;
   out_5600525409187939404[347] = 0;
   out_5600525409187939404[348] = 0;
   out_5600525409187939404[349] = 0;
   out_5600525409187939404[350] = 0;
   out_5600525409187939404[351] = 1.0;
   out_5600525409187939404[352] = 0;
   out_5600525409187939404[353] = 0;
   out_5600525409187939404[354] = 0;
   out_5600525409187939404[355] = 0;
   out_5600525409187939404[356] = 0;
   out_5600525409187939404[357] = 0;
   out_5600525409187939404[358] = 0;
   out_5600525409187939404[359] = 0;
   out_5600525409187939404[360] = 0;
   out_5600525409187939404[361] = 0;
   out_5600525409187939404[362] = 0;
   out_5600525409187939404[363] = 0;
   out_5600525409187939404[364] = 0;
   out_5600525409187939404[365] = 0;
   out_5600525409187939404[366] = 0;
   out_5600525409187939404[367] = 0;
   out_5600525409187939404[368] = 0;
   out_5600525409187939404[369] = 0;
   out_5600525409187939404[370] = 0;
   out_5600525409187939404[371] = 0;
   out_5600525409187939404[372] = 0;
   out_5600525409187939404[373] = 1.0;
   out_5600525409187939404[374] = 0;
   out_5600525409187939404[375] = 0;
   out_5600525409187939404[376] = 0;
   out_5600525409187939404[377] = 0;
   out_5600525409187939404[378] = 0;
   out_5600525409187939404[379] = 0;
   out_5600525409187939404[380] = 0;
   out_5600525409187939404[381] = 0;
   out_5600525409187939404[382] = 0;
   out_5600525409187939404[383] = 0;
   out_5600525409187939404[384] = 0;
   out_5600525409187939404[385] = 0;
   out_5600525409187939404[386] = 0;
   out_5600525409187939404[387] = 0;
   out_5600525409187939404[388] = 0;
   out_5600525409187939404[389] = 0;
   out_5600525409187939404[390] = 0;
   out_5600525409187939404[391] = 0;
   out_5600525409187939404[392] = 0;
   out_5600525409187939404[393] = 0;
   out_5600525409187939404[394] = 0;
   out_5600525409187939404[395] = 1.0;
   out_5600525409187939404[396] = 0;
   out_5600525409187939404[397] = 0;
   out_5600525409187939404[398] = 0;
   out_5600525409187939404[399] = 0;
   out_5600525409187939404[400] = 0;
   out_5600525409187939404[401] = 0;
   out_5600525409187939404[402] = 0;
   out_5600525409187939404[403] = 0;
   out_5600525409187939404[404] = 0;
   out_5600525409187939404[405] = 0;
   out_5600525409187939404[406] = 0;
   out_5600525409187939404[407] = 0;
   out_5600525409187939404[408] = 0;
   out_5600525409187939404[409] = 0;
   out_5600525409187939404[410] = 0;
   out_5600525409187939404[411] = 0;
   out_5600525409187939404[412] = 0;
   out_5600525409187939404[413] = 0;
   out_5600525409187939404[414] = 0;
   out_5600525409187939404[415] = 0;
   out_5600525409187939404[416] = 0;
   out_5600525409187939404[417] = 1.0;
   out_5600525409187939404[418] = 0;
   out_5600525409187939404[419] = 0;
   out_5600525409187939404[420] = 0;
   out_5600525409187939404[421] = 0;
   out_5600525409187939404[422] = 0;
   out_5600525409187939404[423] = 0;
   out_5600525409187939404[424] = 0;
   out_5600525409187939404[425] = 0;
   out_5600525409187939404[426] = 0;
   out_5600525409187939404[427] = 0;
   out_5600525409187939404[428] = 0;
   out_5600525409187939404[429] = 0;
   out_5600525409187939404[430] = 0;
   out_5600525409187939404[431] = 0;
   out_5600525409187939404[432] = 0;
   out_5600525409187939404[433] = 0;
   out_5600525409187939404[434] = 0;
   out_5600525409187939404[435] = 0;
   out_5600525409187939404[436] = 0;
   out_5600525409187939404[437] = 0;
   out_5600525409187939404[438] = 0;
   out_5600525409187939404[439] = 1.0;
   out_5600525409187939404[440] = 0;
   out_5600525409187939404[441] = 0;
   out_5600525409187939404[442] = 0;
   out_5600525409187939404[443] = 0;
   out_5600525409187939404[444] = 0;
   out_5600525409187939404[445] = 0;
   out_5600525409187939404[446] = 0;
   out_5600525409187939404[447] = 0;
   out_5600525409187939404[448] = 0;
   out_5600525409187939404[449] = 0;
   out_5600525409187939404[450] = 0;
   out_5600525409187939404[451] = 0;
   out_5600525409187939404[452] = 0;
   out_5600525409187939404[453] = 0;
   out_5600525409187939404[454] = 0;
   out_5600525409187939404[455] = 0;
   out_5600525409187939404[456] = 0;
   out_5600525409187939404[457] = 0;
   out_5600525409187939404[458] = 0;
   out_5600525409187939404[459] = 0;
   out_5600525409187939404[460] = 0;
   out_5600525409187939404[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1674747573228821627) {
   out_1674747573228821627[0] = dt*state[7] + state[0];
   out_1674747573228821627[1] = dt*state[8] + state[1];
   out_1674747573228821627[2] = dt*state[9] + state[2];
   out_1674747573228821627[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1674747573228821627[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1674747573228821627[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1674747573228821627[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1674747573228821627[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1674747573228821627[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1674747573228821627[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1674747573228821627[10] = state[10];
   out_1674747573228821627[11] = state[11];
   out_1674747573228821627[12] = state[12];
   out_1674747573228821627[13] = state[13];
   out_1674747573228821627[14] = state[14];
   out_1674747573228821627[15] = state[15];
   out_1674747573228821627[16] = state[16];
   out_1674747573228821627[17] = state[17];
   out_1674747573228821627[18] = state[18];
   out_1674747573228821627[19] = state[19];
   out_1674747573228821627[20] = state[20];
   out_1674747573228821627[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2662974268483097137) {
   out_2662974268483097137[0] = 1;
   out_2662974268483097137[1] = 0;
   out_2662974268483097137[2] = 0;
   out_2662974268483097137[3] = 0;
   out_2662974268483097137[4] = 0;
   out_2662974268483097137[5] = 0;
   out_2662974268483097137[6] = dt;
   out_2662974268483097137[7] = 0;
   out_2662974268483097137[8] = 0;
   out_2662974268483097137[9] = 0;
   out_2662974268483097137[10] = 0;
   out_2662974268483097137[11] = 0;
   out_2662974268483097137[12] = 0;
   out_2662974268483097137[13] = 0;
   out_2662974268483097137[14] = 0;
   out_2662974268483097137[15] = 0;
   out_2662974268483097137[16] = 0;
   out_2662974268483097137[17] = 0;
   out_2662974268483097137[18] = 0;
   out_2662974268483097137[19] = 0;
   out_2662974268483097137[20] = 0;
   out_2662974268483097137[21] = 0;
   out_2662974268483097137[22] = 1;
   out_2662974268483097137[23] = 0;
   out_2662974268483097137[24] = 0;
   out_2662974268483097137[25] = 0;
   out_2662974268483097137[26] = 0;
   out_2662974268483097137[27] = 0;
   out_2662974268483097137[28] = dt;
   out_2662974268483097137[29] = 0;
   out_2662974268483097137[30] = 0;
   out_2662974268483097137[31] = 0;
   out_2662974268483097137[32] = 0;
   out_2662974268483097137[33] = 0;
   out_2662974268483097137[34] = 0;
   out_2662974268483097137[35] = 0;
   out_2662974268483097137[36] = 0;
   out_2662974268483097137[37] = 0;
   out_2662974268483097137[38] = 0;
   out_2662974268483097137[39] = 0;
   out_2662974268483097137[40] = 0;
   out_2662974268483097137[41] = 0;
   out_2662974268483097137[42] = 0;
   out_2662974268483097137[43] = 0;
   out_2662974268483097137[44] = 1;
   out_2662974268483097137[45] = 0;
   out_2662974268483097137[46] = 0;
   out_2662974268483097137[47] = 0;
   out_2662974268483097137[48] = 0;
   out_2662974268483097137[49] = 0;
   out_2662974268483097137[50] = dt;
   out_2662974268483097137[51] = 0;
   out_2662974268483097137[52] = 0;
   out_2662974268483097137[53] = 0;
   out_2662974268483097137[54] = 0;
   out_2662974268483097137[55] = 0;
   out_2662974268483097137[56] = 0;
   out_2662974268483097137[57] = 0;
   out_2662974268483097137[58] = 0;
   out_2662974268483097137[59] = 0;
   out_2662974268483097137[60] = 0;
   out_2662974268483097137[61] = 0;
   out_2662974268483097137[62] = 0;
   out_2662974268483097137[63] = 0;
   out_2662974268483097137[64] = 0;
   out_2662974268483097137[65] = 0;
   out_2662974268483097137[66] = 1;
   out_2662974268483097137[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2662974268483097137[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2662974268483097137[69] = 0;
   out_2662974268483097137[70] = 0;
   out_2662974268483097137[71] = 0;
   out_2662974268483097137[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2662974268483097137[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2662974268483097137[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2662974268483097137[75] = 0;
   out_2662974268483097137[76] = 0;
   out_2662974268483097137[77] = 0;
   out_2662974268483097137[78] = 0;
   out_2662974268483097137[79] = 0;
   out_2662974268483097137[80] = 0;
   out_2662974268483097137[81] = 0;
   out_2662974268483097137[82] = 0;
   out_2662974268483097137[83] = 0;
   out_2662974268483097137[84] = 0;
   out_2662974268483097137[85] = 0;
   out_2662974268483097137[86] = 0;
   out_2662974268483097137[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2662974268483097137[88] = 1;
   out_2662974268483097137[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2662974268483097137[90] = 0;
   out_2662974268483097137[91] = 0;
   out_2662974268483097137[92] = 0;
   out_2662974268483097137[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2662974268483097137[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2662974268483097137[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2662974268483097137[96] = 0;
   out_2662974268483097137[97] = 0;
   out_2662974268483097137[98] = 0;
   out_2662974268483097137[99] = 0;
   out_2662974268483097137[100] = 0;
   out_2662974268483097137[101] = 0;
   out_2662974268483097137[102] = 0;
   out_2662974268483097137[103] = 0;
   out_2662974268483097137[104] = 0;
   out_2662974268483097137[105] = 0;
   out_2662974268483097137[106] = 0;
   out_2662974268483097137[107] = 0;
   out_2662974268483097137[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2662974268483097137[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2662974268483097137[110] = 1;
   out_2662974268483097137[111] = 0;
   out_2662974268483097137[112] = 0;
   out_2662974268483097137[113] = 0;
   out_2662974268483097137[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2662974268483097137[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2662974268483097137[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2662974268483097137[117] = 0;
   out_2662974268483097137[118] = 0;
   out_2662974268483097137[119] = 0;
   out_2662974268483097137[120] = 0;
   out_2662974268483097137[121] = 0;
   out_2662974268483097137[122] = 0;
   out_2662974268483097137[123] = 0;
   out_2662974268483097137[124] = 0;
   out_2662974268483097137[125] = 0;
   out_2662974268483097137[126] = 0;
   out_2662974268483097137[127] = 0;
   out_2662974268483097137[128] = 0;
   out_2662974268483097137[129] = 0;
   out_2662974268483097137[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2662974268483097137[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2662974268483097137[132] = 1;
   out_2662974268483097137[133] = 0;
   out_2662974268483097137[134] = 0;
   out_2662974268483097137[135] = 0;
   out_2662974268483097137[136] = 0;
   out_2662974268483097137[137] = 0;
   out_2662974268483097137[138] = 0;
   out_2662974268483097137[139] = 0;
   out_2662974268483097137[140] = 0;
   out_2662974268483097137[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2662974268483097137[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2662974268483097137[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2662974268483097137[144] = 0;
   out_2662974268483097137[145] = 0;
   out_2662974268483097137[146] = 0;
   out_2662974268483097137[147] = 0;
   out_2662974268483097137[148] = 0;
   out_2662974268483097137[149] = 0;
   out_2662974268483097137[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2662974268483097137[151] = 0;
   out_2662974268483097137[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2662974268483097137[153] = 0;
   out_2662974268483097137[154] = 1;
   out_2662974268483097137[155] = 0;
   out_2662974268483097137[156] = 0;
   out_2662974268483097137[157] = 0;
   out_2662974268483097137[158] = 0;
   out_2662974268483097137[159] = 0;
   out_2662974268483097137[160] = 0;
   out_2662974268483097137[161] = 0;
   out_2662974268483097137[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2662974268483097137[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2662974268483097137[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2662974268483097137[165] = 0;
   out_2662974268483097137[166] = 0;
   out_2662974268483097137[167] = 0;
   out_2662974268483097137[168] = 0;
   out_2662974268483097137[169] = 0;
   out_2662974268483097137[170] = 0;
   out_2662974268483097137[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2662974268483097137[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2662974268483097137[173] = 0;
   out_2662974268483097137[174] = 0;
   out_2662974268483097137[175] = 0;
   out_2662974268483097137[176] = 1;
   out_2662974268483097137[177] = 0;
   out_2662974268483097137[178] = 0;
   out_2662974268483097137[179] = 0;
   out_2662974268483097137[180] = 0;
   out_2662974268483097137[181] = 0;
   out_2662974268483097137[182] = 0;
   out_2662974268483097137[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2662974268483097137[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2662974268483097137[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2662974268483097137[186] = 0;
   out_2662974268483097137[187] = 0;
   out_2662974268483097137[188] = 0;
   out_2662974268483097137[189] = 0;
   out_2662974268483097137[190] = 0;
   out_2662974268483097137[191] = 0;
   out_2662974268483097137[192] = 0;
   out_2662974268483097137[193] = 0;
   out_2662974268483097137[194] = 0;
   out_2662974268483097137[195] = 0;
   out_2662974268483097137[196] = 0;
   out_2662974268483097137[197] = 0;
   out_2662974268483097137[198] = 1;
   out_2662974268483097137[199] = 0;
   out_2662974268483097137[200] = 0;
   out_2662974268483097137[201] = 0;
   out_2662974268483097137[202] = 0;
   out_2662974268483097137[203] = 0;
   out_2662974268483097137[204] = 0;
   out_2662974268483097137[205] = 0;
   out_2662974268483097137[206] = 0;
   out_2662974268483097137[207] = 0;
   out_2662974268483097137[208] = 0;
   out_2662974268483097137[209] = 0;
   out_2662974268483097137[210] = 0;
   out_2662974268483097137[211] = 0;
   out_2662974268483097137[212] = 0;
   out_2662974268483097137[213] = 0;
   out_2662974268483097137[214] = 0;
   out_2662974268483097137[215] = 0;
   out_2662974268483097137[216] = 0;
   out_2662974268483097137[217] = 0;
   out_2662974268483097137[218] = 0;
   out_2662974268483097137[219] = 0;
   out_2662974268483097137[220] = 1;
   out_2662974268483097137[221] = 0;
   out_2662974268483097137[222] = 0;
   out_2662974268483097137[223] = 0;
   out_2662974268483097137[224] = 0;
   out_2662974268483097137[225] = 0;
   out_2662974268483097137[226] = 0;
   out_2662974268483097137[227] = 0;
   out_2662974268483097137[228] = 0;
   out_2662974268483097137[229] = 0;
   out_2662974268483097137[230] = 0;
   out_2662974268483097137[231] = 0;
   out_2662974268483097137[232] = 0;
   out_2662974268483097137[233] = 0;
   out_2662974268483097137[234] = 0;
   out_2662974268483097137[235] = 0;
   out_2662974268483097137[236] = 0;
   out_2662974268483097137[237] = 0;
   out_2662974268483097137[238] = 0;
   out_2662974268483097137[239] = 0;
   out_2662974268483097137[240] = 0;
   out_2662974268483097137[241] = 0;
   out_2662974268483097137[242] = 1;
   out_2662974268483097137[243] = 0;
   out_2662974268483097137[244] = 0;
   out_2662974268483097137[245] = 0;
   out_2662974268483097137[246] = 0;
   out_2662974268483097137[247] = 0;
   out_2662974268483097137[248] = 0;
   out_2662974268483097137[249] = 0;
   out_2662974268483097137[250] = 0;
   out_2662974268483097137[251] = 0;
   out_2662974268483097137[252] = 0;
   out_2662974268483097137[253] = 0;
   out_2662974268483097137[254] = 0;
   out_2662974268483097137[255] = 0;
   out_2662974268483097137[256] = 0;
   out_2662974268483097137[257] = 0;
   out_2662974268483097137[258] = 0;
   out_2662974268483097137[259] = 0;
   out_2662974268483097137[260] = 0;
   out_2662974268483097137[261] = 0;
   out_2662974268483097137[262] = 0;
   out_2662974268483097137[263] = 0;
   out_2662974268483097137[264] = 1;
   out_2662974268483097137[265] = 0;
   out_2662974268483097137[266] = 0;
   out_2662974268483097137[267] = 0;
   out_2662974268483097137[268] = 0;
   out_2662974268483097137[269] = 0;
   out_2662974268483097137[270] = 0;
   out_2662974268483097137[271] = 0;
   out_2662974268483097137[272] = 0;
   out_2662974268483097137[273] = 0;
   out_2662974268483097137[274] = 0;
   out_2662974268483097137[275] = 0;
   out_2662974268483097137[276] = 0;
   out_2662974268483097137[277] = 0;
   out_2662974268483097137[278] = 0;
   out_2662974268483097137[279] = 0;
   out_2662974268483097137[280] = 0;
   out_2662974268483097137[281] = 0;
   out_2662974268483097137[282] = 0;
   out_2662974268483097137[283] = 0;
   out_2662974268483097137[284] = 0;
   out_2662974268483097137[285] = 0;
   out_2662974268483097137[286] = 1;
   out_2662974268483097137[287] = 0;
   out_2662974268483097137[288] = 0;
   out_2662974268483097137[289] = 0;
   out_2662974268483097137[290] = 0;
   out_2662974268483097137[291] = 0;
   out_2662974268483097137[292] = 0;
   out_2662974268483097137[293] = 0;
   out_2662974268483097137[294] = 0;
   out_2662974268483097137[295] = 0;
   out_2662974268483097137[296] = 0;
   out_2662974268483097137[297] = 0;
   out_2662974268483097137[298] = 0;
   out_2662974268483097137[299] = 0;
   out_2662974268483097137[300] = 0;
   out_2662974268483097137[301] = 0;
   out_2662974268483097137[302] = 0;
   out_2662974268483097137[303] = 0;
   out_2662974268483097137[304] = 0;
   out_2662974268483097137[305] = 0;
   out_2662974268483097137[306] = 0;
   out_2662974268483097137[307] = 0;
   out_2662974268483097137[308] = 1;
   out_2662974268483097137[309] = 0;
   out_2662974268483097137[310] = 0;
   out_2662974268483097137[311] = 0;
   out_2662974268483097137[312] = 0;
   out_2662974268483097137[313] = 0;
   out_2662974268483097137[314] = 0;
   out_2662974268483097137[315] = 0;
   out_2662974268483097137[316] = 0;
   out_2662974268483097137[317] = 0;
   out_2662974268483097137[318] = 0;
   out_2662974268483097137[319] = 0;
   out_2662974268483097137[320] = 0;
   out_2662974268483097137[321] = 0;
   out_2662974268483097137[322] = 0;
   out_2662974268483097137[323] = 0;
   out_2662974268483097137[324] = 0;
   out_2662974268483097137[325] = 0;
   out_2662974268483097137[326] = 0;
   out_2662974268483097137[327] = 0;
   out_2662974268483097137[328] = 0;
   out_2662974268483097137[329] = 0;
   out_2662974268483097137[330] = 1;
   out_2662974268483097137[331] = 0;
   out_2662974268483097137[332] = 0;
   out_2662974268483097137[333] = 0;
   out_2662974268483097137[334] = 0;
   out_2662974268483097137[335] = 0;
   out_2662974268483097137[336] = 0;
   out_2662974268483097137[337] = 0;
   out_2662974268483097137[338] = 0;
   out_2662974268483097137[339] = 0;
   out_2662974268483097137[340] = 0;
   out_2662974268483097137[341] = 0;
   out_2662974268483097137[342] = 0;
   out_2662974268483097137[343] = 0;
   out_2662974268483097137[344] = 0;
   out_2662974268483097137[345] = 0;
   out_2662974268483097137[346] = 0;
   out_2662974268483097137[347] = 0;
   out_2662974268483097137[348] = 0;
   out_2662974268483097137[349] = 0;
   out_2662974268483097137[350] = 0;
   out_2662974268483097137[351] = 0;
   out_2662974268483097137[352] = 1;
   out_2662974268483097137[353] = 0;
   out_2662974268483097137[354] = 0;
   out_2662974268483097137[355] = 0;
   out_2662974268483097137[356] = 0;
   out_2662974268483097137[357] = 0;
   out_2662974268483097137[358] = 0;
   out_2662974268483097137[359] = 0;
   out_2662974268483097137[360] = 0;
   out_2662974268483097137[361] = 0;
   out_2662974268483097137[362] = 0;
   out_2662974268483097137[363] = 0;
   out_2662974268483097137[364] = 0;
   out_2662974268483097137[365] = 0;
   out_2662974268483097137[366] = 0;
   out_2662974268483097137[367] = 0;
   out_2662974268483097137[368] = 0;
   out_2662974268483097137[369] = 0;
   out_2662974268483097137[370] = 0;
   out_2662974268483097137[371] = 0;
   out_2662974268483097137[372] = 0;
   out_2662974268483097137[373] = 0;
   out_2662974268483097137[374] = 1;
   out_2662974268483097137[375] = 0;
   out_2662974268483097137[376] = 0;
   out_2662974268483097137[377] = 0;
   out_2662974268483097137[378] = 0;
   out_2662974268483097137[379] = 0;
   out_2662974268483097137[380] = 0;
   out_2662974268483097137[381] = 0;
   out_2662974268483097137[382] = 0;
   out_2662974268483097137[383] = 0;
   out_2662974268483097137[384] = 0;
   out_2662974268483097137[385] = 0;
   out_2662974268483097137[386] = 0;
   out_2662974268483097137[387] = 0;
   out_2662974268483097137[388] = 0;
   out_2662974268483097137[389] = 0;
   out_2662974268483097137[390] = 0;
   out_2662974268483097137[391] = 0;
   out_2662974268483097137[392] = 0;
   out_2662974268483097137[393] = 0;
   out_2662974268483097137[394] = 0;
   out_2662974268483097137[395] = 0;
   out_2662974268483097137[396] = 1;
   out_2662974268483097137[397] = 0;
   out_2662974268483097137[398] = 0;
   out_2662974268483097137[399] = 0;
   out_2662974268483097137[400] = 0;
   out_2662974268483097137[401] = 0;
   out_2662974268483097137[402] = 0;
   out_2662974268483097137[403] = 0;
   out_2662974268483097137[404] = 0;
   out_2662974268483097137[405] = 0;
   out_2662974268483097137[406] = 0;
   out_2662974268483097137[407] = 0;
   out_2662974268483097137[408] = 0;
   out_2662974268483097137[409] = 0;
   out_2662974268483097137[410] = 0;
   out_2662974268483097137[411] = 0;
   out_2662974268483097137[412] = 0;
   out_2662974268483097137[413] = 0;
   out_2662974268483097137[414] = 0;
   out_2662974268483097137[415] = 0;
   out_2662974268483097137[416] = 0;
   out_2662974268483097137[417] = 0;
   out_2662974268483097137[418] = 1;
   out_2662974268483097137[419] = 0;
   out_2662974268483097137[420] = 0;
   out_2662974268483097137[421] = 0;
   out_2662974268483097137[422] = 0;
   out_2662974268483097137[423] = 0;
   out_2662974268483097137[424] = 0;
   out_2662974268483097137[425] = 0;
   out_2662974268483097137[426] = 0;
   out_2662974268483097137[427] = 0;
   out_2662974268483097137[428] = 0;
   out_2662974268483097137[429] = 0;
   out_2662974268483097137[430] = 0;
   out_2662974268483097137[431] = 0;
   out_2662974268483097137[432] = 0;
   out_2662974268483097137[433] = 0;
   out_2662974268483097137[434] = 0;
   out_2662974268483097137[435] = 0;
   out_2662974268483097137[436] = 0;
   out_2662974268483097137[437] = 0;
   out_2662974268483097137[438] = 0;
   out_2662974268483097137[439] = 0;
   out_2662974268483097137[440] = 1;
}
void h_4(double *state, double *unused, double *out_8249341451310559327) {
   out_8249341451310559327[0] = state[10] + state[13];
   out_8249341451310559327[1] = state[11] + state[14];
   out_8249341451310559327[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_734079717095727223) {
   out_734079717095727223[0] = 0;
   out_734079717095727223[1] = 0;
   out_734079717095727223[2] = 0;
   out_734079717095727223[3] = 0;
   out_734079717095727223[4] = 0;
   out_734079717095727223[5] = 0;
   out_734079717095727223[6] = 0;
   out_734079717095727223[7] = 0;
   out_734079717095727223[8] = 0;
   out_734079717095727223[9] = 0;
   out_734079717095727223[10] = 1;
   out_734079717095727223[11] = 0;
   out_734079717095727223[12] = 0;
   out_734079717095727223[13] = 1;
   out_734079717095727223[14] = 0;
   out_734079717095727223[15] = 0;
   out_734079717095727223[16] = 0;
   out_734079717095727223[17] = 0;
   out_734079717095727223[18] = 0;
   out_734079717095727223[19] = 0;
   out_734079717095727223[20] = 0;
   out_734079717095727223[21] = 0;
   out_734079717095727223[22] = 0;
   out_734079717095727223[23] = 0;
   out_734079717095727223[24] = 0;
   out_734079717095727223[25] = 0;
   out_734079717095727223[26] = 0;
   out_734079717095727223[27] = 0;
   out_734079717095727223[28] = 0;
   out_734079717095727223[29] = 0;
   out_734079717095727223[30] = 0;
   out_734079717095727223[31] = 0;
   out_734079717095727223[32] = 0;
   out_734079717095727223[33] = 1;
   out_734079717095727223[34] = 0;
   out_734079717095727223[35] = 0;
   out_734079717095727223[36] = 1;
   out_734079717095727223[37] = 0;
   out_734079717095727223[38] = 0;
   out_734079717095727223[39] = 0;
   out_734079717095727223[40] = 0;
   out_734079717095727223[41] = 0;
   out_734079717095727223[42] = 0;
   out_734079717095727223[43] = 0;
   out_734079717095727223[44] = 0;
   out_734079717095727223[45] = 0;
   out_734079717095727223[46] = 0;
   out_734079717095727223[47] = 0;
   out_734079717095727223[48] = 0;
   out_734079717095727223[49] = 0;
   out_734079717095727223[50] = 0;
   out_734079717095727223[51] = 0;
   out_734079717095727223[52] = 0;
   out_734079717095727223[53] = 0;
   out_734079717095727223[54] = 0;
   out_734079717095727223[55] = 0;
   out_734079717095727223[56] = 1;
   out_734079717095727223[57] = 0;
   out_734079717095727223[58] = 0;
   out_734079717095727223[59] = 1;
   out_734079717095727223[60] = 0;
   out_734079717095727223[61] = 0;
   out_734079717095727223[62] = 0;
   out_734079717095727223[63] = 0;
   out_734079717095727223[64] = 0;
   out_734079717095727223[65] = 0;
}
void h_9(double *state, double *unused, double *out_2322300930760657741) {
   out_2322300930760657741[0] = state[10];
   out_2322300930760657741[1] = state[11];
   out_2322300930760657741[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8021298652360174693) {
   out_8021298652360174693[0] = 0;
   out_8021298652360174693[1] = 0;
   out_8021298652360174693[2] = 0;
   out_8021298652360174693[3] = 0;
   out_8021298652360174693[4] = 0;
   out_8021298652360174693[5] = 0;
   out_8021298652360174693[6] = 0;
   out_8021298652360174693[7] = 0;
   out_8021298652360174693[8] = 0;
   out_8021298652360174693[9] = 0;
   out_8021298652360174693[10] = 1;
   out_8021298652360174693[11] = 0;
   out_8021298652360174693[12] = 0;
   out_8021298652360174693[13] = 0;
   out_8021298652360174693[14] = 0;
   out_8021298652360174693[15] = 0;
   out_8021298652360174693[16] = 0;
   out_8021298652360174693[17] = 0;
   out_8021298652360174693[18] = 0;
   out_8021298652360174693[19] = 0;
   out_8021298652360174693[20] = 0;
   out_8021298652360174693[21] = 0;
   out_8021298652360174693[22] = 0;
   out_8021298652360174693[23] = 0;
   out_8021298652360174693[24] = 0;
   out_8021298652360174693[25] = 0;
   out_8021298652360174693[26] = 0;
   out_8021298652360174693[27] = 0;
   out_8021298652360174693[28] = 0;
   out_8021298652360174693[29] = 0;
   out_8021298652360174693[30] = 0;
   out_8021298652360174693[31] = 0;
   out_8021298652360174693[32] = 0;
   out_8021298652360174693[33] = 1;
   out_8021298652360174693[34] = 0;
   out_8021298652360174693[35] = 0;
   out_8021298652360174693[36] = 0;
   out_8021298652360174693[37] = 0;
   out_8021298652360174693[38] = 0;
   out_8021298652360174693[39] = 0;
   out_8021298652360174693[40] = 0;
   out_8021298652360174693[41] = 0;
   out_8021298652360174693[42] = 0;
   out_8021298652360174693[43] = 0;
   out_8021298652360174693[44] = 0;
   out_8021298652360174693[45] = 0;
   out_8021298652360174693[46] = 0;
   out_8021298652360174693[47] = 0;
   out_8021298652360174693[48] = 0;
   out_8021298652360174693[49] = 0;
   out_8021298652360174693[50] = 0;
   out_8021298652360174693[51] = 0;
   out_8021298652360174693[52] = 0;
   out_8021298652360174693[53] = 0;
   out_8021298652360174693[54] = 0;
   out_8021298652360174693[55] = 0;
   out_8021298652360174693[56] = 1;
   out_8021298652360174693[57] = 0;
   out_8021298652360174693[58] = 0;
   out_8021298652360174693[59] = 0;
   out_8021298652360174693[60] = 0;
   out_8021298652360174693[61] = 0;
   out_8021298652360174693[62] = 0;
   out_8021298652360174693[63] = 0;
   out_8021298652360174693[64] = 0;
   out_8021298652360174693[65] = 0;
}
void h_10(double *state, double *unused, double *out_4615824287832200464) {
   out_4615824287832200464[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4615824287832200464[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4615824287832200464[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6556685274764548416) {
   out_6556685274764548416[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6556685274764548416[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6556685274764548416[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6556685274764548416[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6556685274764548416[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6556685274764548416[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6556685274764548416[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6556685274764548416[7] = 0;
   out_6556685274764548416[8] = 0;
   out_6556685274764548416[9] = 0;
   out_6556685274764548416[10] = 0;
   out_6556685274764548416[11] = 0;
   out_6556685274764548416[12] = 0;
   out_6556685274764548416[13] = 0;
   out_6556685274764548416[14] = 0;
   out_6556685274764548416[15] = 0;
   out_6556685274764548416[16] = 1;
   out_6556685274764548416[17] = 0;
   out_6556685274764548416[18] = 0;
   out_6556685274764548416[19] = 1;
   out_6556685274764548416[20] = 0;
   out_6556685274764548416[21] = 0;
   out_6556685274764548416[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6556685274764548416[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6556685274764548416[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6556685274764548416[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6556685274764548416[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6556685274764548416[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6556685274764548416[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6556685274764548416[29] = 0;
   out_6556685274764548416[30] = 0;
   out_6556685274764548416[31] = 0;
   out_6556685274764548416[32] = 0;
   out_6556685274764548416[33] = 0;
   out_6556685274764548416[34] = 0;
   out_6556685274764548416[35] = 0;
   out_6556685274764548416[36] = 0;
   out_6556685274764548416[37] = 0;
   out_6556685274764548416[38] = 0;
   out_6556685274764548416[39] = 1;
   out_6556685274764548416[40] = 0;
   out_6556685274764548416[41] = 0;
   out_6556685274764548416[42] = 1;
   out_6556685274764548416[43] = 0;
   out_6556685274764548416[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6556685274764548416[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6556685274764548416[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6556685274764548416[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6556685274764548416[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6556685274764548416[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6556685274764548416[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6556685274764548416[51] = 0;
   out_6556685274764548416[52] = 0;
   out_6556685274764548416[53] = 0;
   out_6556685274764548416[54] = 0;
   out_6556685274764548416[55] = 0;
   out_6556685274764548416[56] = 0;
   out_6556685274764548416[57] = 0;
   out_6556685274764548416[58] = 0;
   out_6556685274764548416[59] = 0;
   out_6556685274764548416[60] = 0;
   out_6556685274764548416[61] = 0;
   out_6556685274764548416[62] = 1;
   out_6556685274764548416[63] = 0;
   out_6556685274764548416[64] = 0;
   out_6556685274764548416[65] = 1;
}
void h_12(double *state, double *unused, double *out_5077368063104438257) {
   out_5077368063104438257[0] = state[0];
   out_5077368063104438257[1] = state[1];
   out_5077368063104438257[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5647178659947005773) {
   out_5647178659947005773[0] = 1;
   out_5647178659947005773[1] = 0;
   out_5647178659947005773[2] = 0;
   out_5647178659947005773[3] = 0;
   out_5647178659947005773[4] = 0;
   out_5647178659947005773[5] = 0;
   out_5647178659947005773[6] = 0;
   out_5647178659947005773[7] = 0;
   out_5647178659947005773[8] = 0;
   out_5647178659947005773[9] = 0;
   out_5647178659947005773[10] = 0;
   out_5647178659947005773[11] = 0;
   out_5647178659947005773[12] = 0;
   out_5647178659947005773[13] = 0;
   out_5647178659947005773[14] = 0;
   out_5647178659947005773[15] = 0;
   out_5647178659947005773[16] = 0;
   out_5647178659947005773[17] = 0;
   out_5647178659947005773[18] = 0;
   out_5647178659947005773[19] = 0;
   out_5647178659947005773[20] = 0;
   out_5647178659947005773[21] = 0;
   out_5647178659947005773[22] = 0;
   out_5647178659947005773[23] = 1;
   out_5647178659947005773[24] = 0;
   out_5647178659947005773[25] = 0;
   out_5647178659947005773[26] = 0;
   out_5647178659947005773[27] = 0;
   out_5647178659947005773[28] = 0;
   out_5647178659947005773[29] = 0;
   out_5647178659947005773[30] = 0;
   out_5647178659947005773[31] = 0;
   out_5647178659947005773[32] = 0;
   out_5647178659947005773[33] = 0;
   out_5647178659947005773[34] = 0;
   out_5647178659947005773[35] = 0;
   out_5647178659947005773[36] = 0;
   out_5647178659947005773[37] = 0;
   out_5647178659947005773[38] = 0;
   out_5647178659947005773[39] = 0;
   out_5647178659947005773[40] = 0;
   out_5647178659947005773[41] = 0;
   out_5647178659947005773[42] = 0;
   out_5647178659947005773[43] = 0;
   out_5647178659947005773[44] = 0;
   out_5647178659947005773[45] = 0;
   out_5647178659947005773[46] = 1;
   out_5647178659947005773[47] = 0;
   out_5647178659947005773[48] = 0;
   out_5647178659947005773[49] = 0;
   out_5647178659947005773[50] = 0;
   out_5647178659947005773[51] = 0;
   out_5647178659947005773[52] = 0;
   out_5647178659947005773[53] = 0;
   out_5647178659947005773[54] = 0;
   out_5647178659947005773[55] = 0;
   out_5647178659947005773[56] = 0;
   out_5647178659947005773[57] = 0;
   out_5647178659947005773[58] = 0;
   out_5647178659947005773[59] = 0;
   out_5647178659947005773[60] = 0;
   out_5647178659947005773[61] = 0;
   out_5647178659947005773[62] = 0;
   out_5647178659947005773[63] = 0;
   out_5647178659947005773[64] = 0;
   out_5647178659947005773[65] = 0;
}
void h_35(double *state, double *unused, double *out_6231900545218429087) {
   out_6231900545218429087[0] = state[7];
   out_6231900545218429087[1] = state[8];
   out_6231900545218429087[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2901615627621992064) {
   out_2901615627621992064[0] = 0;
   out_2901615627621992064[1] = 0;
   out_2901615627621992064[2] = 0;
   out_2901615627621992064[3] = 0;
   out_2901615627621992064[4] = 0;
   out_2901615627621992064[5] = 0;
   out_2901615627621992064[6] = 0;
   out_2901615627621992064[7] = 1;
   out_2901615627621992064[8] = 0;
   out_2901615627621992064[9] = 0;
   out_2901615627621992064[10] = 0;
   out_2901615627621992064[11] = 0;
   out_2901615627621992064[12] = 0;
   out_2901615627621992064[13] = 0;
   out_2901615627621992064[14] = 0;
   out_2901615627621992064[15] = 0;
   out_2901615627621992064[16] = 0;
   out_2901615627621992064[17] = 0;
   out_2901615627621992064[18] = 0;
   out_2901615627621992064[19] = 0;
   out_2901615627621992064[20] = 0;
   out_2901615627621992064[21] = 0;
   out_2901615627621992064[22] = 0;
   out_2901615627621992064[23] = 0;
   out_2901615627621992064[24] = 0;
   out_2901615627621992064[25] = 0;
   out_2901615627621992064[26] = 0;
   out_2901615627621992064[27] = 0;
   out_2901615627621992064[28] = 0;
   out_2901615627621992064[29] = 0;
   out_2901615627621992064[30] = 1;
   out_2901615627621992064[31] = 0;
   out_2901615627621992064[32] = 0;
   out_2901615627621992064[33] = 0;
   out_2901615627621992064[34] = 0;
   out_2901615627621992064[35] = 0;
   out_2901615627621992064[36] = 0;
   out_2901615627621992064[37] = 0;
   out_2901615627621992064[38] = 0;
   out_2901615627621992064[39] = 0;
   out_2901615627621992064[40] = 0;
   out_2901615627621992064[41] = 0;
   out_2901615627621992064[42] = 0;
   out_2901615627621992064[43] = 0;
   out_2901615627621992064[44] = 0;
   out_2901615627621992064[45] = 0;
   out_2901615627621992064[46] = 0;
   out_2901615627621992064[47] = 0;
   out_2901615627621992064[48] = 0;
   out_2901615627621992064[49] = 0;
   out_2901615627621992064[50] = 0;
   out_2901615627621992064[51] = 0;
   out_2901615627621992064[52] = 0;
   out_2901615627621992064[53] = 1;
   out_2901615627621992064[54] = 0;
   out_2901615627621992064[55] = 0;
   out_2901615627621992064[56] = 0;
   out_2901615627621992064[57] = 0;
   out_2901615627621992064[58] = 0;
   out_2901615627621992064[59] = 0;
   out_2901615627621992064[60] = 0;
   out_2901615627621992064[61] = 0;
   out_2901615627621992064[62] = 0;
   out_2901615627621992064[63] = 0;
   out_2901615627621992064[64] = 0;
   out_2901615627621992064[65] = 0;
}
void h_32(double *state, double *unused, double *out_5814209998727032141) {
   out_5814209998727032141[0] = state[3];
   out_5814209998727032141[1] = state[4];
   out_5814209998727032141[2] = state[5];
   out_5814209998727032141[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4231906559409075068) {
   out_4231906559409075068[0] = 0;
   out_4231906559409075068[1] = 0;
   out_4231906559409075068[2] = 0;
   out_4231906559409075068[3] = 1;
   out_4231906559409075068[4] = 0;
   out_4231906559409075068[5] = 0;
   out_4231906559409075068[6] = 0;
   out_4231906559409075068[7] = 0;
   out_4231906559409075068[8] = 0;
   out_4231906559409075068[9] = 0;
   out_4231906559409075068[10] = 0;
   out_4231906559409075068[11] = 0;
   out_4231906559409075068[12] = 0;
   out_4231906559409075068[13] = 0;
   out_4231906559409075068[14] = 0;
   out_4231906559409075068[15] = 0;
   out_4231906559409075068[16] = 0;
   out_4231906559409075068[17] = 0;
   out_4231906559409075068[18] = 0;
   out_4231906559409075068[19] = 0;
   out_4231906559409075068[20] = 0;
   out_4231906559409075068[21] = 0;
   out_4231906559409075068[22] = 0;
   out_4231906559409075068[23] = 0;
   out_4231906559409075068[24] = 0;
   out_4231906559409075068[25] = 0;
   out_4231906559409075068[26] = 1;
   out_4231906559409075068[27] = 0;
   out_4231906559409075068[28] = 0;
   out_4231906559409075068[29] = 0;
   out_4231906559409075068[30] = 0;
   out_4231906559409075068[31] = 0;
   out_4231906559409075068[32] = 0;
   out_4231906559409075068[33] = 0;
   out_4231906559409075068[34] = 0;
   out_4231906559409075068[35] = 0;
   out_4231906559409075068[36] = 0;
   out_4231906559409075068[37] = 0;
   out_4231906559409075068[38] = 0;
   out_4231906559409075068[39] = 0;
   out_4231906559409075068[40] = 0;
   out_4231906559409075068[41] = 0;
   out_4231906559409075068[42] = 0;
   out_4231906559409075068[43] = 0;
   out_4231906559409075068[44] = 0;
   out_4231906559409075068[45] = 0;
   out_4231906559409075068[46] = 0;
   out_4231906559409075068[47] = 0;
   out_4231906559409075068[48] = 0;
   out_4231906559409075068[49] = 1;
   out_4231906559409075068[50] = 0;
   out_4231906559409075068[51] = 0;
   out_4231906559409075068[52] = 0;
   out_4231906559409075068[53] = 0;
   out_4231906559409075068[54] = 0;
   out_4231906559409075068[55] = 0;
   out_4231906559409075068[56] = 0;
   out_4231906559409075068[57] = 0;
   out_4231906559409075068[58] = 0;
   out_4231906559409075068[59] = 0;
   out_4231906559409075068[60] = 0;
   out_4231906559409075068[61] = 0;
   out_4231906559409075068[62] = 0;
   out_4231906559409075068[63] = 0;
   out_4231906559409075068[64] = 0;
   out_4231906559409075068[65] = 0;
   out_4231906559409075068[66] = 0;
   out_4231906559409075068[67] = 0;
   out_4231906559409075068[68] = 0;
   out_4231906559409075068[69] = 0;
   out_4231906559409075068[70] = 0;
   out_4231906559409075068[71] = 0;
   out_4231906559409075068[72] = 1;
   out_4231906559409075068[73] = 0;
   out_4231906559409075068[74] = 0;
   out_4231906559409075068[75] = 0;
   out_4231906559409075068[76] = 0;
   out_4231906559409075068[77] = 0;
   out_4231906559409075068[78] = 0;
   out_4231906559409075068[79] = 0;
   out_4231906559409075068[80] = 0;
   out_4231906559409075068[81] = 0;
   out_4231906559409075068[82] = 0;
   out_4231906559409075068[83] = 0;
   out_4231906559409075068[84] = 0;
   out_4231906559409075068[85] = 0;
   out_4231906559409075068[86] = 0;
   out_4231906559409075068[87] = 0;
}
void h_13(double *state, double *unused, double *out_7214662002272872579) {
   out_7214662002272872579[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7214662002272872579[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7214662002272872579[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1895209294482975830) {
   out_1895209294482975830[0] = 0;
   out_1895209294482975830[1] = 0;
   out_1895209294482975830[2] = 0;
   out_1895209294482975830[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1895209294482975830[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1895209294482975830[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1895209294482975830[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1895209294482975830[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1895209294482975830[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1895209294482975830[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1895209294482975830[10] = 0;
   out_1895209294482975830[11] = 0;
   out_1895209294482975830[12] = 0;
   out_1895209294482975830[13] = 0;
   out_1895209294482975830[14] = 0;
   out_1895209294482975830[15] = 0;
   out_1895209294482975830[16] = 0;
   out_1895209294482975830[17] = 0;
   out_1895209294482975830[18] = 0;
   out_1895209294482975830[19] = 0;
   out_1895209294482975830[20] = 0;
   out_1895209294482975830[21] = 0;
   out_1895209294482975830[22] = 0;
   out_1895209294482975830[23] = 0;
   out_1895209294482975830[24] = 0;
   out_1895209294482975830[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1895209294482975830[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1895209294482975830[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1895209294482975830[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1895209294482975830[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1895209294482975830[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1895209294482975830[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1895209294482975830[32] = 0;
   out_1895209294482975830[33] = 0;
   out_1895209294482975830[34] = 0;
   out_1895209294482975830[35] = 0;
   out_1895209294482975830[36] = 0;
   out_1895209294482975830[37] = 0;
   out_1895209294482975830[38] = 0;
   out_1895209294482975830[39] = 0;
   out_1895209294482975830[40] = 0;
   out_1895209294482975830[41] = 0;
   out_1895209294482975830[42] = 0;
   out_1895209294482975830[43] = 0;
   out_1895209294482975830[44] = 0;
   out_1895209294482975830[45] = 0;
   out_1895209294482975830[46] = 0;
   out_1895209294482975830[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1895209294482975830[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1895209294482975830[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1895209294482975830[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1895209294482975830[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1895209294482975830[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1895209294482975830[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1895209294482975830[54] = 0;
   out_1895209294482975830[55] = 0;
   out_1895209294482975830[56] = 0;
   out_1895209294482975830[57] = 0;
   out_1895209294482975830[58] = 0;
   out_1895209294482975830[59] = 0;
   out_1895209294482975830[60] = 0;
   out_1895209294482975830[61] = 0;
   out_1895209294482975830[62] = 0;
   out_1895209294482975830[63] = 0;
   out_1895209294482975830[64] = 0;
   out_1895209294482975830[65] = 0;
}
void h_14(double *state, double *unused, double *out_2322300930760657741) {
   out_2322300930760657741[0] = state[10];
   out_2322300930760657741[1] = state[11];
   out_2322300930760657741[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8021298652360174693) {
   out_8021298652360174693[0] = 0;
   out_8021298652360174693[1] = 0;
   out_8021298652360174693[2] = 0;
   out_8021298652360174693[3] = 0;
   out_8021298652360174693[4] = 0;
   out_8021298652360174693[5] = 0;
   out_8021298652360174693[6] = 0;
   out_8021298652360174693[7] = 0;
   out_8021298652360174693[8] = 0;
   out_8021298652360174693[9] = 0;
   out_8021298652360174693[10] = 1;
   out_8021298652360174693[11] = 0;
   out_8021298652360174693[12] = 0;
   out_8021298652360174693[13] = 0;
   out_8021298652360174693[14] = 0;
   out_8021298652360174693[15] = 0;
   out_8021298652360174693[16] = 0;
   out_8021298652360174693[17] = 0;
   out_8021298652360174693[18] = 0;
   out_8021298652360174693[19] = 0;
   out_8021298652360174693[20] = 0;
   out_8021298652360174693[21] = 0;
   out_8021298652360174693[22] = 0;
   out_8021298652360174693[23] = 0;
   out_8021298652360174693[24] = 0;
   out_8021298652360174693[25] = 0;
   out_8021298652360174693[26] = 0;
   out_8021298652360174693[27] = 0;
   out_8021298652360174693[28] = 0;
   out_8021298652360174693[29] = 0;
   out_8021298652360174693[30] = 0;
   out_8021298652360174693[31] = 0;
   out_8021298652360174693[32] = 0;
   out_8021298652360174693[33] = 1;
   out_8021298652360174693[34] = 0;
   out_8021298652360174693[35] = 0;
   out_8021298652360174693[36] = 0;
   out_8021298652360174693[37] = 0;
   out_8021298652360174693[38] = 0;
   out_8021298652360174693[39] = 0;
   out_8021298652360174693[40] = 0;
   out_8021298652360174693[41] = 0;
   out_8021298652360174693[42] = 0;
   out_8021298652360174693[43] = 0;
   out_8021298652360174693[44] = 0;
   out_8021298652360174693[45] = 0;
   out_8021298652360174693[46] = 0;
   out_8021298652360174693[47] = 0;
   out_8021298652360174693[48] = 0;
   out_8021298652360174693[49] = 0;
   out_8021298652360174693[50] = 0;
   out_8021298652360174693[51] = 0;
   out_8021298652360174693[52] = 0;
   out_8021298652360174693[53] = 0;
   out_8021298652360174693[54] = 0;
   out_8021298652360174693[55] = 0;
   out_8021298652360174693[56] = 1;
   out_8021298652360174693[57] = 0;
   out_8021298652360174693[58] = 0;
   out_8021298652360174693[59] = 0;
   out_8021298652360174693[60] = 0;
   out_8021298652360174693[61] = 0;
   out_8021298652360174693[62] = 0;
   out_8021298652360174693[63] = 0;
   out_8021298652360174693[64] = 0;
   out_8021298652360174693[65] = 0;
}
void h_33(double *state, double *unused, double *out_5269655606650700610) {
   out_5269655606650700610[0] = state[16];
   out_5269655606650700610[1] = state[17];
   out_5269655606650700610[2] = state[18];
}
void H_33(double *state, double *unused, double *out_248941377016865540) {
   out_248941377016865540[0] = 0;
   out_248941377016865540[1] = 0;
   out_248941377016865540[2] = 0;
   out_248941377016865540[3] = 0;
   out_248941377016865540[4] = 0;
   out_248941377016865540[5] = 0;
   out_248941377016865540[6] = 0;
   out_248941377016865540[7] = 0;
   out_248941377016865540[8] = 0;
   out_248941377016865540[9] = 0;
   out_248941377016865540[10] = 0;
   out_248941377016865540[11] = 0;
   out_248941377016865540[12] = 0;
   out_248941377016865540[13] = 0;
   out_248941377016865540[14] = 0;
   out_248941377016865540[15] = 0;
   out_248941377016865540[16] = 1;
   out_248941377016865540[17] = 0;
   out_248941377016865540[18] = 0;
   out_248941377016865540[19] = 0;
   out_248941377016865540[20] = 0;
   out_248941377016865540[21] = 0;
   out_248941377016865540[22] = 0;
   out_248941377016865540[23] = 0;
   out_248941377016865540[24] = 0;
   out_248941377016865540[25] = 0;
   out_248941377016865540[26] = 0;
   out_248941377016865540[27] = 0;
   out_248941377016865540[28] = 0;
   out_248941377016865540[29] = 0;
   out_248941377016865540[30] = 0;
   out_248941377016865540[31] = 0;
   out_248941377016865540[32] = 0;
   out_248941377016865540[33] = 0;
   out_248941377016865540[34] = 0;
   out_248941377016865540[35] = 0;
   out_248941377016865540[36] = 0;
   out_248941377016865540[37] = 0;
   out_248941377016865540[38] = 0;
   out_248941377016865540[39] = 1;
   out_248941377016865540[40] = 0;
   out_248941377016865540[41] = 0;
   out_248941377016865540[42] = 0;
   out_248941377016865540[43] = 0;
   out_248941377016865540[44] = 0;
   out_248941377016865540[45] = 0;
   out_248941377016865540[46] = 0;
   out_248941377016865540[47] = 0;
   out_248941377016865540[48] = 0;
   out_248941377016865540[49] = 0;
   out_248941377016865540[50] = 0;
   out_248941377016865540[51] = 0;
   out_248941377016865540[52] = 0;
   out_248941377016865540[53] = 0;
   out_248941377016865540[54] = 0;
   out_248941377016865540[55] = 0;
   out_248941377016865540[56] = 0;
   out_248941377016865540[57] = 0;
   out_248941377016865540[58] = 0;
   out_248941377016865540[59] = 0;
   out_248941377016865540[60] = 0;
   out_248941377016865540[61] = 0;
   out_248941377016865540[62] = 1;
   out_248941377016865540[63] = 0;
   out_248941377016865540[64] = 0;
   out_248941377016865540[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7968334240474235674) {
  H(in_vec, out_7968334240474235674);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2210371994950831199) {
  err_fun(nom_x, delta_x, out_2210371994950831199);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6560080521163361192) {
  inv_err_fun(nom_x, true_x, out_6560080521163361192);
}
void live_H_mod_fun(double *state, double *out_5600525409187939404) {
  H_mod_fun(state, out_5600525409187939404);
}
void live_f_fun(double *state, double dt, double *out_1674747573228821627) {
  f_fun(state,  dt, out_1674747573228821627);
}
void live_F_fun(double *state, double dt, double *out_2662974268483097137) {
  F_fun(state,  dt, out_2662974268483097137);
}
void live_h_4(double *state, double *unused, double *out_8249341451310559327) {
  h_4(state, unused, out_8249341451310559327);
}
void live_H_4(double *state, double *unused, double *out_734079717095727223) {
  H_4(state, unused, out_734079717095727223);
}
void live_h_9(double *state, double *unused, double *out_2322300930760657741) {
  h_9(state, unused, out_2322300930760657741);
}
void live_H_9(double *state, double *unused, double *out_8021298652360174693) {
  H_9(state, unused, out_8021298652360174693);
}
void live_h_10(double *state, double *unused, double *out_4615824287832200464) {
  h_10(state, unused, out_4615824287832200464);
}
void live_H_10(double *state, double *unused, double *out_6556685274764548416) {
  H_10(state, unused, out_6556685274764548416);
}
void live_h_12(double *state, double *unused, double *out_5077368063104438257) {
  h_12(state, unused, out_5077368063104438257);
}
void live_H_12(double *state, double *unused, double *out_5647178659947005773) {
  H_12(state, unused, out_5647178659947005773);
}
void live_h_35(double *state, double *unused, double *out_6231900545218429087) {
  h_35(state, unused, out_6231900545218429087);
}
void live_H_35(double *state, double *unused, double *out_2901615627621992064) {
  H_35(state, unused, out_2901615627621992064);
}
void live_h_32(double *state, double *unused, double *out_5814209998727032141) {
  h_32(state, unused, out_5814209998727032141);
}
void live_H_32(double *state, double *unused, double *out_4231906559409075068) {
  H_32(state, unused, out_4231906559409075068);
}
void live_h_13(double *state, double *unused, double *out_7214662002272872579) {
  h_13(state, unused, out_7214662002272872579);
}
void live_H_13(double *state, double *unused, double *out_1895209294482975830) {
  H_13(state, unused, out_1895209294482975830);
}
void live_h_14(double *state, double *unused, double *out_2322300930760657741) {
  h_14(state, unused, out_2322300930760657741);
}
void live_H_14(double *state, double *unused, double *out_8021298652360174693) {
  H_14(state, unused, out_8021298652360174693);
}
void live_h_33(double *state, double *unused, double *out_5269655606650700610) {
  h_33(state, unused, out_5269655606650700610);
}
void live_H_33(double *state, double *unused, double *out_248941377016865540) {
  H_33(state, unused, out_248941377016865540);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
