#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4029624047422583028) {
   out_4029624047422583028[0] = 0;
   out_4029624047422583028[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4029624047422583028[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4029624047422583028[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4029624047422583028[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4029624047422583028[5] = -sin(in_vec[1]);
   out_4029624047422583028[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4029624047422583028[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4029624047422583028[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4029624047422583028[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4029624047422583028[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4029624047422583028[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4029624047422583028[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4029624047422583028[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4029624047422583028[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4029624047422583028[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4029624047422583028[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4029624047422583028[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_310376691841387558) {
   out_310376691841387558[0] = delta_x[0] + nom_x[0];
   out_310376691841387558[1] = delta_x[1] + nom_x[1];
   out_310376691841387558[2] = delta_x[2] + nom_x[2];
   out_310376691841387558[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_310376691841387558[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_310376691841387558[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_310376691841387558[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_310376691841387558[7] = delta_x[6] + nom_x[7];
   out_310376691841387558[8] = delta_x[7] + nom_x[8];
   out_310376691841387558[9] = delta_x[8] + nom_x[9];
   out_310376691841387558[10] = delta_x[9] + nom_x[10];
   out_310376691841387558[11] = delta_x[10] + nom_x[11];
   out_310376691841387558[12] = delta_x[11] + nom_x[12];
   out_310376691841387558[13] = delta_x[12] + nom_x[13];
   out_310376691841387558[14] = delta_x[13] + nom_x[14];
   out_310376691841387558[15] = delta_x[14] + nom_x[15];
   out_310376691841387558[16] = delta_x[15] + nom_x[16];
   out_310376691841387558[17] = delta_x[16] + nom_x[17];
   out_310376691841387558[18] = delta_x[17] + nom_x[18];
   out_310376691841387558[19] = delta_x[18] + nom_x[19];
   out_310376691841387558[20] = delta_x[19] + nom_x[20];
   out_310376691841387558[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1456132818750440010) {
   out_1456132818750440010[0] = -nom_x[0] + true_x[0];
   out_1456132818750440010[1] = -nom_x[1] + true_x[1];
   out_1456132818750440010[2] = -nom_x[2] + true_x[2];
   out_1456132818750440010[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1456132818750440010[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1456132818750440010[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1456132818750440010[6] = -nom_x[7] + true_x[7];
   out_1456132818750440010[7] = -nom_x[8] + true_x[8];
   out_1456132818750440010[8] = -nom_x[9] + true_x[9];
   out_1456132818750440010[9] = -nom_x[10] + true_x[10];
   out_1456132818750440010[10] = -nom_x[11] + true_x[11];
   out_1456132818750440010[11] = -nom_x[12] + true_x[12];
   out_1456132818750440010[12] = -nom_x[13] + true_x[13];
   out_1456132818750440010[13] = -nom_x[14] + true_x[14];
   out_1456132818750440010[14] = -nom_x[15] + true_x[15];
   out_1456132818750440010[15] = -nom_x[16] + true_x[16];
   out_1456132818750440010[16] = -nom_x[17] + true_x[17];
   out_1456132818750440010[17] = -nom_x[18] + true_x[18];
   out_1456132818750440010[18] = -nom_x[19] + true_x[19];
   out_1456132818750440010[19] = -nom_x[20] + true_x[20];
   out_1456132818750440010[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5922142170418800988) {
   out_5922142170418800988[0] = 1.0;
   out_5922142170418800988[1] = 0;
   out_5922142170418800988[2] = 0;
   out_5922142170418800988[3] = 0;
   out_5922142170418800988[4] = 0;
   out_5922142170418800988[5] = 0;
   out_5922142170418800988[6] = 0;
   out_5922142170418800988[7] = 0;
   out_5922142170418800988[8] = 0;
   out_5922142170418800988[9] = 0;
   out_5922142170418800988[10] = 0;
   out_5922142170418800988[11] = 0;
   out_5922142170418800988[12] = 0;
   out_5922142170418800988[13] = 0;
   out_5922142170418800988[14] = 0;
   out_5922142170418800988[15] = 0;
   out_5922142170418800988[16] = 0;
   out_5922142170418800988[17] = 0;
   out_5922142170418800988[18] = 0;
   out_5922142170418800988[19] = 0;
   out_5922142170418800988[20] = 0;
   out_5922142170418800988[21] = 0;
   out_5922142170418800988[22] = 1.0;
   out_5922142170418800988[23] = 0;
   out_5922142170418800988[24] = 0;
   out_5922142170418800988[25] = 0;
   out_5922142170418800988[26] = 0;
   out_5922142170418800988[27] = 0;
   out_5922142170418800988[28] = 0;
   out_5922142170418800988[29] = 0;
   out_5922142170418800988[30] = 0;
   out_5922142170418800988[31] = 0;
   out_5922142170418800988[32] = 0;
   out_5922142170418800988[33] = 0;
   out_5922142170418800988[34] = 0;
   out_5922142170418800988[35] = 0;
   out_5922142170418800988[36] = 0;
   out_5922142170418800988[37] = 0;
   out_5922142170418800988[38] = 0;
   out_5922142170418800988[39] = 0;
   out_5922142170418800988[40] = 0;
   out_5922142170418800988[41] = 0;
   out_5922142170418800988[42] = 0;
   out_5922142170418800988[43] = 0;
   out_5922142170418800988[44] = 1.0;
   out_5922142170418800988[45] = 0;
   out_5922142170418800988[46] = 0;
   out_5922142170418800988[47] = 0;
   out_5922142170418800988[48] = 0;
   out_5922142170418800988[49] = 0;
   out_5922142170418800988[50] = 0;
   out_5922142170418800988[51] = 0;
   out_5922142170418800988[52] = 0;
   out_5922142170418800988[53] = 0;
   out_5922142170418800988[54] = 0;
   out_5922142170418800988[55] = 0;
   out_5922142170418800988[56] = 0;
   out_5922142170418800988[57] = 0;
   out_5922142170418800988[58] = 0;
   out_5922142170418800988[59] = 0;
   out_5922142170418800988[60] = 0;
   out_5922142170418800988[61] = 0;
   out_5922142170418800988[62] = 0;
   out_5922142170418800988[63] = 0;
   out_5922142170418800988[64] = 0;
   out_5922142170418800988[65] = 0;
   out_5922142170418800988[66] = -0.5*state[4];
   out_5922142170418800988[67] = -0.5*state[5];
   out_5922142170418800988[68] = -0.5*state[6];
   out_5922142170418800988[69] = 0;
   out_5922142170418800988[70] = 0;
   out_5922142170418800988[71] = 0;
   out_5922142170418800988[72] = 0;
   out_5922142170418800988[73] = 0;
   out_5922142170418800988[74] = 0;
   out_5922142170418800988[75] = 0;
   out_5922142170418800988[76] = 0;
   out_5922142170418800988[77] = 0;
   out_5922142170418800988[78] = 0;
   out_5922142170418800988[79] = 0;
   out_5922142170418800988[80] = 0;
   out_5922142170418800988[81] = 0;
   out_5922142170418800988[82] = 0;
   out_5922142170418800988[83] = 0;
   out_5922142170418800988[84] = 0;
   out_5922142170418800988[85] = 0;
   out_5922142170418800988[86] = 0;
   out_5922142170418800988[87] = 0.5*state[3];
   out_5922142170418800988[88] = 0.5*state[6];
   out_5922142170418800988[89] = -0.5*state[5];
   out_5922142170418800988[90] = 0;
   out_5922142170418800988[91] = 0;
   out_5922142170418800988[92] = 0;
   out_5922142170418800988[93] = 0;
   out_5922142170418800988[94] = 0;
   out_5922142170418800988[95] = 0;
   out_5922142170418800988[96] = 0;
   out_5922142170418800988[97] = 0;
   out_5922142170418800988[98] = 0;
   out_5922142170418800988[99] = 0;
   out_5922142170418800988[100] = 0;
   out_5922142170418800988[101] = 0;
   out_5922142170418800988[102] = 0;
   out_5922142170418800988[103] = 0;
   out_5922142170418800988[104] = 0;
   out_5922142170418800988[105] = 0;
   out_5922142170418800988[106] = 0;
   out_5922142170418800988[107] = 0;
   out_5922142170418800988[108] = -0.5*state[6];
   out_5922142170418800988[109] = 0.5*state[3];
   out_5922142170418800988[110] = 0.5*state[4];
   out_5922142170418800988[111] = 0;
   out_5922142170418800988[112] = 0;
   out_5922142170418800988[113] = 0;
   out_5922142170418800988[114] = 0;
   out_5922142170418800988[115] = 0;
   out_5922142170418800988[116] = 0;
   out_5922142170418800988[117] = 0;
   out_5922142170418800988[118] = 0;
   out_5922142170418800988[119] = 0;
   out_5922142170418800988[120] = 0;
   out_5922142170418800988[121] = 0;
   out_5922142170418800988[122] = 0;
   out_5922142170418800988[123] = 0;
   out_5922142170418800988[124] = 0;
   out_5922142170418800988[125] = 0;
   out_5922142170418800988[126] = 0;
   out_5922142170418800988[127] = 0;
   out_5922142170418800988[128] = 0;
   out_5922142170418800988[129] = 0.5*state[5];
   out_5922142170418800988[130] = -0.5*state[4];
   out_5922142170418800988[131] = 0.5*state[3];
   out_5922142170418800988[132] = 0;
   out_5922142170418800988[133] = 0;
   out_5922142170418800988[134] = 0;
   out_5922142170418800988[135] = 0;
   out_5922142170418800988[136] = 0;
   out_5922142170418800988[137] = 0;
   out_5922142170418800988[138] = 0;
   out_5922142170418800988[139] = 0;
   out_5922142170418800988[140] = 0;
   out_5922142170418800988[141] = 0;
   out_5922142170418800988[142] = 0;
   out_5922142170418800988[143] = 0;
   out_5922142170418800988[144] = 0;
   out_5922142170418800988[145] = 0;
   out_5922142170418800988[146] = 0;
   out_5922142170418800988[147] = 0;
   out_5922142170418800988[148] = 0;
   out_5922142170418800988[149] = 0;
   out_5922142170418800988[150] = 0;
   out_5922142170418800988[151] = 0;
   out_5922142170418800988[152] = 0;
   out_5922142170418800988[153] = 1.0;
   out_5922142170418800988[154] = 0;
   out_5922142170418800988[155] = 0;
   out_5922142170418800988[156] = 0;
   out_5922142170418800988[157] = 0;
   out_5922142170418800988[158] = 0;
   out_5922142170418800988[159] = 0;
   out_5922142170418800988[160] = 0;
   out_5922142170418800988[161] = 0;
   out_5922142170418800988[162] = 0;
   out_5922142170418800988[163] = 0;
   out_5922142170418800988[164] = 0;
   out_5922142170418800988[165] = 0;
   out_5922142170418800988[166] = 0;
   out_5922142170418800988[167] = 0;
   out_5922142170418800988[168] = 0;
   out_5922142170418800988[169] = 0;
   out_5922142170418800988[170] = 0;
   out_5922142170418800988[171] = 0;
   out_5922142170418800988[172] = 0;
   out_5922142170418800988[173] = 0;
   out_5922142170418800988[174] = 0;
   out_5922142170418800988[175] = 1.0;
   out_5922142170418800988[176] = 0;
   out_5922142170418800988[177] = 0;
   out_5922142170418800988[178] = 0;
   out_5922142170418800988[179] = 0;
   out_5922142170418800988[180] = 0;
   out_5922142170418800988[181] = 0;
   out_5922142170418800988[182] = 0;
   out_5922142170418800988[183] = 0;
   out_5922142170418800988[184] = 0;
   out_5922142170418800988[185] = 0;
   out_5922142170418800988[186] = 0;
   out_5922142170418800988[187] = 0;
   out_5922142170418800988[188] = 0;
   out_5922142170418800988[189] = 0;
   out_5922142170418800988[190] = 0;
   out_5922142170418800988[191] = 0;
   out_5922142170418800988[192] = 0;
   out_5922142170418800988[193] = 0;
   out_5922142170418800988[194] = 0;
   out_5922142170418800988[195] = 0;
   out_5922142170418800988[196] = 0;
   out_5922142170418800988[197] = 1.0;
   out_5922142170418800988[198] = 0;
   out_5922142170418800988[199] = 0;
   out_5922142170418800988[200] = 0;
   out_5922142170418800988[201] = 0;
   out_5922142170418800988[202] = 0;
   out_5922142170418800988[203] = 0;
   out_5922142170418800988[204] = 0;
   out_5922142170418800988[205] = 0;
   out_5922142170418800988[206] = 0;
   out_5922142170418800988[207] = 0;
   out_5922142170418800988[208] = 0;
   out_5922142170418800988[209] = 0;
   out_5922142170418800988[210] = 0;
   out_5922142170418800988[211] = 0;
   out_5922142170418800988[212] = 0;
   out_5922142170418800988[213] = 0;
   out_5922142170418800988[214] = 0;
   out_5922142170418800988[215] = 0;
   out_5922142170418800988[216] = 0;
   out_5922142170418800988[217] = 0;
   out_5922142170418800988[218] = 0;
   out_5922142170418800988[219] = 1.0;
   out_5922142170418800988[220] = 0;
   out_5922142170418800988[221] = 0;
   out_5922142170418800988[222] = 0;
   out_5922142170418800988[223] = 0;
   out_5922142170418800988[224] = 0;
   out_5922142170418800988[225] = 0;
   out_5922142170418800988[226] = 0;
   out_5922142170418800988[227] = 0;
   out_5922142170418800988[228] = 0;
   out_5922142170418800988[229] = 0;
   out_5922142170418800988[230] = 0;
   out_5922142170418800988[231] = 0;
   out_5922142170418800988[232] = 0;
   out_5922142170418800988[233] = 0;
   out_5922142170418800988[234] = 0;
   out_5922142170418800988[235] = 0;
   out_5922142170418800988[236] = 0;
   out_5922142170418800988[237] = 0;
   out_5922142170418800988[238] = 0;
   out_5922142170418800988[239] = 0;
   out_5922142170418800988[240] = 0;
   out_5922142170418800988[241] = 1.0;
   out_5922142170418800988[242] = 0;
   out_5922142170418800988[243] = 0;
   out_5922142170418800988[244] = 0;
   out_5922142170418800988[245] = 0;
   out_5922142170418800988[246] = 0;
   out_5922142170418800988[247] = 0;
   out_5922142170418800988[248] = 0;
   out_5922142170418800988[249] = 0;
   out_5922142170418800988[250] = 0;
   out_5922142170418800988[251] = 0;
   out_5922142170418800988[252] = 0;
   out_5922142170418800988[253] = 0;
   out_5922142170418800988[254] = 0;
   out_5922142170418800988[255] = 0;
   out_5922142170418800988[256] = 0;
   out_5922142170418800988[257] = 0;
   out_5922142170418800988[258] = 0;
   out_5922142170418800988[259] = 0;
   out_5922142170418800988[260] = 0;
   out_5922142170418800988[261] = 0;
   out_5922142170418800988[262] = 0;
   out_5922142170418800988[263] = 1.0;
   out_5922142170418800988[264] = 0;
   out_5922142170418800988[265] = 0;
   out_5922142170418800988[266] = 0;
   out_5922142170418800988[267] = 0;
   out_5922142170418800988[268] = 0;
   out_5922142170418800988[269] = 0;
   out_5922142170418800988[270] = 0;
   out_5922142170418800988[271] = 0;
   out_5922142170418800988[272] = 0;
   out_5922142170418800988[273] = 0;
   out_5922142170418800988[274] = 0;
   out_5922142170418800988[275] = 0;
   out_5922142170418800988[276] = 0;
   out_5922142170418800988[277] = 0;
   out_5922142170418800988[278] = 0;
   out_5922142170418800988[279] = 0;
   out_5922142170418800988[280] = 0;
   out_5922142170418800988[281] = 0;
   out_5922142170418800988[282] = 0;
   out_5922142170418800988[283] = 0;
   out_5922142170418800988[284] = 0;
   out_5922142170418800988[285] = 1.0;
   out_5922142170418800988[286] = 0;
   out_5922142170418800988[287] = 0;
   out_5922142170418800988[288] = 0;
   out_5922142170418800988[289] = 0;
   out_5922142170418800988[290] = 0;
   out_5922142170418800988[291] = 0;
   out_5922142170418800988[292] = 0;
   out_5922142170418800988[293] = 0;
   out_5922142170418800988[294] = 0;
   out_5922142170418800988[295] = 0;
   out_5922142170418800988[296] = 0;
   out_5922142170418800988[297] = 0;
   out_5922142170418800988[298] = 0;
   out_5922142170418800988[299] = 0;
   out_5922142170418800988[300] = 0;
   out_5922142170418800988[301] = 0;
   out_5922142170418800988[302] = 0;
   out_5922142170418800988[303] = 0;
   out_5922142170418800988[304] = 0;
   out_5922142170418800988[305] = 0;
   out_5922142170418800988[306] = 0;
   out_5922142170418800988[307] = 1.0;
   out_5922142170418800988[308] = 0;
   out_5922142170418800988[309] = 0;
   out_5922142170418800988[310] = 0;
   out_5922142170418800988[311] = 0;
   out_5922142170418800988[312] = 0;
   out_5922142170418800988[313] = 0;
   out_5922142170418800988[314] = 0;
   out_5922142170418800988[315] = 0;
   out_5922142170418800988[316] = 0;
   out_5922142170418800988[317] = 0;
   out_5922142170418800988[318] = 0;
   out_5922142170418800988[319] = 0;
   out_5922142170418800988[320] = 0;
   out_5922142170418800988[321] = 0;
   out_5922142170418800988[322] = 0;
   out_5922142170418800988[323] = 0;
   out_5922142170418800988[324] = 0;
   out_5922142170418800988[325] = 0;
   out_5922142170418800988[326] = 0;
   out_5922142170418800988[327] = 0;
   out_5922142170418800988[328] = 0;
   out_5922142170418800988[329] = 1.0;
   out_5922142170418800988[330] = 0;
   out_5922142170418800988[331] = 0;
   out_5922142170418800988[332] = 0;
   out_5922142170418800988[333] = 0;
   out_5922142170418800988[334] = 0;
   out_5922142170418800988[335] = 0;
   out_5922142170418800988[336] = 0;
   out_5922142170418800988[337] = 0;
   out_5922142170418800988[338] = 0;
   out_5922142170418800988[339] = 0;
   out_5922142170418800988[340] = 0;
   out_5922142170418800988[341] = 0;
   out_5922142170418800988[342] = 0;
   out_5922142170418800988[343] = 0;
   out_5922142170418800988[344] = 0;
   out_5922142170418800988[345] = 0;
   out_5922142170418800988[346] = 0;
   out_5922142170418800988[347] = 0;
   out_5922142170418800988[348] = 0;
   out_5922142170418800988[349] = 0;
   out_5922142170418800988[350] = 0;
   out_5922142170418800988[351] = 1.0;
   out_5922142170418800988[352] = 0;
   out_5922142170418800988[353] = 0;
   out_5922142170418800988[354] = 0;
   out_5922142170418800988[355] = 0;
   out_5922142170418800988[356] = 0;
   out_5922142170418800988[357] = 0;
   out_5922142170418800988[358] = 0;
   out_5922142170418800988[359] = 0;
   out_5922142170418800988[360] = 0;
   out_5922142170418800988[361] = 0;
   out_5922142170418800988[362] = 0;
   out_5922142170418800988[363] = 0;
   out_5922142170418800988[364] = 0;
   out_5922142170418800988[365] = 0;
   out_5922142170418800988[366] = 0;
   out_5922142170418800988[367] = 0;
   out_5922142170418800988[368] = 0;
   out_5922142170418800988[369] = 0;
   out_5922142170418800988[370] = 0;
   out_5922142170418800988[371] = 0;
   out_5922142170418800988[372] = 0;
   out_5922142170418800988[373] = 1.0;
   out_5922142170418800988[374] = 0;
   out_5922142170418800988[375] = 0;
   out_5922142170418800988[376] = 0;
   out_5922142170418800988[377] = 0;
   out_5922142170418800988[378] = 0;
   out_5922142170418800988[379] = 0;
   out_5922142170418800988[380] = 0;
   out_5922142170418800988[381] = 0;
   out_5922142170418800988[382] = 0;
   out_5922142170418800988[383] = 0;
   out_5922142170418800988[384] = 0;
   out_5922142170418800988[385] = 0;
   out_5922142170418800988[386] = 0;
   out_5922142170418800988[387] = 0;
   out_5922142170418800988[388] = 0;
   out_5922142170418800988[389] = 0;
   out_5922142170418800988[390] = 0;
   out_5922142170418800988[391] = 0;
   out_5922142170418800988[392] = 0;
   out_5922142170418800988[393] = 0;
   out_5922142170418800988[394] = 0;
   out_5922142170418800988[395] = 1.0;
   out_5922142170418800988[396] = 0;
   out_5922142170418800988[397] = 0;
   out_5922142170418800988[398] = 0;
   out_5922142170418800988[399] = 0;
   out_5922142170418800988[400] = 0;
   out_5922142170418800988[401] = 0;
   out_5922142170418800988[402] = 0;
   out_5922142170418800988[403] = 0;
   out_5922142170418800988[404] = 0;
   out_5922142170418800988[405] = 0;
   out_5922142170418800988[406] = 0;
   out_5922142170418800988[407] = 0;
   out_5922142170418800988[408] = 0;
   out_5922142170418800988[409] = 0;
   out_5922142170418800988[410] = 0;
   out_5922142170418800988[411] = 0;
   out_5922142170418800988[412] = 0;
   out_5922142170418800988[413] = 0;
   out_5922142170418800988[414] = 0;
   out_5922142170418800988[415] = 0;
   out_5922142170418800988[416] = 0;
   out_5922142170418800988[417] = 1.0;
   out_5922142170418800988[418] = 0;
   out_5922142170418800988[419] = 0;
   out_5922142170418800988[420] = 0;
   out_5922142170418800988[421] = 0;
   out_5922142170418800988[422] = 0;
   out_5922142170418800988[423] = 0;
   out_5922142170418800988[424] = 0;
   out_5922142170418800988[425] = 0;
   out_5922142170418800988[426] = 0;
   out_5922142170418800988[427] = 0;
   out_5922142170418800988[428] = 0;
   out_5922142170418800988[429] = 0;
   out_5922142170418800988[430] = 0;
   out_5922142170418800988[431] = 0;
   out_5922142170418800988[432] = 0;
   out_5922142170418800988[433] = 0;
   out_5922142170418800988[434] = 0;
   out_5922142170418800988[435] = 0;
   out_5922142170418800988[436] = 0;
   out_5922142170418800988[437] = 0;
   out_5922142170418800988[438] = 0;
   out_5922142170418800988[439] = 1.0;
   out_5922142170418800988[440] = 0;
   out_5922142170418800988[441] = 0;
   out_5922142170418800988[442] = 0;
   out_5922142170418800988[443] = 0;
   out_5922142170418800988[444] = 0;
   out_5922142170418800988[445] = 0;
   out_5922142170418800988[446] = 0;
   out_5922142170418800988[447] = 0;
   out_5922142170418800988[448] = 0;
   out_5922142170418800988[449] = 0;
   out_5922142170418800988[450] = 0;
   out_5922142170418800988[451] = 0;
   out_5922142170418800988[452] = 0;
   out_5922142170418800988[453] = 0;
   out_5922142170418800988[454] = 0;
   out_5922142170418800988[455] = 0;
   out_5922142170418800988[456] = 0;
   out_5922142170418800988[457] = 0;
   out_5922142170418800988[458] = 0;
   out_5922142170418800988[459] = 0;
   out_5922142170418800988[460] = 0;
   out_5922142170418800988[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2273442895072544352) {
   out_2273442895072544352[0] = dt*state[7] + state[0];
   out_2273442895072544352[1] = dt*state[8] + state[1];
   out_2273442895072544352[2] = dt*state[9] + state[2];
   out_2273442895072544352[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2273442895072544352[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2273442895072544352[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2273442895072544352[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2273442895072544352[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2273442895072544352[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2273442895072544352[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2273442895072544352[10] = state[10];
   out_2273442895072544352[11] = state[11];
   out_2273442895072544352[12] = state[12];
   out_2273442895072544352[13] = state[13];
   out_2273442895072544352[14] = state[14];
   out_2273442895072544352[15] = state[15];
   out_2273442895072544352[16] = state[16];
   out_2273442895072544352[17] = state[17];
   out_2273442895072544352[18] = state[18];
   out_2273442895072544352[19] = state[19];
   out_2273442895072544352[20] = state[20];
   out_2273442895072544352[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4235384512522099094) {
   out_4235384512522099094[0] = 1;
   out_4235384512522099094[1] = 0;
   out_4235384512522099094[2] = 0;
   out_4235384512522099094[3] = 0;
   out_4235384512522099094[4] = 0;
   out_4235384512522099094[5] = 0;
   out_4235384512522099094[6] = dt;
   out_4235384512522099094[7] = 0;
   out_4235384512522099094[8] = 0;
   out_4235384512522099094[9] = 0;
   out_4235384512522099094[10] = 0;
   out_4235384512522099094[11] = 0;
   out_4235384512522099094[12] = 0;
   out_4235384512522099094[13] = 0;
   out_4235384512522099094[14] = 0;
   out_4235384512522099094[15] = 0;
   out_4235384512522099094[16] = 0;
   out_4235384512522099094[17] = 0;
   out_4235384512522099094[18] = 0;
   out_4235384512522099094[19] = 0;
   out_4235384512522099094[20] = 0;
   out_4235384512522099094[21] = 0;
   out_4235384512522099094[22] = 1;
   out_4235384512522099094[23] = 0;
   out_4235384512522099094[24] = 0;
   out_4235384512522099094[25] = 0;
   out_4235384512522099094[26] = 0;
   out_4235384512522099094[27] = 0;
   out_4235384512522099094[28] = dt;
   out_4235384512522099094[29] = 0;
   out_4235384512522099094[30] = 0;
   out_4235384512522099094[31] = 0;
   out_4235384512522099094[32] = 0;
   out_4235384512522099094[33] = 0;
   out_4235384512522099094[34] = 0;
   out_4235384512522099094[35] = 0;
   out_4235384512522099094[36] = 0;
   out_4235384512522099094[37] = 0;
   out_4235384512522099094[38] = 0;
   out_4235384512522099094[39] = 0;
   out_4235384512522099094[40] = 0;
   out_4235384512522099094[41] = 0;
   out_4235384512522099094[42] = 0;
   out_4235384512522099094[43] = 0;
   out_4235384512522099094[44] = 1;
   out_4235384512522099094[45] = 0;
   out_4235384512522099094[46] = 0;
   out_4235384512522099094[47] = 0;
   out_4235384512522099094[48] = 0;
   out_4235384512522099094[49] = 0;
   out_4235384512522099094[50] = dt;
   out_4235384512522099094[51] = 0;
   out_4235384512522099094[52] = 0;
   out_4235384512522099094[53] = 0;
   out_4235384512522099094[54] = 0;
   out_4235384512522099094[55] = 0;
   out_4235384512522099094[56] = 0;
   out_4235384512522099094[57] = 0;
   out_4235384512522099094[58] = 0;
   out_4235384512522099094[59] = 0;
   out_4235384512522099094[60] = 0;
   out_4235384512522099094[61] = 0;
   out_4235384512522099094[62] = 0;
   out_4235384512522099094[63] = 0;
   out_4235384512522099094[64] = 0;
   out_4235384512522099094[65] = 0;
   out_4235384512522099094[66] = 1;
   out_4235384512522099094[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4235384512522099094[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4235384512522099094[69] = 0;
   out_4235384512522099094[70] = 0;
   out_4235384512522099094[71] = 0;
   out_4235384512522099094[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4235384512522099094[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4235384512522099094[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4235384512522099094[75] = 0;
   out_4235384512522099094[76] = 0;
   out_4235384512522099094[77] = 0;
   out_4235384512522099094[78] = 0;
   out_4235384512522099094[79] = 0;
   out_4235384512522099094[80] = 0;
   out_4235384512522099094[81] = 0;
   out_4235384512522099094[82] = 0;
   out_4235384512522099094[83] = 0;
   out_4235384512522099094[84] = 0;
   out_4235384512522099094[85] = 0;
   out_4235384512522099094[86] = 0;
   out_4235384512522099094[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4235384512522099094[88] = 1;
   out_4235384512522099094[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4235384512522099094[90] = 0;
   out_4235384512522099094[91] = 0;
   out_4235384512522099094[92] = 0;
   out_4235384512522099094[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4235384512522099094[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4235384512522099094[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4235384512522099094[96] = 0;
   out_4235384512522099094[97] = 0;
   out_4235384512522099094[98] = 0;
   out_4235384512522099094[99] = 0;
   out_4235384512522099094[100] = 0;
   out_4235384512522099094[101] = 0;
   out_4235384512522099094[102] = 0;
   out_4235384512522099094[103] = 0;
   out_4235384512522099094[104] = 0;
   out_4235384512522099094[105] = 0;
   out_4235384512522099094[106] = 0;
   out_4235384512522099094[107] = 0;
   out_4235384512522099094[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4235384512522099094[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4235384512522099094[110] = 1;
   out_4235384512522099094[111] = 0;
   out_4235384512522099094[112] = 0;
   out_4235384512522099094[113] = 0;
   out_4235384512522099094[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4235384512522099094[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4235384512522099094[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4235384512522099094[117] = 0;
   out_4235384512522099094[118] = 0;
   out_4235384512522099094[119] = 0;
   out_4235384512522099094[120] = 0;
   out_4235384512522099094[121] = 0;
   out_4235384512522099094[122] = 0;
   out_4235384512522099094[123] = 0;
   out_4235384512522099094[124] = 0;
   out_4235384512522099094[125] = 0;
   out_4235384512522099094[126] = 0;
   out_4235384512522099094[127] = 0;
   out_4235384512522099094[128] = 0;
   out_4235384512522099094[129] = 0;
   out_4235384512522099094[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4235384512522099094[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4235384512522099094[132] = 1;
   out_4235384512522099094[133] = 0;
   out_4235384512522099094[134] = 0;
   out_4235384512522099094[135] = 0;
   out_4235384512522099094[136] = 0;
   out_4235384512522099094[137] = 0;
   out_4235384512522099094[138] = 0;
   out_4235384512522099094[139] = 0;
   out_4235384512522099094[140] = 0;
   out_4235384512522099094[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4235384512522099094[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4235384512522099094[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4235384512522099094[144] = 0;
   out_4235384512522099094[145] = 0;
   out_4235384512522099094[146] = 0;
   out_4235384512522099094[147] = 0;
   out_4235384512522099094[148] = 0;
   out_4235384512522099094[149] = 0;
   out_4235384512522099094[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4235384512522099094[151] = 0;
   out_4235384512522099094[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4235384512522099094[153] = 0;
   out_4235384512522099094[154] = 1;
   out_4235384512522099094[155] = 0;
   out_4235384512522099094[156] = 0;
   out_4235384512522099094[157] = 0;
   out_4235384512522099094[158] = 0;
   out_4235384512522099094[159] = 0;
   out_4235384512522099094[160] = 0;
   out_4235384512522099094[161] = 0;
   out_4235384512522099094[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4235384512522099094[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4235384512522099094[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4235384512522099094[165] = 0;
   out_4235384512522099094[166] = 0;
   out_4235384512522099094[167] = 0;
   out_4235384512522099094[168] = 0;
   out_4235384512522099094[169] = 0;
   out_4235384512522099094[170] = 0;
   out_4235384512522099094[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4235384512522099094[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4235384512522099094[173] = 0;
   out_4235384512522099094[174] = 0;
   out_4235384512522099094[175] = 0;
   out_4235384512522099094[176] = 1;
   out_4235384512522099094[177] = 0;
   out_4235384512522099094[178] = 0;
   out_4235384512522099094[179] = 0;
   out_4235384512522099094[180] = 0;
   out_4235384512522099094[181] = 0;
   out_4235384512522099094[182] = 0;
   out_4235384512522099094[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4235384512522099094[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4235384512522099094[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4235384512522099094[186] = 0;
   out_4235384512522099094[187] = 0;
   out_4235384512522099094[188] = 0;
   out_4235384512522099094[189] = 0;
   out_4235384512522099094[190] = 0;
   out_4235384512522099094[191] = 0;
   out_4235384512522099094[192] = 0;
   out_4235384512522099094[193] = 0;
   out_4235384512522099094[194] = 0;
   out_4235384512522099094[195] = 0;
   out_4235384512522099094[196] = 0;
   out_4235384512522099094[197] = 0;
   out_4235384512522099094[198] = 1;
   out_4235384512522099094[199] = 0;
   out_4235384512522099094[200] = 0;
   out_4235384512522099094[201] = 0;
   out_4235384512522099094[202] = 0;
   out_4235384512522099094[203] = 0;
   out_4235384512522099094[204] = 0;
   out_4235384512522099094[205] = 0;
   out_4235384512522099094[206] = 0;
   out_4235384512522099094[207] = 0;
   out_4235384512522099094[208] = 0;
   out_4235384512522099094[209] = 0;
   out_4235384512522099094[210] = 0;
   out_4235384512522099094[211] = 0;
   out_4235384512522099094[212] = 0;
   out_4235384512522099094[213] = 0;
   out_4235384512522099094[214] = 0;
   out_4235384512522099094[215] = 0;
   out_4235384512522099094[216] = 0;
   out_4235384512522099094[217] = 0;
   out_4235384512522099094[218] = 0;
   out_4235384512522099094[219] = 0;
   out_4235384512522099094[220] = 1;
   out_4235384512522099094[221] = 0;
   out_4235384512522099094[222] = 0;
   out_4235384512522099094[223] = 0;
   out_4235384512522099094[224] = 0;
   out_4235384512522099094[225] = 0;
   out_4235384512522099094[226] = 0;
   out_4235384512522099094[227] = 0;
   out_4235384512522099094[228] = 0;
   out_4235384512522099094[229] = 0;
   out_4235384512522099094[230] = 0;
   out_4235384512522099094[231] = 0;
   out_4235384512522099094[232] = 0;
   out_4235384512522099094[233] = 0;
   out_4235384512522099094[234] = 0;
   out_4235384512522099094[235] = 0;
   out_4235384512522099094[236] = 0;
   out_4235384512522099094[237] = 0;
   out_4235384512522099094[238] = 0;
   out_4235384512522099094[239] = 0;
   out_4235384512522099094[240] = 0;
   out_4235384512522099094[241] = 0;
   out_4235384512522099094[242] = 1;
   out_4235384512522099094[243] = 0;
   out_4235384512522099094[244] = 0;
   out_4235384512522099094[245] = 0;
   out_4235384512522099094[246] = 0;
   out_4235384512522099094[247] = 0;
   out_4235384512522099094[248] = 0;
   out_4235384512522099094[249] = 0;
   out_4235384512522099094[250] = 0;
   out_4235384512522099094[251] = 0;
   out_4235384512522099094[252] = 0;
   out_4235384512522099094[253] = 0;
   out_4235384512522099094[254] = 0;
   out_4235384512522099094[255] = 0;
   out_4235384512522099094[256] = 0;
   out_4235384512522099094[257] = 0;
   out_4235384512522099094[258] = 0;
   out_4235384512522099094[259] = 0;
   out_4235384512522099094[260] = 0;
   out_4235384512522099094[261] = 0;
   out_4235384512522099094[262] = 0;
   out_4235384512522099094[263] = 0;
   out_4235384512522099094[264] = 1;
   out_4235384512522099094[265] = 0;
   out_4235384512522099094[266] = 0;
   out_4235384512522099094[267] = 0;
   out_4235384512522099094[268] = 0;
   out_4235384512522099094[269] = 0;
   out_4235384512522099094[270] = 0;
   out_4235384512522099094[271] = 0;
   out_4235384512522099094[272] = 0;
   out_4235384512522099094[273] = 0;
   out_4235384512522099094[274] = 0;
   out_4235384512522099094[275] = 0;
   out_4235384512522099094[276] = 0;
   out_4235384512522099094[277] = 0;
   out_4235384512522099094[278] = 0;
   out_4235384512522099094[279] = 0;
   out_4235384512522099094[280] = 0;
   out_4235384512522099094[281] = 0;
   out_4235384512522099094[282] = 0;
   out_4235384512522099094[283] = 0;
   out_4235384512522099094[284] = 0;
   out_4235384512522099094[285] = 0;
   out_4235384512522099094[286] = 1;
   out_4235384512522099094[287] = 0;
   out_4235384512522099094[288] = 0;
   out_4235384512522099094[289] = 0;
   out_4235384512522099094[290] = 0;
   out_4235384512522099094[291] = 0;
   out_4235384512522099094[292] = 0;
   out_4235384512522099094[293] = 0;
   out_4235384512522099094[294] = 0;
   out_4235384512522099094[295] = 0;
   out_4235384512522099094[296] = 0;
   out_4235384512522099094[297] = 0;
   out_4235384512522099094[298] = 0;
   out_4235384512522099094[299] = 0;
   out_4235384512522099094[300] = 0;
   out_4235384512522099094[301] = 0;
   out_4235384512522099094[302] = 0;
   out_4235384512522099094[303] = 0;
   out_4235384512522099094[304] = 0;
   out_4235384512522099094[305] = 0;
   out_4235384512522099094[306] = 0;
   out_4235384512522099094[307] = 0;
   out_4235384512522099094[308] = 1;
   out_4235384512522099094[309] = 0;
   out_4235384512522099094[310] = 0;
   out_4235384512522099094[311] = 0;
   out_4235384512522099094[312] = 0;
   out_4235384512522099094[313] = 0;
   out_4235384512522099094[314] = 0;
   out_4235384512522099094[315] = 0;
   out_4235384512522099094[316] = 0;
   out_4235384512522099094[317] = 0;
   out_4235384512522099094[318] = 0;
   out_4235384512522099094[319] = 0;
   out_4235384512522099094[320] = 0;
   out_4235384512522099094[321] = 0;
   out_4235384512522099094[322] = 0;
   out_4235384512522099094[323] = 0;
   out_4235384512522099094[324] = 0;
   out_4235384512522099094[325] = 0;
   out_4235384512522099094[326] = 0;
   out_4235384512522099094[327] = 0;
   out_4235384512522099094[328] = 0;
   out_4235384512522099094[329] = 0;
   out_4235384512522099094[330] = 1;
   out_4235384512522099094[331] = 0;
   out_4235384512522099094[332] = 0;
   out_4235384512522099094[333] = 0;
   out_4235384512522099094[334] = 0;
   out_4235384512522099094[335] = 0;
   out_4235384512522099094[336] = 0;
   out_4235384512522099094[337] = 0;
   out_4235384512522099094[338] = 0;
   out_4235384512522099094[339] = 0;
   out_4235384512522099094[340] = 0;
   out_4235384512522099094[341] = 0;
   out_4235384512522099094[342] = 0;
   out_4235384512522099094[343] = 0;
   out_4235384512522099094[344] = 0;
   out_4235384512522099094[345] = 0;
   out_4235384512522099094[346] = 0;
   out_4235384512522099094[347] = 0;
   out_4235384512522099094[348] = 0;
   out_4235384512522099094[349] = 0;
   out_4235384512522099094[350] = 0;
   out_4235384512522099094[351] = 0;
   out_4235384512522099094[352] = 1;
   out_4235384512522099094[353] = 0;
   out_4235384512522099094[354] = 0;
   out_4235384512522099094[355] = 0;
   out_4235384512522099094[356] = 0;
   out_4235384512522099094[357] = 0;
   out_4235384512522099094[358] = 0;
   out_4235384512522099094[359] = 0;
   out_4235384512522099094[360] = 0;
   out_4235384512522099094[361] = 0;
   out_4235384512522099094[362] = 0;
   out_4235384512522099094[363] = 0;
   out_4235384512522099094[364] = 0;
   out_4235384512522099094[365] = 0;
   out_4235384512522099094[366] = 0;
   out_4235384512522099094[367] = 0;
   out_4235384512522099094[368] = 0;
   out_4235384512522099094[369] = 0;
   out_4235384512522099094[370] = 0;
   out_4235384512522099094[371] = 0;
   out_4235384512522099094[372] = 0;
   out_4235384512522099094[373] = 0;
   out_4235384512522099094[374] = 1;
   out_4235384512522099094[375] = 0;
   out_4235384512522099094[376] = 0;
   out_4235384512522099094[377] = 0;
   out_4235384512522099094[378] = 0;
   out_4235384512522099094[379] = 0;
   out_4235384512522099094[380] = 0;
   out_4235384512522099094[381] = 0;
   out_4235384512522099094[382] = 0;
   out_4235384512522099094[383] = 0;
   out_4235384512522099094[384] = 0;
   out_4235384512522099094[385] = 0;
   out_4235384512522099094[386] = 0;
   out_4235384512522099094[387] = 0;
   out_4235384512522099094[388] = 0;
   out_4235384512522099094[389] = 0;
   out_4235384512522099094[390] = 0;
   out_4235384512522099094[391] = 0;
   out_4235384512522099094[392] = 0;
   out_4235384512522099094[393] = 0;
   out_4235384512522099094[394] = 0;
   out_4235384512522099094[395] = 0;
   out_4235384512522099094[396] = 1;
   out_4235384512522099094[397] = 0;
   out_4235384512522099094[398] = 0;
   out_4235384512522099094[399] = 0;
   out_4235384512522099094[400] = 0;
   out_4235384512522099094[401] = 0;
   out_4235384512522099094[402] = 0;
   out_4235384512522099094[403] = 0;
   out_4235384512522099094[404] = 0;
   out_4235384512522099094[405] = 0;
   out_4235384512522099094[406] = 0;
   out_4235384512522099094[407] = 0;
   out_4235384512522099094[408] = 0;
   out_4235384512522099094[409] = 0;
   out_4235384512522099094[410] = 0;
   out_4235384512522099094[411] = 0;
   out_4235384512522099094[412] = 0;
   out_4235384512522099094[413] = 0;
   out_4235384512522099094[414] = 0;
   out_4235384512522099094[415] = 0;
   out_4235384512522099094[416] = 0;
   out_4235384512522099094[417] = 0;
   out_4235384512522099094[418] = 1;
   out_4235384512522099094[419] = 0;
   out_4235384512522099094[420] = 0;
   out_4235384512522099094[421] = 0;
   out_4235384512522099094[422] = 0;
   out_4235384512522099094[423] = 0;
   out_4235384512522099094[424] = 0;
   out_4235384512522099094[425] = 0;
   out_4235384512522099094[426] = 0;
   out_4235384512522099094[427] = 0;
   out_4235384512522099094[428] = 0;
   out_4235384512522099094[429] = 0;
   out_4235384512522099094[430] = 0;
   out_4235384512522099094[431] = 0;
   out_4235384512522099094[432] = 0;
   out_4235384512522099094[433] = 0;
   out_4235384512522099094[434] = 0;
   out_4235384512522099094[435] = 0;
   out_4235384512522099094[436] = 0;
   out_4235384512522099094[437] = 0;
   out_4235384512522099094[438] = 0;
   out_4235384512522099094[439] = 0;
   out_4235384512522099094[440] = 1;
}
void h_4(double *state, double *unused, double *out_3685216184752008266) {
   out_3685216184752008266[0] = state[10] + state[13];
   out_3685216184752008266[1] = state[11] + state[14];
   out_3685216184752008266[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1281723694640841136) {
   out_1281723694640841136[0] = 0;
   out_1281723694640841136[1] = 0;
   out_1281723694640841136[2] = 0;
   out_1281723694640841136[3] = 0;
   out_1281723694640841136[4] = 0;
   out_1281723694640841136[5] = 0;
   out_1281723694640841136[6] = 0;
   out_1281723694640841136[7] = 0;
   out_1281723694640841136[8] = 0;
   out_1281723694640841136[9] = 0;
   out_1281723694640841136[10] = 1;
   out_1281723694640841136[11] = 0;
   out_1281723694640841136[12] = 0;
   out_1281723694640841136[13] = 1;
   out_1281723694640841136[14] = 0;
   out_1281723694640841136[15] = 0;
   out_1281723694640841136[16] = 0;
   out_1281723694640841136[17] = 0;
   out_1281723694640841136[18] = 0;
   out_1281723694640841136[19] = 0;
   out_1281723694640841136[20] = 0;
   out_1281723694640841136[21] = 0;
   out_1281723694640841136[22] = 0;
   out_1281723694640841136[23] = 0;
   out_1281723694640841136[24] = 0;
   out_1281723694640841136[25] = 0;
   out_1281723694640841136[26] = 0;
   out_1281723694640841136[27] = 0;
   out_1281723694640841136[28] = 0;
   out_1281723694640841136[29] = 0;
   out_1281723694640841136[30] = 0;
   out_1281723694640841136[31] = 0;
   out_1281723694640841136[32] = 0;
   out_1281723694640841136[33] = 1;
   out_1281723694640841136[34] = 0;
   out_1281723694640841136[35] = 0;
   out_1281723694640841136[36] = 1;
   out_1281723694640841136[37] = 0;
   out_1281723694640841136[38] = 0;
   out_1281723694640841136[39] = 0;
   out_1281723694640841136[40] = 0;
   out_1281723694640841136[41] = 0;
   out_1281723694640841136[42] = 0;
   out_1281723694640841136[43] = 0;
   out_1281723694640841136[44] = 0;
   out_1281723694640841136[45] = 0;
   out_1281723694640841136[46] = 0;
   out_1281723694640841136[47] = 0;
   out_1281723694640841136[48] = 0;
   out_1281723694640841136[49] = 0;
   out_1281723694640841136[50] = 0;
   out_1281723694640841136[51] = 0;
   out_1281723694640841136[52] = 0;
   out_1281723694640841136[53] = 0;
   out_1281723694640841136[54] = 0;
   out_1281723694640841136[55] = 0;
   out_1281723694640841136[56] = 1;
   out_1281723694640841136[57] = 0;
   out_1281723694640841136[58] = 0;
   out_1281723694640841136[59] = 1;
   out_1281723694640841136[60] = 0;
   out_1281723694640841136[61] = 0;
   out_1281723694640841136[62] = 0;
   out_1281723694640841136[63] = 0;
   out_1281723694640841136[64] = 0;
   out_1281723694640841136[65] = 0;
}
void h_9(double *state, double *unused, double *out_2646003671663756402) {
   out_2646003671663756402[0] = state[10];
   out_2646003671663756402[1] = state[11];
   out_2646003671663756402[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6005495240623606334) {
   out_6005495240623606334[0] = 0;
   out_6005495240623606334[1] = 0;
   out_6005495240623606334[2] = 0;
   out_6005495240623606334[3] = 0;
   out_6005495240623606334[4] = 0;
   out_6005495240623606334[5] = 0;
   out_6005495240623606334[6] = 0;
   out_6005495240623606334[7] = 0;
   out_6005495240623606334[8] = 0;
   out_6005495240623606334[9] = 0;
   out_6005495240623606334[10] = 1;
   out_6005495240623606334[11] = 0;
   out_6005495240623606334[12] = 0;
   out_6005495240623606334[13] = 0;
   out_6005495240623606334[14] = 0;
   out_6005495240623606334[15] = 0;
   out_6005495240623606334[16] = 0;
   out_6005495240623606334[17] = 0;
   out_6005495240623606334[18] = 0;
   out_6005495240623606334[19] = 0;
   out_6005495240623606334[20] = 0;
   out_6005495240623606334[21] = 0;
   out_6005495240623606334[22] = 0;
   out_6005495240623606334[23] = 0;
   out_6005495240623606334[24] = 0;
   out_6005495240623606334[25] = 0;
   out_6005495240623606334[26] = 0;
   out_6005495240623606334[27] = 0;
   out_6005495240623606334[28] = 0;
   out_6005495240623606334[29] = 0;
   out_6005495240623606334[30] = 0;
   out_6005495240623606334[31] = 0;
   out_6005495240623606334[32] = 0;
   out_6005495240623606334[33] = 1;
   out_6005495240623606334[34] = 0;
   out_6005495240623606334[35] = 0;
   out_6005495240623606334[36] = 0;
   out_6005495240623606334[37] = 0;
   out_6005495240623606334[38] = 0;
   out_6005495240623606334[39] = 0;
   out_6005495240623606334[40] = 0;
   out_6005495240623606334[41] = 0;
   out_6005495240623606334[42] = 0;
   out_6005495240623606334[43] = 0;
   out_6005495240623606334[44] = 0;
   out_6005495240623606334[45] = 0;
   out_6005495240623606334[46] = 0;
   out_6005495240623606334[47] = 0;
   out_6005495240623606334[48] = 0;
   out_6005495240623606334[49] = 0;
   out_6005495240623606334[50] = 0;
   out_6005495240623606334[51] = 0;
   out_6005495240623606334[52] = 0;
   out_6005495240623606334[53] = 0;
   out_6005495240623606334[54] = 0;
   out_6005495240623606334[55] = 0;
   out_6005495240623606334[56] = 1;
   out_6005495240623606334[57] = 0;
   out_6005495240623606334[58] = 0;
   out_6005495240623606334[59] = 0;
   out_6005495240623606334[60] = 0;
   out_6005495240623606334[61] = 0;
   out_6005495240623606334[62] = 0;
   out_6005495240623606334[63] = 0;
   out_6005495240623606334[64] = 0;
   out_6005495240623606334[65] = 0;
}
void h_10(double *state, double *unused, double *out_2127462386065991370) {
   out_2127462386065991370[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2127462386065991370[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2127462386065991370[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1155592061403164186) {
   out_1155592061403164186[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1155592061403164186[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1155592061403164186[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1155592061403164186[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1155592061403164186[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1155592061403164186[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1155592061403164186[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1155592061403164186[7] = 0;
   out_1155592061403164186[8] = 0;
   out_1155592061403164186[9] = 0;
   out_1155592061403164186[10] = 0;
   out_1155592061403164186[11] = 0;
   out_1155592061403164186[12] = 0;
   out_1155592061403164186[13] = 0;
   out_1155592061403164186[14] = 0;
   out_1155592061403164186[15] = 0;
   out_1155592061403164186[16] = 1;
   out_1155592061403164186[17] = 0;
   out_1155592061403164186[18] = 0;
   out_1155592061403164186[19] = 1;
   out_1155592061403164186[20] = 0;
   out_1155592061403164186[21] = 0;
   out_1155592061403164186[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1155592061403164186[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1155592061403164186[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1155592061403164186[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1155592061403164186[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1155592061403164186[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1155592061403164186[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1155592061403164186[29] = 0;
   out_1155592061403164186[30] = 0;
   out_1155592061403164186[31] = 0;
   out_1155592061403164186[32] = 0;
   out_1155592061403164186[33] = 0;
   out_1155592061403164186[34] = 0;
   out_1155592061403164186[35] = 0;
   out_1155592061403164186[36] = 0;
   out_1155592061403164186[37] = 0;
   out_1155592061403164186[38] = 0;
   out_1155592061403164186[39] = 1;
   out_1155592061403164186[40] = 0;
   out_1155592061403164186[41] = 0;
   out_1155592061403164186[42] = 1;
   out_1155592061403164186[43] = 0;
   out_1155592061403164186[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1155592061403164186[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1155592061403164186[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1155592061403164186[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1155592061403164186[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1155592061403164186[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1155592061403164186[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1155592061403164186[51] = 0;
   out_1155592061403164186[52] = 0;
   out_1155592061403164186[53] = 0;
   out_1155592061403164186[54] = 0;
   out_1155592061403164186[55] = 0;
   out_1155592061403164186[56] = 0;
   out_1155592061403164186[57] = 0;
   out_1155592061403164186[58] = 0;
   out_1155592061403164186[59] = 0;
   out_1155592061403164186[60] = 0;
   out_1155592061403164186[61] = 0;
   out_1155592061403164186[62] = 1;
   out_1155592061403164186[63] = 0;
   out_1155592061403164186[64] = 0;
   out_1155592061403164186[65] = 1;
}
void h_12(double *state, double *unused, double *out_3690503254606561334) {
   out_3690503254606561334[0] = state[0];
   out_3690503254606561334[1] = state[1];
   out_3690503254606561334[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7662982071683574132) {
   out_7662982071683574132[0] = 1;
   out_7662982071683574132[1] = 0;
   out_7662982071683574132[2] = 0;
   out_7662982071683574132[3] = 0;
   out_7662982071683574132[4] = 0;
   out_7662982071683574132[5] = 0;
   out_7662982071683574132[6] = 0;
   out_7662982071683574132[7] = 0;
   out_7662982071683574132[8] = 0;
   out_7662982071683574132[9] = 0;
   out_7662982071683574132[10] = 0;
   out_7662982071683574132[11] = 0;
   out_7662982071683574132[12] = 0;
   out_7662982071683574132[13] = 0;
   out_7662982071683574132[14] = 0;
   out_7662982071683574132[15] = 0;
   out_7662982071683574132[16] = 0;
   out_7662982071683574132[17] = 0;
   out_7662982071683574132[18] = 0;
   out_7662982071683574132[19] = 0;
   out_7662982071683574132[20] = 0;
   out_7662982071683574132[21] = 0;
   out_7662982071683574132[22] = 0;
   out_7662982071683574132[23] = 1;
   out_7662982071683574132[24] = 0;
   out_7662982071683574132[25] = 0;
   out_7662982071683574132[26] = 0;
   out_7662982071683574132[27] = 0;
   out_7662982071683574132[28] = 0;
   out_7662982071683574132[29] = 0;
   out_7662982071683574132[30] = 0;
   out_7662982071683574132[31] = 0;
   out_7662982071683574132[32] = 0;
   out_7662982071683574132[33] = 0;
   out_7662982071683574132[34] = 0;
   out_7662982071683574132[35] = 0;
   out_7662982071683574132[36] = 0;
   out_7662982071683574132[37] = 0;
   out_7662982071683574132[38] = 0;
   out_7662982071683574132[39] = 0;
   out_7662982071683574132[40] = 0;
   out_7662982071683574132[41] = 0;
   out_7662982071683574132[42] = 0;
   out_7662982071683574132[43] = 0;
   out_7662982071683574132[44] = 0;
   out_7662982071683574132[45] = 0;
   out_7662982071683574132[46] = 1;
   out_7662982071683574132[47] = 0;
   out_7662982071683574132[48] = 0;
   out_7662982071683574132[49] = 0;
   out_7662982071683574132[50] = 0;
   out_7662982071683574132[51] = 0;
   out_7662982071683574132[52] = 0;
   out_7662982071683574132[53] = 0;
   out_7662982071683574132[54] = 0;
   out_7662982071683574132[55] = 0;
   out_7662982071683574132[56] = 0;
   out_7662982071683574132[57] = 0;
   out_7662982071683574132[58] = 0;
   out_7662982071683574132[59] = 0;
   out_7662982071683574132[60] = 0;
   out_7662982071683574132[61] = 0;
   out_7662982071683574132[62] = 0;
   out_7662982071683574132[63] = 0;
   out_7662982071683574132[64] = 0;
   out_7662982071683574132[65] = 0;
}
void h_35(double *state, double *unused, double *out_5907276418402340129) {
   out_5907276418402340129[0] = state[7];
   out_5907276418402340129[1] = state[8];
   out_5907276418402340129[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6483295745716134368) {
   out_6483295745716134368[0] = 0;
   out_6483295745716134368[1] = 0;
   out_6483295745716134368[2] = 0;
   out_6483295745716134368[3] = 0;
   out_6483295745716134368[4] = 0;
   out_6483295745716134368[5] = 0;
   out_6483295745716134368[6] = 0;
   out_6483295745716134368[7] = 1;
   out_6483295745716134368[8] = 0;
   out_6483295745716134368[9] = 0;
   out_6483295745716134368[10] = 0;
   out_6483295745716134368[11] = 0;
   out_6483295745716134368[12] = 0;
   out_6483295745716134368[13] = 0;
   out_6483295745716134368[14] = 0;
   out_6483295745716134368[15] = 0;
   out_6483295745716134368[16] = 0;
   out_6483295745716134368[17] = 0;
   out_6483295745716134368[18] = 0;
   out_6483295745716134368[19] = 0;
   out_6483295745716134368[20] = 0;
   out_6483295745716134368[21] = 0;
   out_6483295745716134368[22] = 0;
   out_6483295745716134368[23] = 0;
   out_6483295745716134368[24] = 0;
   out_6483295745716134368[25] = 0;
   out_6483295745716134368[26] = 0;
   out_6483295745716134368[27] = 0;
   out_6483295745716134368[28] = 0;
   out_6483295745716134368[29] = 0;
   out_6483295745716134368[30] = 1;
   out_6483295745716134368[31] = 0;
   out_6483295745716134368[32] = 0;
   out_6483295745716134368[33] = 0;
   out_6483295745716134368[34] = 0;
   out_6483295745716134368[35] = 0;
   out_6483295745716134368[36] = 0;
   out_6483295745716134368[37] = 0;
   out_6483295745716134368[38] = 0;
   out_6483295745716134368[39] = 0;
   out_6483295745716134368[40] = 0;
   out_6483295745716134368[41] = 0;
   out_6483295745716134368[42] = 0;
   out_6483295745716134368[43] = 0;
   out_6483295745716134368[44] = 0;
   out_6483295745716134368[45] = 0;
   out_6483295745716134368[46] = 0;
   out_6483295745716134368[47] = 0;
   out_6483295745716134368[48] = 0;
   out_6483295745716134368[49] = 0;
   out_6483295745716134368[50] = 0;
   out_6483295745716134368[51] = 0;
   out_6483295745716134368[52] = 0;
   out_6483295745716134368[53] = 1;
   out_6483295745716134368[54] = 0;
   out_6483295745716134368[55] = 0;
   out_6483295745716134368[56] = 0;
   out_6483295745716134368[57] = 0;
   out_6483295745716134368[58] = 0;
   out_6483295745716134368[59] = 0;
   out_6483295745716134368[60] = 0;
   out_6483295745716134368[61] = 0;
   out_6483295745716134368[62] = 0;
   out_6483295745716134368[63] = 0;
   out_6483295745716134368[64] = 0;
   out_6483295745716134368[65] = 0;
}
void h_32(double *state, double *unused, double *out_2681780490767782577) {
   out_2681780490767782577[0] = state[3];
   out_2681780490767782577[1] = state[4];
   out_2681780490767782577[2] = state[5];
   out_2681780490767782577[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2133760874940142830) {
   out_2133760874940142830[0] = 0;
   out_2133760874940142830[1] = 0;
   out_2133760874940142830[2] = 0;
   out_2133760874940142830[3] = 1;
   out_2133760874940142830[4] = 0;
   out_2133760874940142830[5] = 0;
   out_2133760874940142830[6] = 0;
   out_2133760874940142830[7] = 0;
   out_2133760874940142830[8] = 0;
   out_2133760874940142830[9] = 0;
   out_2133760874940142830[10] = 0;
   out_2133760874940142830[11] = 0;
   out_2133760874940142830[12] = 0;
   out_2133760874940142830[13] = 0;
   out_2133760874940142830[14] = 0;
   out_2133760874940142830[15] = 0;
   out_2133760874940142830[16] = 0;
   out_2133760874940142830[17] = 0;
   out_2133760874940142830[18] = 0;
   out_2133760874940142830[19] = 0;
   out_2133760874940142830[20] = 0;
   out_2133760874940142830[21] = 0;
   out_2133760874940142830[22] = 0;
   out_2133760874940142830[23] = 0;
   out_2133760874940142830[24] = 0;
   out_2133760874940142830[25] = 0;
   out_2133760874940142830[26] = 1;
   out_2133760874940142830[27] = 0;
   out_2133760874940142830[28] = 0;
   out_2133760874940142830[29] = 0;
   out_2133760874940142830[30] = 0;
   out_2133760874940142830[31] = 0;
   out_2133760874940142830[32] = 0;
   out_2133760874940142830[33] = 0;
   out_2133760874940142830[34] = 0;
   out_2133760874940142830[35] = 0;
   out_2133760874940142830[36] = 0;
   out_2133760874940142830[37] = 0;
   out_2133760874940142830[38] = 0;
   out_2133760874940142830[39] = 0;
   out_2133760874940142830[40] = 0;
   out_2133760874940142830[41] = 0;
   out_2133760874940142830[42] = 0;
   out_2133760874940142830[43] = 0;
   out_2133760874940142830[44] = 0;
   out_2133760874940142830[45] = 0;
   out_2133760874940142830[46] = 0;
   out_2133760874940142830[47] = 0;
   out_2133760874940142830[48] = 0;
   out_2133760874940142830[49] = 1;
   out_2133760874940142830[50] = 0;
   out_2133760874940142830[51] = 0;
   out_2133760874940142830[52] = 0;
   out_2133760874940142830[53] = 0;
   out_2133760874940142830[54] = 0;
   out_2133760874940142830[55] = 0;
   out_2133760874940142830[56] = 0;
   out_2133760874940142830[57] = 0;
   out_2133760874940142830[58] = 0;
   out_2133760874940142830[59] = 0;
   out_2133760874940142830[60] = 0;
   out_2133760874940142830[61] = 0;
   out_2133760874940142830[62] = 0;
   out_2133760874940142830[63] = 0;
   out_2133760874940142830[64] = 0;
   out_2133760874940142830[65] = 0;
   out_2133760874940142830[66] = 0;
   out_2133760874940142830[67] = 0;
   out_2133760874940142830[68] = 0;
   out_2133760874940142830[69] = 0;
   out_2133760874940142830[70] = 0;
   out_2133760874940142830[71] = 0;
   out_2133760874940142830[72] = 1;
   out_2133760874940142830[73] = 0;
   out_2133760874940142830[74] = 0;
   out_2133760874940142830[75] = 0;
   out_2133760874940142830[76] = 0;
   out_2133760874940142830[77] = 0;
   out_2133760874940142830[78] = 0;
   out_2133760874940142830[79] = 0;
   out_2133760874940142830[80] = 0;
   out_2133760874940142830[81] = 0;
   out_2133760874940142830[82] = 0;
   out_2133760874940142830[83] = 0;
   out_2133760874940142830[84] = 0;
   out_2133760874940142830[85] = 0;
   out_2133760874940142830[86] = 0;
   out_2133760874940142830[87] = 0;
}
void h_13(double *state, double *unused, double *out_8503145814356939866) {
   out_8503145814356939866[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8503145814356939866[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8503145814356939866[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_918047224441199883) {
   out_918047224441199883[0] = 0;
   out_918047224441199883[1] = 0;
   out_918047224441199883[2] = 0;
   out_918047224441199883[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_918047224441199883[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_918047224441199883[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_918047224441199883[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_918047224441199883[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_918047224441199883[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_918047224441199883[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_918047224441199883[10] = 0;
   out_918047224441199883[11] = 0;
   out_918047224441199883[12] = 0;
   out_918047224441199883[13] = 0;
   out_918047224441199883[14] = 0;
   out_918047224441199883[15] = 0;
   out_918047224441199883[16] = 0;
   out_918047224441199883[17] = 0;
   out_918047224441199883[18] = 0;
   out_918047224441199883[19] = 0;
   out_918047224441199883[20] = 0;
   out_918047224441199883[21] = 0;
   out_918047224441199883[22] = 0;
   out_918047224441199883[23] = 0;
   out_918047224441199883[24] = 0;
   out_918047224441199883[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_918047224441199883[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_918047224441199883[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_918047224441199883[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_918047224441199883[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_918047224441199883[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_918047224441199883[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_918047224441199883[32] = 0;
   out_918047224441199883[33] = 0;
   out_918047224441199883[34] = 0;
   out_918047224441199883[35] = 0;
   out_918047224441199883[36] = 0;
   out_918047224441199883[37] = 0;
   out_918047224441199883[38] = 0;
   out_918047224441199883[39] = 0;
   out_918047224441199883[40] = 0;
   out_918047224441199883[41] = 0;
   out_918047224441199883[42] = 0;
   out_918047224441199883[43] = 0;
   out_918047224441199883[44] = 0;
   out_918047224441199883[45] = 0;
   out_918047224441199883[46] = 0;
   out_918047224441199883[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_918047224441199883[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_918047224441199883[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_918047224441199883[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_918047224441199883[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_918047224441199883[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_918047224441199883[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_918047224441199883[54] = 0;
   out_918047224441199883[55] = 0;
   out_918047224441199883[56] = 0;
   out_918047224441199883[57] = 0;
   out_918047224441199883[58] = 0;
   out_918047224441199883[59] = 0;
   out_918047224441199883[60] = 0;
   out_918047224441199883[61] = 0;
   out_918047224441199883[62] = 0;
   out_918047224441199883[63] = 0;
   out_918047224441199883[64] = 0;
   out_918047224441199883[65] = 0;
}
void h_14(double *state, double *unused, double *out_2646003671663756402) {
   out_2646003671663756402[0] = state[10];
   out_2646003671663756402[1] = state[11];
   out_2646003671663756402[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6005495240623606334) {
   out_6005495240623606334[0] = 0;
   out_6005495240623606334[1] = 0;
   out_6005495240623606334[2] = 0;
   out_6005495240623606334[3] = 0;
   out_6005495240623606334[4] = 0;
   out_6005495240623606334[5] = 0;
   out_6005495240623606334[6] = 0;
   out_6005495240623606334[7] = 0;
   out_6005495240623606334[8] = 0;
   out_6005495240623606334[9] = 0;
   out_6005495240623606334[10] = 1;
   out_6005495240623606334[11] = 0;
   out_6005495240623606334[12] = 0;
   out_6005495240623606334[13] = 0;
   out_6005495240623606334[14] = 0;
   out_6005495240623606334[15] = 0;
   out_6005495240623606334[16] = 0;
   out_6005495240623606334[17] = 0;
   out_6005495240623606334[18] = 0;
   out_6005495240623606334[19] = 0;
   out_6005495240623606334[20] = 0;
   out_6005495240623606334[21] = 0;
   out_6005495240623606334[22] = 0;
   out_6005495240623606334[23] = 0;
   out_6005495240623606334[24] = 0;
   out_6005495240623606334[25] = 0;
   out_6005495240623606334[26] = 0;
   out_6005495240623606334[27] = 0;
   out_6005495240623606334[28] = 0;
   out_6005495240623606334[29] = 0;
   out_6005495240623606334[30] = 0;
   out_6005495240623606334[31] = 0;
   out_6005495240623606334[32] = 0;
   out_6005495240623606334[33] = 1;
   out_6005495240623606334[34] = 0;
   out_6005495240623606334[35] = 0;
   out_6005495240623606334[36] = 0;
   out_6005495240623606334[37] = 0;
   out_6005495240623606334[38] = 0;
   out_6005495240623606334[39] = 0;
   out_6005495240623606334[40] = 0;
   out_6005495240623606334[41] = 0;
   out_6005495240623606334[42] = 0;
   out_6005495240623606334[43] = 0;
   out_6005495240623606334[44] = 0;
   out_6005495240623606334[45] = 0;
   out_6005495240623606334[46] = 0;
   out_6005495240623606334[47] = 0;
   out_6005495240623606334[48] = 0;
   out_6005495240623606334[49] = 0;
   out_6005495240623606334[50] = 0;
   out_6005495240623606334[51] = 0;
   out_6005495240623606334[52] = 0;
   out_6005495240623606334[53] = 0;
   out_6005495240623606334[54] = 0;
   out_6005495240623606334[55] = 0;
   out_6005495240623606334[56] = 1;
   out_6005495240623606334[57] = 0;
   out_6005495240623606334[58] = 0;
   out_6005495240623606334[59] = 0;
   out_6005495240623606334[60] = 0;
   out_6005495240623606334[61] = 0;
   out_6005495240623606334[62] = 0;
   out_6005495240623606334[63] = 0;
   out_6005495240623606334[64] = 0;
   out_6005495240623606334[65] = 0;
}
void h_33(double *state, double *unused, double *out_5296807586278218245) {
   out_5296807586278218245[0] = state[16];
   out_5296807586278218245[1] = state[17];
   out_5296807586278218245[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1766862034719702819) {
   out_1766862034719702819[0] = 0;
   out_1766862034719702819[1] = 0;
   out_1766862034719702819[2] = 0;
   out_1766862034719702819[3] = 0;
   out_1766862034719702819[4] = 0;
   out_1766862034719702819[5] = 0;
   out_1766862034719702819[6] = 0;
   out_1766862034719702819[7] = 0;
   out_1766862034719702819[8] = 0;
   out_1766862034719702819[9] = 0;
   out_1766862034719702819[10] = 0;
   out_1766862034719702819[11] = 0;
   out_1766862034719702819[12] = 0;
   out_1766862034719702819[13] = 0;
   out_1766862034719702819[14] = 0;
   out_1766862034719702819[15] = 0;
   out_1766862034719702819[16] = 1;
   out_1766862034719702819[17] = 0;
   out_1766862034719702819[18] = 0;
   out_1766862034719702819[19] = 0;
   out_1766862034719702819[20] = 0;
   out_1766862034719702819[21] = 0;
   out_1766862034719702819[22] = 0;
   out_1766862034719702819[23] = 0;
   out_1766862034719702819[24] = 0;
   out_1766862034719702819[25] = 0;
   out_1766862034719702819[26] = 0;
   out_1766862034719702819[27] = 0;
   out_1766862034719702819[28] = 0;
   out_1766862034719702819[29] = 0;
   out_1766862034719702819[30] = 0;
   out_1766862034719702819[31] = 0;
   out_1766862034719702819[32] = 0;
   out_1766862034719702819[33] = 0;
   out_1766862034719702819[34] = 0;
   out_1766862034719702819[35] = 0;
   out_1766862034719702819[36] = 0;
   out_1766862034719702819[37] = 0;
   out_1766862034719702819[38] = 0;
   out_1766862034719702819[39] = 1;
   out_1766862034719702819[40] = 0;
   out_1766862034719702819[41] = 0;
   out_1766862034719702819[42] = 0;
   out_1766862034719702819[43] = 0;
   out_1766862034719702819[44] = 0;
   out_1766862034719702819[45] = 0;
   out_1766862034719702819[46] = 0;
   out_1766862034719702819[47] = 0;
   out_1766862034719702819[48] = 0;
   out_1766862034719702819[49] = 0;
   out_1766862034719702819[50] = 0;
   out_1766862034719702819[51] = 0;
   out_1766862034719702819[52] = 0;
   out_1766862034719702819[53] = 0;
   out_1766862034719702819[54] = 0;
   out_1766862034719702819[55] = 0;
   out_1766862034719702819[56] = 0;
   out_1766862034719702819[57] = 0;
   out_1766862034719702819[58] = 0;
   out_1766862034719702819[59] = 0;
   out_1766862034719702819[60] = 0;
   out_1766862034719702819[61] = 0;
   out_1766862034719702819[62] = 1;
   out_1766862034719702819[63] = 0;
   out_1766862034719702819[64] = 0;
   out_1766862034719702819[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4029624047422583028) {
  H(in_vec, out_4029624047422583028);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_310376691841387558) {
  err_fun(nom_x, delta_x, out_310376691841387558);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1456132818750440010) {
  inv_err_fun(nom_x, true_x, out_1456132818750440010);
}
void live_H_mod_fun(double *state, double *out_5922142170418800988) {
  H_mod_fun(state, out_5922142170418800988);
}
void live_f_fun(double *state, double dt, double *out_2273442895072544352) {
  f_fun(state,  dt, out_2273442895072544352);
}
void live_F_fun(double *state, double dt, double *out_4235384512522099094) {
  F_fun(state,  dt, out_4235384512522099094);
}
void live_h_4(double *state, double *unused, double *out_3685216184752008266) {
  h_4(state, unused, out_3685216184752008266);
}
void live_H_4(double *state, double *unused, double *out_1281723694640841136) {
  H_4(state, unused, out_1281723694640841136);
}
void live_h_9(double *state, double *unused, double *out_2646003671663756402) {
  h_9(state, unused, out_2646003671663756402);
}
void live_H_9(double *state, double *unused, double *out_6005495240623606334) {
  H_9(state, unused, out_6005495240623606334);
}
void live_h_10(double *state, double *unused, double *out_2127462386065991370) {
  h_10(state, unused, out_2127462386065991370);
}
void live_H_10(double *state, double *unused, double *out_1155592061403164186) {
  H_10(state, unused, out_1155592061403164186);
}
void live_h_12(double *state, double *unused, double *out_3690503254606561334) {
  h_12(state, unused, out_3690503254606561334);
}
void live_H_12(double *state, double *unused, double *out_7662982071683574132) {
  H_12(state, unused, out_7662982071683574132);
}
void live_h_35(double *state, double *unused, double *out_5907276418402340129) {
  h_35(state, unused, out_5907276418402340129);
}
void live_H_35(double *state, double *unused, double *out_6483295745716134368) {
  H_35(state, unused, out_6483295745716134368);
}
void live_h_32(double *state, double *unused, double *out_2681780490767782577) {
  h_32(state, unused, out_2681780490767782577);
}
void live_H_32(double *state, double *unused, double *out_2133760874940142830) {
  H_32(state, unused, out_2133760874940142830);
}
void live_h_13(double *state, double *unused, double *out_8503145814356939866) {
  h_13(state, unused, out_8503145814356939866);
}
void live_H_13(double *state, double *unused, double *out_918047224441199883) {
  H_13(state, unused, out_918047224441199883);
}
void live_h_14(double *state, double *unused, double *out_2646003671663756402) {
  h_14(state, unused, out_2646003671663756402);
}
void live_H_14(double *state, double *unused, double *out_6005495240623606334) {
  H_14(state, unused, out_6005495240623606334);
}
void live_h_33(double *state, double *unused, double *out_5296807586278218245) {
  h_33(state, unused, out_5296807586278218245);
}
void live_H_33(double *state, double *unused, double *out_1766862034719702819) {
  H_33(state, unused, out_1766862034719702819);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
