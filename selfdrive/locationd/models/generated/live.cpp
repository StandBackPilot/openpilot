#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6971914640542061287) {
   out_6971914640542061287[0] = 0;
   out_6971914640542061287[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6971914640542061287[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6971914640542061287[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6971914640542061287[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6971914640542061287[5] = -sin(in_vec[1]);
   out_6971914640542061287[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6971914640542061287[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6971914640542061287[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6971914640542061287[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6971914640542061287[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6971914640542061287[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6971914640542061287[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6971914640542061287[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6971914640542061287[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6971914640542061287[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6971914640542061287[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6971914640542061287[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6189662298219493583) {
   out_6189662298219493583[0] = delta_x[0] + nom_x[0];
   out_6189662298219493583[1] = delta_x[1] + nom_x[1];
   out_6189662298219493583[2] = delta_x[2] + nom_x[2];
   out_6189662298219493583[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6189662298219493583[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6189662298219493583[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6189662298219493583[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6189662298219493583[7] = delta_x[6] + nom_x[7];
   out_6189662298219493583[8] = delta_x[7] + nom_x[8];
   out_6189662298219493583[9] = delta_x[8] + nom_x[9];
   out_6189662298219493583[10] = delta_x[9] + nom_x[10];
   out_6189662298219493583[11] = delta_x[10] + nom_x[11];
   out_6189662298219493583[12] = delta_x[11] + nom_x[12];
   out_6189662298219493583[13] = delta_x[12] + nom_x[13];
   out_6189662298219493583[14] = delta_x[13] + nom_x[14];
   out_6189662298219493583[15] = delta_x[14] + nom_x[15];
   out_6189662298219493583[16] = delta_x[15] + nom_x[16];
   out_6189662298219493583[17] = delta_x[16] + nom_x[17];
   out_6189662298219493583[18] = delta_x[17] + nom_x[18];
   out_6189662298219493583[19] = delta_x[18] + nom_x[19];
   out_6189662298219493583[20] = delta_x[19] + nom_x[20];
   out_6189662298219493583[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7314469681338286083) {
   out_7314469681338286083[0] = -nom_x[0] + true_x[0];
   out_7314469681338286083[1] = -nom_x[1] + true_x[1];
   out_7314469681338286083[2] = -nom_x[2] + true_x[2];
   out_7314469681338286083[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7314469681338286083[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7314469681338286083[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7314469681338286083[6] = -nom_x[7] + true_x[7];
   out_7314469681338286083[7] = -nom_x[8] + true_x[8];
   out_7314469681338286083[8] = -nom_x[9] + true_x[9];
   out_7314469681338286083[9] = -nom_x[10] + true_x[10];
   out_7314469681338286083[10] = -nom_x[11] + true_x[11];
   out_7314469681338286083[11] = -nom_x[12] + true_x[12];
   out_7314469681338286083[12] = -nom_x[13] + true_x[13];
   out_7314469681338286083[13] = -nom_x[14] + true_x[14];
   out_7314469681338286083[14] = -nom_x[15] + true_x[15];
   out_7314469681338286083[15] = -nom_x[16] + true_x[16];
   out_7314469681338286083[16] = -nom_x[17] + true_x[17];
   out_7314469681338286083[17] = -nom_x[18] + true_x[18];
   out_7314469681338286083[18] = -nom_x[19] + true_x[19];
   out_7314469681338286083[19] = -nom_x[20] + true_x[20];
   out_7314469681338286083[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2317264427215604781) {
   out_2317264427215604781[0] = 1.0;
   out_2317264427215604781[1] = 0;
   out_2317264427215604781[2] = 0;
   out_2317264427215604781[3] = 0;
   out_2317264427215604781[4] = 0;
   out_2317264427215604781[5] = 0;
   out_2317264427215604781[6] = 0;
   out_2317264427215604781[7] = 0;
   out_2317264427215604781[8] = 0;
   out_2317264427215604781[9] = 0;
   out_2317264427215604781[10] = 0;
   out_2317264427215604781[11] = 0;
   out_2317264427215604781[12] = 0;
   out_2317264427215604781[13] = 0;
   out_2317264427215604781[14] = 0;
   out_2317264427215604781[15] = 0;
   out_2317264427215604781[16] = 0;
   out_2317264427215604781[17] = 0;
   out_2317264427215604781[18] = 0;
   out_2317264427215604781[19] = 0;
   out_2317264427215604781[20] = 0;
   out_2317264427215604781[21] = 0;
   out_2317264427215604781[22] = 1.0;
   out_2317264427215604781[23] = 0;
   out_2317264427215604781[24] = 0;
   out_2317264427215604781[25] = 0;
   out_2317264427215604781[26] = 0;
   out_2317264427215604781[27] = 0;
   out_2317264427215604781[28] = 0;
   out_2317264427215604781[29] = 0;
   out_2317264427215604781[30] = 0;
   out_2317264427215604781[31] = 0;
   out_2317264427215604781[32] = 0;
   out_2317264427215604781[33] = 0;
   out_2317264427215604781[34] = 0;
   out_2317264427215604781[35] = 0;
   out_2317264427215604781[36] = 0;
   out_2317264427215604781[37] = 0;
   out_2317264427215604781[38] = 0;
   out_2317264427215604781[39] = 0;
   out_2317264427215604781[40] = 0;
   out_2317264427215604781[41] = 0;
   out_2317264427215604781[42] = 0;
   out_2317264427215604781[43] = 0;
   out_2317264427215604781[44] = 1.0;
   out_2317264427215604781[45] = 0;
   out_2317264427215604781[46] = 0;
   out_2317264427215604781[47] = 0;
   out_2317264427215604781[48] = 0;
   out_2317264427215604781[49] = 0;
   out_2317264427215604781[50] = 0;
   out_2317264427215604781[51] = 0;
   out_2317264427215604781[52] = 0;
   out_2317264427215604781[53] = 0;
   out_2317264427215604781[54] = 0;
   out_2317264427215604781[55] = 0;
   out_2317264427215604781[56] = 0;
   out_2317264427215604781[57] = 0;
   out_2317264427215604781[58] = 0;
   out_2317264427215604781[59] = 0;
   out_2317264427215604781[60] = 0;
   out_2317264427215604781[61] = 0;
   out_2317264427215604781[62] = 0;
   out_2317264427215604781[63] = 0;
   out_2317264427215604781[64] = 0;
   out_2317264427215604781[65] = 0;
   out_2317264427215604781[66] = -0.5*state[4];
   out_2317264427215604781[67] = -0.5*state[5];
   out_2317264427215604781[68] = -0.5*state[6];
   out_2317264427215604781[69] = 0;
   out_2317264427215604781[70] = 0;
   out_2317264427215604781[71] = 0;
   out_2317264427215604781[72] = 0;
   out_2317264427215604781[73] = 0;
   out_2317264427215604781[74] = 0;
   out_2317264427215604781[75] = 0;
   out_2317264427215604781[76] = 0;
   out_2317264427215604781[77] = 0;
   out_2317264427215604781[78] = 0;
   out_2317264427215604781[79] = 0;
   out_2317264427215604781[80] = 0;
   out_2317264427215604781[81] = 0;
   out_2317264427215604781[82] = 0;
   out_2317264427215604781[83] = 0;
   out_2317264427215604781[84] = 0;
   out_2317264427215604781[85] = 0;
   out_2317264427215604781[86] = 0;
   out_2317264427215604781[87] = 0.5*state[3];
   out_2317264427215604781[88] = 0.5*state[6];
   out_2317264427215604781[89] = -0.5*state[5];
   out_2317264427215604781[90] = 0;
   out_2317264427215604781[91] = 0;
   out_2317264427215604781[92] = 0;
   out_2317264427215604781[93] = 0;
   out_2317264427215604781[94] = 0;
   out_2317264427215604781[95] = 0;
   out_2317264427215604781[96] = 0;
   out_2317264427215604781[97] = 0;
   out_2317264427215604781[98] = 0;
   out_2317264427215604781[99] = 0;
   out_2317264427215604781[100] = 0;
   out_2317264427215604781[101] = 0;
   out_2317264427215604781[102] = 0;
   out_2317264427215604781[103] = 0;
   out_2317264427215604781[104] = 0;
   out_2317264427215604781[105] = 0;
   out_2317264427215604781[106] = 0;
   out_2317264427215604781[107] = 0;
   out_2317264427215604781[108] = -0.5*state[6];
   out_2317264427215604781[109] = 0.5*state[3];
   out_2317264427215604781[110] = 0.5*state[4];
   out_2317264427215604781[111] = 0;
   out_2317264427215604781[112] = 0;
   out_2317264427215604781[113] = 0;
   out_2317264427215604781[114] = 0;
   out_2317264427215604781[115] = 0;
   out_2317264427215604781[116] = 0;
   out_2317264427215604781[117] = 0;
   out_2317264427215604781[118] = 0;
   out_2317264427215604781[119] = 0;
   out_2317264427215604781[120] = 0;
   out_2317264427215604781[121] = 0;
   out_2317264427215604781[122] = 0;
   out_2317264427215604781[123] = 0;
   out_2317264427215604781[124] = 0;
   out_2317264427215604781[125] = 0;
   out_2317264427215604781[126] = 0;
   out_2317264427215604781[127] = 0;
   out_2317264427215604781[128] = 0;
   out_2317264427215604781[129] = 0.5*state[5];
   out_2317264427215604781[130] = -0.5*state[4];
   out_2317264427215604781[131] = 0.5*state[3];
   out_2317264427215604781[132] = 0;
   out_2317264427215604781[133] = 0;
   out_2317264427215604781[134] = 0;
   out_2317264427215604781[135] = 0;
   out_2317264427215604781[136] = 0;
   out_2317264427215604781[137] = 0;
   out_2317264427215604781[138] = 0;
   out_2317264427215604781[139] = 0;
   out_2317264427215604781[140] = 0;
   out_2317264427215604781[141] = 0;
   out_2317264427215604781[142] = 0;
   out_2317264427215604781[143] = 0;
   out_2317264427215604781[144] = 0;
   out_2317264427215604781[145] = 0;
   out_2317264427215604781[146] = 0;
   out_2317264427215604781[147] = 0;
   out_2317264427215604781[148] = 0;
   out_2317264427215604781[149] = 0;
   out_2317264427215604781[150] = 0;
   out_2317264427215604781[151] = 0;
   out_2317264427215604781[152] = 0;
   out_2317264427215604781[153] = 1.0;
   out_2317264427215604781[154] = 0;
   out_2317264427215604781[155] = 0;
   out_2317264427215604781[156] = 0;
   out_2317264427215604781[157] = 0;
   out_2317264427215604781[158] = 0;
   out_2317264427215604781[159] = 0;
   out_2317264427215604781[160] = 0;
   out_2317264427215604781[161] = 0;
   out_2317264427215604781[162] = 0;
   out_2317264427215604781[163] = 0;
   out_2317264427215604781[164] = 0;
   out_2317264427215604781[165] = 0;
   out_2317264427215604781[166] = 0;
   out_2317264427215604781[167] = 0;
   out_2317264427215604781[168] = 0;
   out_2317264427215604781[169] = 0;
   out_2317264427215604781[170] = 0;
   out_2317264427215604781[171] = 0;
   out_2317264427215604781[172] = 0;
   out_2317264427215604781[173] = 0;
   out_2317264427215604781[174] = 0;
   out_2317264427215604781[175] = 1.0;
   out_2317264427215604781[176] = 0;
   out_2317264427215604781[177] = 0;
   out_2317264427215604781[178] = 0;
   out_2317264427215604781[179] = 0;
   out_2317264427215604781[180] = 0;
   out_2317264427215604781[181] = 0;
   out_2317264427215604781[182] = 0;
   out_2317264427215604781[183] = 0;
   out_2317264427215604781[184] = 0;
   out_2317264427215604781[185] = 0;
   out_2317264427215604781[186] = 0;
   out_2317264427215604781[187] = 0;
   out_2317264427215604781[188] = 0;
   out_2317264427215604781[189] = 0;
   out_2317264427215604781[190] = 0;
   out_2317264427215604781[191] = 0;
   out_2317264427215604781[192] = 0;
   out_2317264427215604781[193] = 0;
   out_2317264427215604781[194] = 0;
   out_2317264427215604781[195] = 0;
   out_2317264427215604781[196] = 0;
   out_2317264427215604781[197] = 1.0;
   out_2317264427215604781[198] = 0;
   out_2317264427215604781[199] = 0;
   out_2317264427215604781[200] = 0;
   out_2317264427215604781[201] = 0;
   out_2317264427215604781[202] = 0;
   out_2317264427215604781[203] = 0;
   out_2317264427215604781[204] = 0;
   out_2317264427215604781[205] = 0;
   out_2317264427215604781[206] = 0;
   out_2317264427215604781[207] = 0;
   out_2317264427215604781[208] = 0;
   out_2317264427215604781[209] = 0;
   out_2317264427215604781[210] = 0;
   out_2317264427215604781[211] = 0;
   out_2317264427215604781[212] = 0;
   out_2317264427215604781[213] = 0;
   out_2317264427215604781[214] = 0;
   out_2317264427215604781[215] = 0;
   out_2317264427215604781[216] = 0;
   out_2317264427215604781[217] = 0;
   out_2317264427215604781[218] = 0;
   out_2317264427215604781[219] = 1.0;
   out_2317264427215604781[220] = 0;
   out_2317264427215604781[221] = 0;
   out_2317264427215604781[222] = 0;
   out_2317264427215604781[223] = 0;
   out_2317264427215604781[224] = 0;
   out_2317264427215604781[225] = 0;
   out_2317264427215604781[226] = 0;
   out_2317264427215604781[227] = 0;
   out_2317264427215604781[228] = 0;
   out_2317264427215604781[229] = 0;
   out_2317264427215604781[230] = 0;
   out_2317264427215604781[231] = 0;
   out_2317264427215604781[232] = 0;
   out_2317264427215604781[233] = 0;
   out_2317264427215604781[234] = 0;
   out_2317264427215604781[235] = 0;
   out_2317264427215604781[236] = 0;
   out_2317264427215604781[237] = 0;
   out_2317264427215604781[238] = 0;
   out_2317264427215604781[239] = 0;
   out_2317264427215604781[240] = 0;
   out_2317264427215604781[241] = 1.0;
   out_2317264427215604781[242] = 0;
   out_2317264427215604781[243] = 0;
   out_2317264427215604781[244] = 0;
   out_2317264427215604781[245] = 0;
   out_2317264427215604781[246] = 0;
   out_2317264427215604781[247] = 0;
   out_2317264427215604781[248] = 0;
   out_2317264427215604781[249] = 0;
   out_2317264427215604781[250] = 0;
   out_2317264427215604781[251] = 0;
   out_2317264427215604781[252] = 0;
   out_2317264427215604781[253] = 0;
   out_2317264427215604781[254] = 0;
   out_2317264427215604781[255] = 0;
   out_2317264427215604781[256] = 0;
   out_2317264427215604781[257] = 0;
   out_2317264427215604781[258] = 0;
   out_2317264427215604781[259] = 0;
   out_2317264427215604781[260] = 0;
   out_2317264427215604781[261] = 0;
   out_2317264427215604781[262] = 0;
   out_2317264427215604781[263] = 1.0;
   out_2317264427215604781[264] = 0;
   out_2317264427215604781[265] = 0;
   out_2317264427215604781[266] = 0;
   out_2317264427215604781[267] = 0;
   out_2317264427215604781[268] = 0;
   out_2317264427215604781[269] = 0;
   out_2317264427215604781[270] = 0;
   out_2317264427215604781[271] = 0;
   out_2317264427215604781[272] = 0;
   out_2317264427215604781[273] = 0;
   out_2317264427215604781[274] = 0;
   out_2317264427215604781[275] = 0;
   out_2317264427215604781[276] = 0;
   out_2317264427215604781[277] = 0;
   out_2317264427215604781[278] = 0;
   out_2317264427215604781[279] = 0;
   out_2317264427215604781[280] = 0;
   out_2317264427215604781[281] = 0;
   out_2317264427215604781[282] = 0;
   out_2317264427215604781[283] = 0;
   out_2317264427215604781[284] = 0;
   out_2317264427215604781[285] = 1.0;
   out_2317264427215604781[286] = 0;
   out_2317264427215604781[287] = 0;
   out_2317264427215604781[288] = 0;
   out_2317264427215604781[289] = 0;
   out_2317264427215604781[290] = 0;
   out_2317264427215604781[291] = 0;
   out_2317264427215604781[292] = 0;
   out_2317264427215604781[293] = 0;
   out_2317264427215604781[294] = 0;
   out_2317264427215604781[295] = 0;
   out_2317264427215604781[296] = 0;
   out_2317264427215604781[297] = 0;
   out_2317264427215604781[298] = 0;
   out_2317264427215604781[299] = 0;
   out_2317264427215604781[300] = 0;
   out_2317264427215604781[301] = 0;
   out_2317264427215604781[302] = 0;
   out_2317264427215604781[303] = 0;
   out_2317264427215604781[304] = 0;
   out_2317264427215604781[305] = 0;
   out_2317264427215604781[306] = 0;
   out_2317264427215604781[307] = 1.0;
   out_2317264427215604781[308] = 0;
   out_2317264427215604781[309] = 0;
   out_2317264427215604781[310] = 0;
   out_2317264427215604781[311] = 0;
   out_2317264427215604781[312] = 0;
   out_2317264427215604781[313] = 0;
   out_2317264427215604781[314] = 0;
   out_2317264427215604781[315] = 0;
   out_2317264427215604781[316] = 0;
   out_2317264427215604781[317] = 0;
   out_2317264427215604781[318] = 0;
   out_2317264427215604781[319] = 0;
   out_2317264427215604781[320] = 0;
   out_2317264427215604781[321] = 0;
   out_2317264427215604781[322] = 0;
   out_2317264427215604781[323] = 0;
   out_2317264427215604781[324] = 0;
   out_2317264427215604781[325] = 0;
   out_2317264427215604781[326] = 0;
   out_2317264427215604781[327] = 0;
   out_2317264427215604781[328] = 0;
   out_2317264427215604781[329] = 1.0;
   out_2317264427215604781[330] = 0;
   out_2317264427215604781[331] = 0;
   out_2317264427215604781[332] = 0;
   out_2317264427215604781[333] = 0;
   out_2317264427215604781[334] = 0;
   out_2317264427215604781[335] = 0;
   out_2317264427215604781[336] = 0;
   out_2317264427215604781[337] = 0;
   out_2317264427215604781[338] = 0;
   out_2317264427215604781[339] = 0;
   out_2317264427215604781[340] = 0;
   out_2317264427215604781[341] = 0;
   out_2317264427215604781[342] = 0;
   out_2317264427215604781[343] = 0;
   out_2317264427215604781[344] = 0;
   out_2317264427215604781[345] = 0;
   out_2317264427215604781[346] = 0;
   out_2317264427215604781[347] = 0;
   out_2317264427215604781[348] = 0;
   out_2317264427215604781[349] = 0;
   out_2317264427215604781[350] = 0;
   out_2317264427215604781[351] = 1.0;
   out_2317264427215604781[352] = 0;
   out_2317264427215604781[353] = 0;
   out_2317264427215604781[354] = 0;
   out_2317264427215604781[355] = 0;
   out_2317264427215604781[356] = 0;
   out_2317264427215604781[357] = 0;
   out_2317264427215604781[358] = 0;
   out_2317264427215604781[359] = 0;
   out_2317264427215604781[360] = 0;
   out_2317264427215604781[361] = 0;
   out_2317264427215604781[362] = 0;
   out_2317264427215604781[363] = 0;
   out_2317264427215604781[364] = 0;
   out_2317264427215604781[365] = 0;
   out_2317264427215604781[366] = 0;
   out_2317264427215604781[367] = 0;
   out_2317264427215604781[368] = 0;
   out_2317264427215604781[369] = 0;
   out_2317264427215604781[370] = 0;
   out_2317264427215604781[371] = 0;
   out_2317264427215604781[372] = 0;
   out_2317264427215604781[373] = 1.0;
   out_2317264427215604781[374] = 0;
   out_2317264427215604781[375] = 0;
   out_2317264427215604781[376] = 0;
   out_2317264427215604781[377] = 0;
   out_2317264427215604781[378] = 0;
   out_2317264427215604781[379] = 0;
   out_2317264427215604781[380] = 0;
   out_2317264427215604781[381] = 0;
   out_2317264427215604781[382] = 0;
   out_2317264427215604781[383] = 0;
   out_2317264427215604781[384] = 0;
   out_2317264427215604781[385] = 0;
   out_2317264427215604781[386] = 0;
   out_2317264427215604781[387] = 0;
   out_2317264427215604781[388] = 0;
   out_2317264427215604781[389] = 0;
   out_2317264427215604781[390] = 0;
   out_2317264427215604781[391] = 0;
   out_2317264427215604781[392] = 0;
   out_2317264427215604781[393] = 0;
   out_2317264427215604781[394] = 0;
   out_2317264427215604781[395] = 1.0;
   out_2317264427215604781[396] = 0;
   out_2317264427215604781[397] = 0;
   out_2317264427215604781[398] = 0;
   out_2317264427215604781[399] = 0;
   out_2317264427215604781[400] = 0;
   out_2317264427215604781[401] = 0;
   out_2317264427215604781[402] = 0;
   out_2317264427215604781[403] = 0;
   out_2317264427215604781[404] = 0;
   out_2317264427215604781[405] = 0;
   out_2317264427215604781[406] = 0;
   out_2317264427215604781[407] = 0;
   out_2317264427215604781[408] = 0;
   out_2317264427215604781[409] = 0;
   out_2317264427215604781[410] = 0;
   out_2317264427215604781[411] = 0;
   out_2317264427215604781[412] = 0;
   out_2317264427215604781[413] = 0;
   out_2317264427215604781[414] = 0;
   out_2317264427215604781[415] = 0;
   out_2317264427215604781[416] = 0;
   out_2317264427215604781[417] = 1.0;
   out_2317264427215604781[418] = 0;
   out_2317264427215604781[419] = 0;
   out_2317264427215604781[420] = 0;
   out_2317264427215604781[421] = 0;
   out_2317264427215604781[422] = 0;
   out_2317264427215604781[423] = 0;
   out_2317264427215604781[424] = 0;
   out_2317264427215604781[425] = 0;
   out_2317264427215604781[426] = 0;
   out_2317264427215604781[427] = 0;
   out_2317264427215604781[428] = 0;
   out_2317264427215604781[429] = 0;
   out_2317264427215604781[430] = 0;
   out_2317264427215604781[431] = 0;
   out_2317264427215604781[432] = 0;
   out_2317264427215604781[433] = 0;
   out_2317264427215604781[434] = 0;
   out_2317264427215604781[435] = 0;
   out_2317264427215604781[436] = 0;
   out_2317264427215604781[437] = 0;
   out_2317264427215604781[438] = 0;
   out_2317264427215604781[439] = 1.0;
   out_2317264427215604781[440] = 0;
   out_2317264427215604781[441] = 0;
   out_2317264427215604781[442] = 0;
   out_2317264427215604781[443] = 0;
   out_2317264427215604781[444] = 0;
   out_2317264427215604781[445] = 0;
   out_2317264427215604781[446] = 0;
   out_2317264427215604781[447] = 0;
   out_2317264427215604781[448] = 0;
   out_2317264427215604781[449] = 0;
   out_2317264427215604781[450] = 0;
   out_2317264427215604781[451] = 0;
   out_2317264427215604781[452] = 0;
   out_2317264427215604781[453] = 0;
   out_2317264427215604781[454] = 0;
   out_2317264427215604781[455] = 0;
   out_2317264427215604781[456] = 0;
   out_2317264427215604781[457] = 0;
   out_2317264427215604781[458] = 0;
   out_2317264427215604781[459] = 0;
   out_2317264427215604781[460] = 0;
   out_2317264427215604781[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6421330834293840922) {
   out_6421330834293840922[0] = dt*state[7] + state[0];
   out_6421330834293840922[1] = dt*state[8] + state[1];
   out_6421330834293840922[2] = dt*state[9] + state[2];
   out_6421330834293840922[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6421330834293840922[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6421330834293840922[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6421330834293840922[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6421330834293840922[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6421330834293840922[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6421330834293840922[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6421330834293840922[10] = state[10];
   out_6421330834293840922[11] = state[11];
   out_6421330834293840922[12] = state[12];
   out_6421330834293840922[13] = state[13];
   out_6421330834293840922[14] = state[14];
   out_6421330834293840922[15] = state[15];
   out_6421330834293840922[16] = state[16];
   out_6421330834293840922[17] = state[17];
   out_6421330834293840922[18] = state[18];
   out_6421330834293840922[19] = state[19];
   out_6421330834293840922[20] = state[20];
   out_6421330834293840922[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8335401751809609889) {
   out_8335401751809609889[0] = 1;
   out_8335401751809609889[1] = 0;
   out_8335401751809609889[2] = 0;
   out_8335401751809609889[3] = 0;
   out_8335401751809609889[4] = 0;
   out_8335401751809609889[5] = 0;
   out_8335401751809609889[6] = dt;
   out_8335401751809609889[7] = 0;
   out_8335401751809609889[8] = 0;
   out_8335401751809609889[9] = 0;
   out_8335401751809609889[10] = 0;
   out_8335401751809609889[11] = 0;
   out_8335401751809609889[12] = 0;
   out_8335401751809609889[13] = 0;
   out_8335401751809609889[14] = 0;
   out_8335401751809609889[15] = 0;
   out_8335401751809609889[16] = 0;
   out_8335401751809609889[17] = 0;
   out_8335401751809609889[18] = 0;
   out_8335401751809609889[19] = 0;
   out_8335401751809609889[20] = 0;
   out_8335401751809609889[21] = 0;
   out_8335401751809609889[22] = 1;
   out_8335401751809609889[23] = 0;
   out_8335401751809609889[24] = 0;
   out_8335401751809609889[25] = 0;
   out_8335401751809609889[26] = 0;
   out_8335401751809609889[27] = 0;
   out_8335401751809609889[28] = dt;
   out_8335401751809609889[29] = 0;
   out_8335401751809609889[30] = 0;
   out_8335401751809609889[31] = 0;
   out_8335401751809609889[32] = 0;
   out_8335401751809609889[33] = 0;
   out_8335401751809609889[34] = 0;
   out_8335401751809609889[35] = 0;
   out_8335401751809609889[36] = 0;
   out_8335401751809609889[37] = 0;
   out_8335401751809609889[38] = 0;
   out_8335401751809609889[39] = 0;
   out_8335401751809609889[40] = 0;
   out_8335401751809609889[41] = 0;
   out_8335401751809609889[42] = 0;
   out_8335401751809609889[43] = 0;
   out_8335401751809609889[44] = 1;
   out_8335401751809609889[45] = 0;
   out_8335401751809609889[46] = 0;
   out_8335401751809609889[47] = 0;
   out_8335401751809609889[48] = 0;
   out_8335401751809609889[49] = 0;
   out_8335401751809609889[50] = dt;
   out_8335401751809609889[51] = 0;
   out_8335401751809609889[52] = 0;
   out_8335401751809609889[53] = 0;
   out_8335401751809609889[54] = 0;
   out_8335401751809609889[55] = 0;
   out_8335401751809609889[56] = 0;
   out_8335401751809609889[57] = 0;
   out_8335401751809609889[58] = 0;
   out_8335401751809609889[59] = 0;
   out_8335401751809609889[60] = 0;
   out_8335401751809609889[61] = 0;
   out_8335401751809609889[62] = 0;
   out_8335401751809609889[63] = 0;
   out_8335401751809609889[64] = 0;
   out_8335401751809609889[65] = 0;
   out_8335401751809609889[66] = 1;
   out_8335401751809609889[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8335401751809609889[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8335401751809609889[69] = 0;
   out_8335401751809609889[70] = 0;
   out_8335401751809609889[71] = 0;
   out_8335401751809609889[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8335401751809609889[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8335401751809609889[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8335401751809609889[75] = 0;
   out_8335401751809609889[76] = 0;
   out_8335401751809609889[77] = 0;
   out_8335401751809609889[78] = 0;
   out_8335401751809609889[79] = 0;
   out_8335401751809609889[80] = 0;
   out_8335401751809609889[81] = 0;
   out_8335401751809609889[82] = 0;
   out_8335401751809609889[83] = 0;
   out_8335401751809609889[84] = 0;
   out_8335401751809609889[85] = 0;
   out_8335401751809609889[86] = 0;
   out_8335401751809609889[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8335401751809609889[88] = 1;
   out_8335401751809609889[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8335401751809609889[90] = 0;
   out_8335401751809609889[91] = 0;
   out_8335401751809609889[92] = 0;
   out_8335401751809609889[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8335401751809609889[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8335401751809609889[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8335401751809609889[96] = 0;
   out_8335401751809609889[97] = 0;
   out_8335401751809609889[98] = 0;
   out_8335401751809609889[99] = 0;
   out_8335401751809609889[100] = 0;
   out_8335401751809609889[101] = 0;
   out_8335401751809609889[102] = 0;
   out_8335401751809609889[103] = 0;
   out_8335401751809609889[104] = 0;
   out_8335401751809609889[105] = 0;
   out_8335401751809609889[106] = 0;
   out_8335401751809609889[107] = 0;
   out_8335401751809609889[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8335401751809609889[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8335401751809609889[110] = 1;
   out_8335401751809609889[111] = 0;
   out_8335401751809609889[112] = 0;
   out_8335401751809609889[113] = 0;
   out_8335401751809609889[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8335401751809609889[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8335401751809609889[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8335401751809609889[117] = 0;
   out_8335401751809609889[118] = 0;
   out_8335401751809609889[119] = 0;
   out_8335401751809609889[120] = 0;
   out_8335401751809609889[121] = 0;
   out_8335401751809609889[122] = 0;
   out_8335401751809609889[123] = 0;
   out_8335401751809609889[124] = 0;
   out_8335401751809609889[125] = 0;
   out_8335401751809609889[126] = 0;
   out_8335401751809609889[127] = 0;
   out_8335401751809609889[128] = 0;
   out_8335401751809609889[129] = 0;
   out_8335401751809609889[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8335401751809609889[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8335401751809609889[132] = 1;
   out_8335401751809609889[133] = 0;
   out_8335401751809609889[134] = 0;
   out_8335401751809609889[135] = 0;
   out_8335401751809609889[136] = 0;
   out_8335401751809609889[137] = 0;
   out_8335401751809609889[138] = 0;
   out_8335401751809609889[139] = 0;
   out_8335401751809609889[140] = 0;
   out_8335401751809609889[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8335401751809609889[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8335401751809609889[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8335401751809609889[144] = 0;
   out_8335401751809609889[145] = 0;
   out_8335401751809609889[146] = 0;
   out_8335401751809609889[147] = 0;
   out_8335401751809609889[148] = 0;
   out_8335401751809609889[149] = 0;
   out_8335401751809609889[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8335401751809609889[151] = 0;
   out_8335401751809609889[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8335401751809609889[153] = 0;
   out_8335401751809609889[154] = 1;
   out_8335401751809609889[155] = 0;
   out_8335401751809609889[156] = 0;
   out_8335401751809609889[157] = 0;
   out_8335401751809609889[158] = 0;
   out_8335401751809609889[159] = 0;
   out_8335401751809609889[160] = 0;
   out_8335401751809609889[161] = 0;
   out_8335401751809609889[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8335401751809609889[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8335401751809609889[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8335401751809609889[165] = 0;
   out_8335401751809609889[166] = 0;
   out_8335401751809609889[167] = 0;
   out_8335401751809609889[168] = 0;
   out_8335401751809609889[169] = 0;
   out_8335401751809609889[170] = 0;
   out_8335401751809609889[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8335401751809609889[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8335401751809609889[173] = 0;
   out_8335401751809609889[174] = 0;
   out_8335401751809609889[175] = 0;
   out_8335401751809609889[176] = 1;
   out_8335401751809609889[177] = 0;
   out_8335401751809609889[178] = 0;
   out_8335401751809609889[179] = 0;
   out_8335401751809609889[180] = 0;
   out_8335401751809609889[181] = 0;
   out_8335401751809609889[182] = 0;
   out_8335401751809609889[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8335401751809609889[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8335401751809609889[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8335401751809609889[186] = 0;
   out_8335401751809609889[187] = 0;
   out_8335401751809609889[188] = 0;
   out_8335401751809609889[189] = 0;
   out_8335401751809609889[190] = 0;
   out_8335401751809609889[191] = 0;
   out_8335401751809609889[192] = 0;
   out_8335401751809609889[193] = 0;
   out_8335401751809609889[194] = 0;
   out_8335401751809609889[195] = 0;
   out_8335401751809609889[196] = 0;
   out_8335401751809609889[197] = 0;
   out_8335401751809609889[198] = 1;
   out_8335401751809609889[199] = 0;
   out_8335401751809609889[200] = 0;
   out_8335401751809609889[201] = 0;
   out_8335401751809609889[202] = 0;
   out_8335401751809609889[203] = 0;
   out_8335401751809609889[204] = 0;
   out_8335401751809609889[205] = 0;
   out_8335401751809609889[206] = 0;
   out_8335401751809609889[207] = 0;
   out_8335401751809609889[208] = 0;
   out_8335401751809609889[209] = 0;
   out_8335401751809609889[210] = 0;
   out_8335401751809609889[211] = 0;
   out_8335401751809609889[212] = 0;
   out_8335401751809609889[213] = 0;
   out_8335401751809609889[214] = 0;
   out_8335401751809609889[215] = 0;
   out_8335401751809609889[216] = 0;
   out_8335401751809609889[217] = 0;
   out_8335401751809609889[218] = 0;
   out_8335401751809609889[219] = 0;
   out_8335401751809609889[220] = 1;
   out_8335401751809609889[221] = 0;
   out_8335401751809609889[222] = 0;
   out_8335401751809609889[223] = 0;
   out_8335401751809609889[224] = 0;
   out_8335401751809609889[225] = 0;
   out_8335401751809609889[226] = 0;
   out_8335401751809609889[227] = 0;
   out_8335401751809609889[228] = 0;
   out_8335401751809609889[229] = 0;
   out_8335401751809609889[230] = 0;
   out_8335401751809609889[231] = 0;
   out_8335401751809609889[232] = 0;
   out_8335401751809609889[233] = 0;
   out_8335401751809609889[234] = 0;
   out_8335401751809609889[235] = 0;
   out_8335401751809609889[236] = 0;
   out_8335401751809609889[237] = 0;
   out_8335401751809609889[238] = 0;
   out_8335401751809609889[239] = 0;
   out_8335401751809609889[240] = 0;
   out_8335401751809609889[241] = 0;
   out_8335401751809609889[242] = 1;
   out_8335401751809609889[243] = 0;
   out_8335401751809609889[244] = 0;
   out_8335401751809609889[245] = 0;
   out_8335401751809609889[246] = 0;
   out_8335401751809609889[247] = 0;
   out_8335401751809609889[248] = 0;
   out_8335401751809609889[249] = 0;
   out_8335401751809609889[250] = 0;
   out_8335401751809609889[251] = 0;
   out_8335401751809609889[252] = 0;
   out_8335401751809609889[253] = 0;
   out_8335401751809609889[254] = 0;
   out_8335401751809609889[255] = 0;
   out_8335401751809609889[256] = 0;
   out_8335401751809609889[257] = 0;
   out_8335401751809609889[258] = 0;
   out_8335401751809609889[259] = 0;
   out_8335401751809609889[260] = 0;
   out_8335401751809609889[261] = 0;
   out_8335401751809609889[262] = 0;
   out_8335401751809609889[263] = 0;
   out_8335401751809609889[264] = 1;
   out_8335401751809609889[265] = 0;
   out_8335401751809609889[266] = 0;
   out_8335401751809609889[267] = 0;
   out_8335401751809609889[268] = 0;
   out_8335401751809609889[269] = 0;
   out_8335401751809609889[270] = 0;
   out_8335401751809609889[271] = 0;
   out_8335401751809609889[272] = 0;
   out_8335401751809609889[273] = 0;
   out_8335401751809609889[274] = 0;
   out_8335401751809609889[275] = 0;
   out_8335401751809609889[276] = 0;
   out_8335401751809609889[277] = 0;
   out_8335401751809609889[278] = 0;
   out_8335401751809609889[279] = 0;
   out_8335401751809609889[280] = 0;
   out_8335401751809609889[281] = 0;
   out_8335401751809609889[282] = 0;
   out_8335401751809609889[283] = 0;
   out_8335401751809609889[284] = 0;
   out_8335401751809609889[285] = 0;
   out_8335401751809609889[286] = 1;
   out_8335401751809609889[287] = 0;
   out_8335401751809609889[288] = 0;
   out_8335401751809609889[289] = 0;
   out_8335401751809609889[290] = 0;
   out_8335401751809609889[291] = 0;
   out_8335401751809609889[292] = 0;
   out_8335401751809609889[293] = 0;
   out_8335401751809609889[294] = 0;
   out_8335401751809609889[295] = 0;
   out_8335401751809609889[296] = 0;
   out_8335401751809609889[297] = 0;
   out_8335401751809609889[298] = 0;
   out_8335401751809609889[299] = 0;
   out_8335401751809609889[300] = 0;
   out_8335401751809609889[301] = 0;
   out_8335401751809609889[302] = 0;
   out_8335401751809609889[303] = 0;
   out_8335401751809609889[304] = 0;
   out_8335401751809609889[305] = 0;
   out_8335401751809609889[306] = 0;
   out_8335401751809609889[307] = 0;
   out_8335401751809609889[308] = 1;
   out_8335401751809609889[309] = 0;
   out_8335401751809609889[310] = 0;
   out_8335401751809609889[311] = 0;
   out_8335401751809609889[312] = 0;
   out_8335401751809609889[313] = 0;
   out_8335401751809609889[314] = 0;
   out_8335401751809609889[315] = 0;
   out_8335401751809609889[316] = 0;
   out_8335401751809609889[317] = 0;
   out_8335401751809609889[318] = 0;
   out_8335401751809609889[319] = 0;
   out_8335401751809609889[320] = 0;
   out_8335401751809609889[321] = 0;
   out_8335401751809609889[322] = 0;
   out_8335401751809609889[323] = 0;
   out_8335401751809609889[324] = 0;
   out_8335401751809609889[325] = 0;
   out_8335401751809609889[326] = 0;
   out_8335401751809609889[327] = 0;
   out_8335401751809609889[328] = 0;
   out_8335401751809609889[329] = 0;
   out_8335401751809609889[330] = 1;
   out_8335401751809609889[331] = 0;
   out_8335401751809609889[332] = 0;
   out_8335401751809609889[333] = 0;
   out_8335401751809609889[334] = 0;
   out_8335401751809609889[335] = 0;
   out_8335401751809609889[336] = 0;
   out_8335401751809609889[337] = 0;
   out_8335401751809609889[338] = 0;
   out_8335401751809609889[339] = 0;
   out_8335401751809609889[340] = 0;
   out_8335401751809609889[341] = 0;
   out_8335401751809609889[342] = 0;
   out_8335401751809609889[343] = 0;
   out_8335401751809609889[344] = 0;
   out_8335401751809609889[345] = 0;
   out_8335401751809609889[346] = 0;
   out_8335401751809609889[347] = 0;
   out_8335401751809609889[348] = 0;
   out_8335401751809609889[349] = 0;
   out_8335401751809609889[350] = 0;
   out_8335401751809609889[351] = 0;
   out_8335401751809609889[352] = 1;
   out_8335401751809609889[353] = 0;
   out_8335401751809609889[354] = 0;
   out_8335401751809609889[355] = 0;
   out_8335401751809609889[356] = 0;
   out_8335401751809609889[357] = 0;
   out_8335401751809609889[358] = 0;
   out_8335401751809609889[359] = 0;
   out_8335401751809609889[360] = 0;
   out_8335401751809609889[361] = 0;
   out_8335401751809609889[362] = 0;
   out_8335401751809609889[363] = 0;
   out_8335401751809609889[364] = 0;
   out_8335401751809609889[365] = 0;
   out_8335401751809609889[366] = 0;
   out_8335401751809609889[367] = 0;
   out_8335401751809609889[368] = 0;
   out_8335401751809609889[369] = 0;
   out_8335401751809609889[370] = 0;
   out_8335401751809609889[371] = 0;
   out_8335401751809609889[372] = 0;
   out_8335401751809609889[373] = 0;
   out_8335401751809609889[374] = 1;
   out_8335401751809609889[375] = 0;
   out_8335401751809609889[376] = 0;
   out_8335401751809609889[377] = 0;
   out_8335401751809609889[378] = 0;
   out_8335401751809609889[379] = 0;
   out_8335401751809609889[380] = 0;
   out_8335401751809609889[381] = 0;
   out_8335401751809609889[382] = 0;
   out_8335401751809609889[383] = 0;
   out_8335401751809609889[384] = 0;
   out_8335401751809609889[385] = 0;
   out_8335401751809609889[386] = 0;
   out_8335401751809609889[387] = 0;
   out_8335401751809609889[388] = 0;
   out_8335401751809609889[389] = 0;
   out_8335401751809609889[390] = 0;
   out_8335401751809609889[391] = 0;
   out_8335401751809609889[392] = 0;
   out_8335401751809609889[393] = 0;
   out_8335401751809609889[394] = 0;
   out_8335401751809609889[395] = 0;
   out_8335401751809609889[396] = 1;
   out_8335401751809609889[397] = 0;
   out_8335401751809609889[398] = 0;
   out_8335401751809609889[399] = 0;
   out_8335401751809609889[400] = 0;
   out_8335401751809609889[401] = 0;
   out_8335401751809609889[402] = 0;
   out_8335401751809609889[403] = 0;
   out_8335401751809609889[404] = 0;
   out_8335401751809609889[405] = 0;
   out_8335401751809609889[406] = 0;
   out_8335401751809609889[407] = 0;
   out_8335401751809609889[408] = 0;
   out_8335401751809609889[409] = 0;
   out_8335401751809609889[410] = 0;
   out_8335401751809609889[411] = 0;
   out_8335401751809609889[412] = 0;
   out_8335401751809609889[413] = 0;
   out_8335401751809609889[414] = 0;
   out_8335401751809609889[415] = 0;
   out_8335401751809609889[416] = 0;
   out_8335401751809609889[417] = 0;
   out_8335401751809609889[418] = 1;
   out_8335401751809609889[419] = 0;
   out_8335401751809609889[420] = 0;
   out_8335401751809609889[421] = 0;
   out_8335401751809609889[422] = 0;
   out_8335401751809609889[423] = 0;
   out_8335401751809609889[424] = 0;
   out_8335401751809609889[425] = 0;
   out_8335401751809609889[426] = 0;
   out_8335401751809609889[427] = 0;
   out_8335401751809609889[428] = 0;
   out_8335401751809609889[429] = 0;
   out_8335401751809609889[430] = 0;
   out_8335401751809609889[431] = 0;
   out_8335401751809609889[432] = 0;
   out_8335401751809609889[433] = 0;
   out_8335401751809609889[434] = 0;
   out_8335401751809609889[435] = 0;
   out_8335401751809609889[436] = 0;
   out_8335401751809609889[437] = 0;
   out_8335401751809609889[438] = 0;
   out_8335401751809609889[439] = 0;
   out_8335401751809609889[440] = 1;
}
void h_4(double *state, double *unused, double *out_5080936158019373930) {
   out_5080936158019373930[0] = state[10] + state[13];
   out_5080936158019373930[1] = state[11] + state[14];
   out_5080936158019373930[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2638295698616869394) {
   out_2638295698616869394[0] = 0;
   out_2638295698616869394[1] = 0;
   out_2638295698616869394[2] = 0;
   out_2638295698616869394[3] = 0;
   out_2638295698616869394[4] = 0;
   out_2638295698616869394[5] = 0;
   out_2638295698616869394[6] = 0;
   out_2638295698616869394[7] = 0;
   out_2638295698616869394[8] = 0;
   out_2638295698616869394[9] = 0;
   out_2638295698616869394[10] = 1;
   out_2638295698616869394[11] = 0;
   out_2638295698616869394[12] = 0;
   out_2638295698616869394[13] = 1;
   out_2638295698616869394[14] = 0;
   out_2638295698616869394[15] = 0;
   out_2638295698616869394[16] = 0;
   out_2638295698616869394[17] = 0;
   out_2638295698616869394[18] = 0;
   out_2638295698616869394[19] = 0;
   out_2638295698616869394[20] = 0;
   out_2638295698616869394[21] = 0;
   out_2638295698616869394[22] = 0;
   out_2638295698616869394[23] = 0;
   out_2638295698616869394[24] = 0;
   out_2638295698616869394[25] = 0;
   out_2638295698616869394[26] = 0;
   out_2638295698616869394[27] = 0;
   out_2638295698616869394[28] = 0;
   out_2638295698616869394[29] = 0;
   out_2638295698616869394[30] = 0;
   out_2638295698616869394[31] = 0;
   out_2638295698616869394[32] = 0;
   out_2638295698616869394[33] = 1;
   out_2638295698616869394[34] = 0;
   out_2638295698616869394[35] = 0;
   out_2638295698616869394[36] = 1;
   out_2638295698616869394[37] = 0;
   out_2638295698616869394[38] = 0;
   out_2638295698616869394[39] = 0;
   out_2638295698616869394[40] = 0;
   out_2638295698616869394[41] = 0;
   out_2638295698616869394[42] = 0;
   out_2638295698616869394[43] = 0;
   out_2638295698616869394[44] = 0;
   out_2638295698616869394[45] = 0;
   out_2638295698616869394[46] = 0;
   out_2638295698616869394[47] = 0;
   out_2638295698616869394[48] = 0;
   out_2638295698616869394[49] = 0;
   out_2638295698616869394[50] = 0;
   out_2638295698616869394[51] = 0;
   out_2638295698616869394[52] = 0;
   out_2638295698616869394[53] = 0;
   out_2638295698616869394[54] = 0;
   out_2638295698616869394[55] = 0;
   out_2638295698616869394[56] = 1;
   out_2638295698616869394[57] = 0;
   out_2638295698616869394[58] = 0;
   out_2638295698616869394[59] = 1;
   out_2638295698616869394[60] = 0;
   out_2638295698616869394[61] = 0;
   out_2638295698616869394[62] = 0;
   out_2638295698616869394[63] = 0;
   out_2638295698616869394[64] = 0;
   out_2638295698616869394[65] = 0;
}
void h_9(double *state, double *unused, double *out_4893286284277234855) {
   out_4893286284277234855[0] = state[10];
   out_4893286284277234855[1] = state[11];
   out_4893286284277234855[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4648923236647578076) {
   out_4648923236647578076[0] = 0;
   out_4648923236647578076[1] = 0;
   out_4648923236647578076[2] = 0;
   out_4648923236647578076[3] = 0;
   out_4648923236647578076[4] = 0;
   out_4648923236647578076[5] = 0;
   out_4648923236647578076[6] = 0;
   out_4648923236647578076[7] = 0;
   out_4648923236647578076[8] = 0;
   out_4648923236647578076[9] = 0;
   out_4648923236647578076[10] = 1;
   out_4648923236647578076[11] = 0;
   out_4648923236647578076[12] = 0;
   out_4648923236647578076[13] = 0;
   out_4648923236647578076[14] = 0;
   out_4648923236647578076[15] = 0;
   out_4648923236647578076[16] = 0;
   out_4648923236647578076[17] = 0;
   out_4648923236647578076[18] = 0;
   out_4648923236647578076[19] = 0;
   out_4648923236647578076[20] = 0;
   out_4648923236647578076[21] = 0;
   out_4648923236647578076[22] = 0;
   out_4648923236647578076[23] = 0;
   out_4648923236647578076[24] = 0;
   out_4648923236647578076[25] = 0;
   out_4648923236647578076[26] = 0;
   out_4648923236647578076[27] = 0;
   out_4648923236647578076[28] = 0;
   out_4648923236647578076[29] = 0;
   out_4648923236647578076[30] = 0;
   out_4648923236647578076[31] = 0;
   out_4648923236647578076[32] = 0;
   out_4648923236647578076[33] = 1;
   out_4648923236647578076[34] = 0;
   out_4648923236647578076[35] = 0;
   out_4648923236647578076[36] = 0;
   out_4648923236647578076[37] = 0;
   out_4648923236647578076[38] = 0;
   out_4648923236647578076[39] = 0;
   out_4648923236647578076[40] = 0;
   out_4648923236647578076[41] = 0;
   out_4648923236647578076[42] = 0;
   out_4648923236647578076[43] = 0;
   out_4648923236647578076[44] = 0;
   out_4648923236647578076[45] = 0;
   out_4648923236647578076[46] = 0;
   out_4648923236647578076[47] = 0;
   out_4648923236647578076[48] = 0;
   out_4648923236647578076[49] = 0;
   out_4648923236647578076[50] = 0;
   out_4648923236647578076[51] = 0;
   out_4648923236647578076[52] = 0;
   out_4648923236647578076[53] = 0;
   out_4648923236647578076[54] = 0;
   out_4648923236647578076[55] = 0;
   out_4648923236647578076[56] = 1;
   out_4648923236647578076[57] = 0;
   out_4648923236647578076[58] = 0;
   out_4648923236647578076[59] = 0;
   out_4648923236647578076[60] = 0;
   out_4648923236647578076[61] = 0;
   out_4648923236647578076[62] = 0;
   out_4648923236647578076[63] = 0;
   out_4648923236647578076[64] = 0;
   out_4648923236647578076[65] = 0;
}
void h_10(double *state, double *unused, double *out_1138825551532232374) {
   out_1138825551532232374[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1138825551532232374[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1138825551532232374[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4414796935612752637) {
   out_4414796935612752637[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4414796935612752637[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4414796935612752637[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4414796935612752637[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4414796935612752637[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4414796935612752637[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4414796935612752637[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4414796935612752637[7] = 0;
   out_4414796935612752637[8] = 0;
   out_4414796935612752637[9] = 0;
   out_4414796935612752637[10] = 0;
   out_4414796935612752637[11] = 0;
   out_4414796935612752637[12] = 0;
   out_4414796935612752637[13] = 0;
   out_4414796935612752637[14] = 0;
   out_4414796935612752637[15] = 0;
   out_4414796935612752637[16] = 1;
   out_4414796935612752637[17] = 0;
   out_4414796935612752637[18] = 0;
   out_4414796935612752637[19] = 1;
   out_4414796935612752637[20] = 0;
   out_4414796935612752637[21] = 0;
   out_4414796935612752637[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4414796935612752637[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4414796935612752637[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4414796935612752637[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4414796935612752637[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4414796935612752637[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4414796935612752637[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4414796935612752637[29] = 0;
   out_4414796935612752637[30] = 0;
   out_4414796935612752637[31] = 0;
   out_4414796935612752637[32] = 0;
   out_4414796935612752637[33] = 0;
   out_4414796935612752637[34] = 0;
   out_4414796935612752637[35] = 0;
   out_4414796935612752637[36] = 0;
   out_4414796935612752637[37] = 0;
   out_4414796935612752637[38] = 0;
   out_4414796935612752637[39] = 1;
   out_4414796935612752637[40] = 0;
   out_4414796935612752637[41] = 0;
   out_4414796935612752637[42] = 1;
   out_4414796935612752637[43] = 0;
   out_4414796935612752637[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4414796935612752637[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4414796935612752637[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4414796935612752637[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4414796935612752637[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4414796935612752637[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4414796935612752637[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4414796935612752637[51] = 0;
   out_4414796935612752637[52] = 0;
   out_4414796935612752637[53] = 0;
   out_4414796935612752637[54] = 0;
   out_4414796935612752637[55] = 0;
   out_4414796935612752637[56] = 0;
   out_4414796935612752637[57] = 0;
   out_4414796935612752637[58] = 0;
   out_4414796935612752637[59] = 0;
   out_4414796935612752637[60] = 0;
   out_4414796935612752637[61] = 0;
   out_4414796935612752637[62] = 1;
   out_4414796935612752637[63] = 0;
   out_4414796935612752637[64] = 0;
   out_4414796935612752637[65] = 1;
}
void h_12(double *state, double *unused, double *out_6535681285043612047) {
   out_6535681285043612047[0] = state[0];
   out_6535681285043612047[1] = state[1];
   out_6535681285043612047[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2381160709415092401) {
   out_2381160709415092401[0] = 1;
   out_2381160709415092401[1] = 0;
   out_2381160709415092401[2] = 0;
   out_2381160709415092401[3] = 0;
   out_2381160709415092401[4] = 0;
   out_2381160709415092401[5] = 0;
   out_2381160709415092401[6] = 0;
   out_2381160709415092401[7] = 0;
   out_2381160709415092401[8] = 0;
   out_2381160709415092401[9] = 0;
   out_2381160709415092401[10] = 0;
   out_2381160709415092401[11] = 0;
   out_2381160709415092401[12] = 0;
   out_2381160709415092401[13] = 0;
   out_2381160709415092401[14] = 0;
   out_2381160709415092401[15] = 0;
   out_2381160709415092401[16] = 0;
   out_2381160709415092401[17] = 0;
   out_2381160709415092401[18] = 0;
   out_2381160709415092401[19] = 0;
   out_2381160709415092401[20] = 0;
   out_2381160709415092401[21] = 0;
   out_2381160709415092401[22] = 0;
   out_2381160709415092401[23] = 1;
   out_2381160709415092401[24] = 0;
   out_2381160709415092401[25] = 0;
   out_2381160709415092401[26] = 0;
   out_2381160709415092401[27] = 0;
   out_2381160709415092401[28] = 0;
   out_2381160709415092401[29] = 0;
   out_2381160709415092401[30] = 0;
   out_2381160709415092401[31] = 0;
   out_2381160709415092401[32] = 0;
   out_2381160709415092401[33] = 0;
   out_2381160709415092401[34] = 0;
   out_2381160709415092401[35] = 0;
   out_2381160709415092401[36] = 0;
   out_2381160709415092401[37] = 0;
   out_2381160709415092401[38] = 0;
   out_2381160709415092401[39] = 0;
   out_2381160709415092401[40] = 0;
   out_2381160709415092401[41] = 0;
   out_2381160709415092401[42] = 0;
   out_2381160709415092401[43] = 0;
   out_2381160709415092401[44] = 0;
   out_2381160709415092401[45] = 0;
   out_2381160709415092401[46] = 1;
   out_2381160709415092401[47] = 0;
   out_2381160709415092401[48] = 0;
   out_2381160709415092401[49] = 0;
   out_2381160709415092401[50] = 0;
   out_2381160709415092401[51] = 0;
   out_2381160709415092401[52] = 0;
   out_2381160709415092401[53] = 0;
   out_2381160709415092401[54] = 0;
   out_2381160709415092401[55] = 0;
   out_2381160709415092401[56] = 0;
   out_2381160709415092401[57] = 0;
   out_2381160709415092401[58] = 0;
   out_2381160709415092401[59] = 0;
   out_2381160709415092401[60] = 0;
   out_2381160709415092401[61] = 0;
   out_2381160709415092401[62] = 0;
   out_2381160709415092401[63] = 0;
   out_2381160709415092401[64] = 0;
   out_2381160709415092401[65] = 0;
}
void h_35(double *state, double *unused, double *out_5008249702129854706) {
   out_5008249702129854706[0] = state[7];
   out_5008249702129854706[1] = state[8];
   out_5008249702129854706[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5126723741740106110) {
   out_5126723741740106110[0] = 0;
   out_5126723741740106110[1] = 0;
   out_5126723741740106110[2] = 0;
   out_5126723741740106110[3] = 0;
   out_5126723741740106110[4] = 0;
   out_5126723741740106110[5] = 0;
   out_5126723741740106110[6] = 0;
   out_5126723741740106110[7] = 1;
   out_5126723741740106110[8] = 0;
   out_5126723741740106110[9] = 0;
   out_5126723741740106110[10] = 0;
   out_5126723741740106110[11] = 0;
   out_5126723741740106110[12] = 0;
   out_5126723741740106110[13] = 0;
   out_5126723741740106110[14] = 0;
   out_5126723741740106110[15] = 0;
   out_5126723741740106110[16] = 0;
   out_5126723741740106110[17] = 0;
   out_5126723741740106110[18] = 0;
   out_5126723741740106110[19] = 0;
   out_5126723741740106110[20] = 0;
   out_5126723741740106110[21] = 0;
   out_5126723741740106110[22] = 0;
   out_5126723741740106110[23] = 0;
   out_5126723741740106110[24] = 0;
   out_5126723741740106110[25] = 0;
   out_5126723741740106110[26] = 0;
   out_5126723741740106110[27] = 0;
   out_5126723741740106110[28] = 0;
   out_5126723741740106110[29] = 0;
   out_5126723741740106110[30] = 1;
   out_5126723741740106110[31] = 0;
   out_5126723741740106110[32] = 0;
   out_5126723741740106110[33] = 0;
   out_5126723741740106110[34] = 0;
   out_5126723741740106110[35] = 0;
   out_5126723741740106110[36] = 0;
   out_5126723741740106110[37] = 0;
   out_5126723741740106110[38] = 0;
   out_5126723741740106110[39] = 0;
   out_5126723741740106110[40] = 0;
   out_5126723741740106110[41] = 0;
   out_5126723741740106110[42] = 0;
   out_5126723741740106110[43] = 0;
   out_5126723741740106110[44] = 0;
   out_5126723741740106110[45] = 0;
   out_5126723741740106110[46] = 0;
   out_5126723741740106110[47] = 0;
   out_5126723741740106110[48] = 0;
   out_5126723741740106110[49] = 0;
   out_5126723741740106110[50] = 0;
   out_5126723741740106110[51] = 0;
   out_5126723741740106110[52] = 0;
   out_5126723741740106110[53] = 1;
   out_5126723741740106110[54] = 0;
   out_5126723741740106110[55] = 0;
   out_5126723741740106110[56] = 0;
   out_5126723741740106110[57] = 0;
   out_5126723741740106110[58] = 0;
   out_5126723741740106110[59] = 0;
   out_5126723741740106110[60] = 0;
   out_5126723741740106110[61] = 0;
   out_5126723741740106110[62] = 0;
   out_5126723741740106110[63] = 0;
   out_5126723741740106110[64] = 0;
   out_5126723741740106110[65] = 0;
}
void h_32(double *state, double *unused, double *out_8400234986997979728) {
   out_8400234986997979728[0] = state[3];
   out_8400234986997979728[1] = state[4];
   out_8400234986997979728[2] = state[5];
   out_8400234986997979728[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3490332878916171088) {
   out_3490332878916171088[0] = 0;
   out_3490332878916171088[1] = 0;
   out_3490332878916171088[2] = 0;
   out_3490332878916171088[3] = 1;
   out_3490332878916171088[4] = 0;
   out_3490332878916171088[5] = 0;
   out_3490332878916171088[6] = 0;
   out_3490332878916171088[7] = 0;
   out_3490332878916171088[8] = 0;
   out_3490332878916171088[9] = 0;
   out_3490332878916171088[10] = 0;
   out_3490332878916171088[11] = 0;
   out_3490332878916171088[12] = 0;
   out_3490332878916171088[13] = 0;
   out_3490332878916171088[14] = 0;
   out_3490332878916171088[15] = 0;
   out_3490332878916171088[16] = 0;
   out_3490332878916171088[17] = 0;
   out_3490332878916171088[18] = 0;
   out_3490332878916171088[19] = 0;
   out_3490332878916171088[20] = 0;
   out_3490332878916171088[21] = 0;
   out_3490332878916171088[22] = 0;
   out_3490332878916171088[23] = 0;
   out_3490332878916171088[24] = 0;
   out_3490332878916171088[25] = 0;
   out_3490332878916171088[26] = 1;
   out_3490332878916171088[27] = 0;
   out_3490332878916171088[28] = 0;
   out_3490332878916171088[29] = 0;
   out_3490332878916171088[30] = 0;
   out_3490332878916171088[31] = 0;
   out_3490332878916171088[32] = 0;
   out_3490332878916171088[33] = 0;
   out_3490332878916171088[34] = 0;
   out_3490332878916171088[35] = 0;
   out_3490332878916171088[36] = 0;
   out_3490332878916171088[37] = 0;
   out_3490332878916171088[38] = 0;
   out_3490332878916171088[39] = 0;
   out_3490332878916171088[40] = 0;
   out_3490332878916171088[41] = 0;
   out_3490332878916171088[42] = 0;
   out_3490332878916171088[43] = 0;
   out_3490332878916171088[44] = 0;
   out_3490332878916171088[45] = 0;
   out_3490332878916171088[46] = 0;
   out_3490332878916171088[47] = 0;
   out_3490332878916171088[48] = 0;
   out_3490332878916171088[49] = 1;
   out_3490332878916171088[50] = 0;
   out_3490332878916171088[51] = 0;
   out_3490332878916171088[52] = 0;
   out_3490332878916171088[53] = 0;
   out_3490332878916171088[54] = 0;
   out_3490332878916171088[55] = 0;
   out_3490332878916171088[56] = 0;
   out_3490332878916171088[57] = 0;
   out_3490332878916171088[58] = 0;
   out_3490332878916171088[59] = 0;
   out_3490332878916171088[60] = 0;
   out_3490332878916171088[61] = 0;
   out_3490332878916171088[62] = 0;
   out_3490332878916171088[63] = 0;
   out_3490332878916171088[64] = 0;
   out_3490332878916171088[65] = 0;
   out_3490332878916171088[66] = 0;
   out_3490332878916171088[67] = 0;
   out_3490332878916171088[68] = 0;
   out_3490332878916171088[69] = 0;
   out_3490332878916171088[70] = 0;
   out_3490332878916171088[71] = 0;
   out_3490332878916171088[72] = 1;
   out_3490332878916171088[73] = 0;
   out_3490332878916171088[74] = 0;
   out_3490332878916171088[75] = 0;
   out_3490332878916171088[76] = 0;
   out_3490332878916171088[77] = 0;
   out_3490332878916171088[78] = 0;
   out_3490332878916171088[79] = 0;
   out_3490332878916171088[80] = 0;
   out_3490332878916171088[81] = 0;
   out_3490332878916171088[82] = 0;
   out_3490332878916171088[83] = 0;
   out_3490332878916171088[84] = 0;
   out_3490332878916171088[85] = 0;
   out_3490332878916171088[86] = 0;
   out_3490332878916171088[87] = 0;
}
void h_13(double *state, double *unused, double *out_719563951820547242) {
   out_719563951820547242[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_719563951820547242[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_719563951820547242[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7339299324380762044) {
   out_7339299324380762044[0] = 0;
   out_7339299324380762044[1] = 0;
   out_7339299324380762044[2] = 0;
   out_7339299324380762044[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7339299324380762044[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7339299324380762044[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7339299324380762044[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7339299324380762044[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7339299324380762044[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7339299324380762044[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7339299324380762044[10] = 0;
   out_7339299324380762044[11] = 0;
   out_7339299324380762044[12] = 0;
   out_7339299324380762044[13] = 0;
   out_7339299324380762044[14] = 0;
   out_7339299324380762044[15] = 0;
   out_7339299324380762044[16] = 0;
   out_7339299324380762044[17] = 0;
   out_7339299324380762044[18] = 0;
   out_7339299324380762044[19] = 0;
   out_7339299324380762044[20] = 0;
   out_7339299324380762044[21] = 0;
   out_7339299324380762044[22] = 0;
   out_7339299324380762044[23] = 0;
   out_7339299324380762044[24] = 0;
   out_7339299324380762044[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7339299324380762044[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7339299324380762044[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7339299324380762044[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7339299324380762044[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7339299324380762044[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7339299324380762044[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7339299324380762044[32] = 0;
   out_7339299324380762044[33] = 0;
   out_7339299324380762044[34] = 0;
   out_7339299324380762044[35] = 0;
   out_7339299324380762044[36] = 0;
   out_7339299324380762044[37] = 0;
   out_7339299324380762044[38] = 0;
   out_7339299324380762044[39] = 0;
   out_7339299324380762044[40] = 0;
   out_7339299324380762044[41] = 0;
   out_7339299324380762044[42] = 0;
   out_7339299324380762044[43] = 0;
   out_7339299324380762044[44] = 0;
   out_7339299324380762044[45] = 0;
   out_7339299324380762044[46] = 0;
   out_7339299324380762044[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7339299324380762044[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7339299324380762044[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7339299324380762044[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7339299324380762044[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7339299324380762044[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7339299324380762044[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7339299324380762044[54] = 0;
   out_7339299324380762044[55] = 0;
   out_7339299324380762044[56] = 0;
   out_7339299324380762044[57] = 0;
   out_7339299324380762044[58] = 0;
   out_7339299324380762044[59] = 0;
   out_7339299324380762044[60] = 0;
   out_7339299324380762044[61] = 0;
   out_7339299324380762044[62] = 0;
   out_7339299324380762044[63] = 0;
   out_7339299324380762044[64] = 0;
   out_7339299324380762044[65] = 0;
}
void h_14(double *state, double *unused, double *out_4893286284277234855) {
   out_4893286284277234855[0] = state[10];
   out_4893286284277234855[1] = state[11];
   out_4893286284277234855[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4648923236647578076) {
   out_4648923236647578076[0] = 0;
   out_4648923236647578076[1] = 0;
   out_4648923236647578076[2] = 0;
   out_4648923236647578076[3] = 0;
   out_4648923236647578076[4] = 0;
   out_4648923236647578076[5] = 0;
   out_4648923236647578076[6] = 0;
   out_4648923236647578076[7] = 0;
   out_4648923236647578076[8] = 0;
   out_4648923236647578076[9] = 0;
   out_4648923236647578076[10] = 1;
   out_4648923236647578076[11] = 0;
   out_4648923236647578076[12] = 0;
   out_4648923236647578076[13] = 0;
   out_4648923236647578076[14] = 0;
   out_4648923236647578076[15] = 0;
   out_4648923236647578076[16] = 0;
   out_4648923236647578076[17] = 0;
   out_4648923236647578076[18] = 0;
   out_4648923236647578076[19] = 0;
   out_4648923236647578076[20] = 0;
   out_4648923236647578076[21] = 0;
   out_4648923236647578076[22] = 0;
   out_4648923236647578076[23] = 0;
   out_4648923236647578076[24] = 0;
   out_4648923236647578076[25] = 0;
   out_4648923236647578076[26] = 0;
   out_4648923236647578076[27] = 0;
   out_4648923236647578076[28] = 0;
   out_4648923236647578076[29] = 0;
   out_4648923236647578076[30] = 0;
   out_4648923236647578076[31] = 0;
   out_4648923236647578076[32] = 0;
   out_4648923236647578076[33] = 1;
   out_4648923236647578076[34] = 0;
   out_4648923236647578076[35] = 0;
   out_4648923236647578076[36] = 0;
   out_4648923236647578076[37] = 0;
   out_4648923236647578076[38] = 0;
   out_4648923236647578076[39] = 0;
   out_4648923236647578076[40] = 0;
   out_4648923236647578076[41] = 0;
   out_4648923236647578076[42] = 0;
   out_4648923236647578076[43] = 0;
   out_4648923236647578076[44] = 0;
   out_4648923236647578076[45] = 0;
   out_4648923236647578076[46] = 0;
   out_4648923236647578076[47] = 0;
   out_4648923236647578076[48] = 0;
   out_4648923236647578076[49] = 0;
   out_4648923236647578076[50] = 0;
   out_4648923236647578076[51] = 0;
   out_4648923236647578076[52] = 0;
   out_4648923236647578076[53] = 0;
   out_4648923236647578076[54] = 0;
   out_4648923236647578076[55] = 0;
   out_4648923236647578076[56] = 1;
   out_4648923236647578076[57] = 0;
   out_4648923236647578076[58] = 0;
   out_4648923236647578076[59] = 0;
   out_4648923236647578076[60] = 0;
   out_4648923236647578076[61] = 0;
   out_4648923236647578076[62] = 0;
   out_4648923236647578076[63] = 0;
   out_4648923236647578076[64] = 0;
   out_4648923236647578076[65] = 0;
}
void h_33(double *state, double *unused, double *out_3264372632123712536) {
   out_3264372632123712536[0] = state[16];
   out_3264372632123712536[1] = state[17];
   out_3264372632123712536[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8277280746378963714) {
   out_8277280746378963714[0] = 0;
   out_8277280746378963714[1] = 0;
   out_8277280746378963714[2] = 0;
   out_8277280746378963714[3] = 0;
   out_8277280746378963714[4] = 0;
   out_8277280746378963714[5] = 0;
   out_8277280746378963714[6] = 0;
   out_8277280746378963714[7] = 0;
   out_8277280746378963714[8] = 0;
   out_8277280746378963714[9] = 0;
   out_8277280746378963714[10] = 0;
   out_8277280746378963714[11] = 0;
   out_8277280746378963714[12] = 0;
   out_8277280746378963714[13] = 0;
   out_8277280746378963714[14] = 0;
   out_8277280746378963714[15] = 0;
   out_8277280746378963714[16] = 1;
   out_8277280746378963714[17] = 0;
   out_8277280746378963714[18] = 0;
   out_8277280746378963714[19] = 0;
   out_8277280746378963714[20] = 0;
   out_8277280746378963714[21] = 0;
   out_8277280746378963714[22] = 0;
   out_8277280746378963714[23] = 0;
   out_8277280746378963714[24] = 0;
   out_8277280746378963714[25] = 0;
   out_8277280746378963714[26] = 0;
   out_8277280746378963714[27] = 0;
   out_8277280746378963714[28] = 0;
   out_8277280746378963714[29] = 0;
   out_8277280746378963714[30] = 0;
   out_8277280746378963714[31] = 0;
   out_8277280746378963714[32] = 0;
   out_8277280746378963714[33] = 0;
   out_8277280746378963714[34] = 0;
   out_8277280746378963714[35] = 0;
   out_8277280746378963714[36] = 0;
   out_8277280746378963714[37] = 0;
   out_8277280746378963714[38] = 0;
   out_8277280746378963714[39] = 1;
   out_8277280746378963714[40] = 0;
   out_8277280746378963714[41] = 0;
   out_8277280746378963714[42] = 0;
   out_8277280746378963714[43] = 0;
   out_8277280746378963714[44] = 0;
   out_8277280746378963714[45] = 0;
   out_8277280746378963714[46] = 0;
   out_8277280746378963714[47] = 0;
   out_8277280746378963714[48] = 0;
   out_8277280746378963714[49] = 0;
   out_8277280746378963714[50] = 0;
   out_8277280746378963714[51] = 0;
   out_8277280746378963714[52] = 0;
   out_8277280746378963714[53] = 0;
   out_8277280746378963714[54] = 0;
   out_8277280746378963714[55] = 0;
   out_8277280746378963714[56] = 0;
   out_8277280746378963714[57] = 0;
   out_8277280746378963714[58] = 0;
   out_8277280746378963714[59] = 0;
   out_8277280746378963714[60] = 0;
   out_8277280746378963714[61] = 0;
   out_8277280746378963714[62] = 1;
   out_8277280746378963714[63] = 0;
   out_8277280746378963714[64] = 0;
   out_8277280746378963714[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6971914640542061287) {
  H(in_vec, out_6971914640542061287);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6189662298219493583) {
  err_fun(nom_x, delta_x, out_6189662298219493583);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7314469681338286083) {
  inv_err_fun(nom_x, true_x, out_7314469681338286083);
}
void live_H_mod_fun(double *state, double *out_2317264427215604781) {
  H_mod_fun(state, out_2317264427215604781);
}
void live_f_fun(double *state, double dt, double *out_6421330834293840922) {
  f_fun(state,  dt, out_6421330834293840922);
}
void live_F_fun(double *state, double dt, double *out_8335401751809609889) {
  F_fun(state,  dt, out_8335401751809609889);
}
void live_h_4(double *state, double *unused, double *out_5080936158019373930) {
  h_4(state, unused, out_5080936158019373930);
}
void live_H_4(double *state, double *unused, double *out_2638295698616869394) {
  H_4(state, unused, out_2638295698616869394);
}
void live_h_9(double *state, double *unused, double *out_4893286284277234855) {
  h_9(state, unused, out_4893286284277234855);
}
void live_H_9(double *state, double *unused, double *out_4648923236647578076) {
  H_9(state, unused, out_4648923236647578076);
}
void live_h_10(double *state, double *unused, double *out_1138825551532232374) {
  h_10(state, unused, out_1138825551532232374);
}
void live_H_10(double *state, double *unused, double *out_4414796935612752637) {
  H_10(state, unused, out_4414796935612752637);
}
void live_h_12(double *state, double *unused, double *out_6535681285043612047) {
  h_12(state, unused, out_6535681285043612047);
}
void live_H_12(double *state, double *unused, double *out_2381160709415092401) {
  H_12(state, unused, out_2381160709415092401);
}
void live_h_35(double *state, double *unused, double *out_5008249702129854706) {
  h_35(state, unused, out_5008249702129854706);
}
void live_H_35(double *state, double *unused, double *out_5126723741740106110) {
  H_35(state, unused, out_5126723741740106110);
}
void live_h_32(double *state, double *unused, double *out_8400234986997979728) {
  h_32(state, unused, out_8400234986997979728);
}
void live_H_32(double *state, double *unused, double *out_3490332878916171088) {
  H_32(state, unused, out_3490332878916171088);
}
void live_h_13(double *state, double *unused, double *out_719563951820547242) {
  h_13(state, unused, out_719563951820547242);
}
void live_H_13(double *state, double *unused, double *out_7339299324380762044) {
  H_13(state, unused, out_7339299324380762044);
}
void live_h_14(double *state, double *unused, double *out_4893286284277234855) {
  h_14(state, unused, out_4893286284277234855);
}
void live_H_14(double *state, double *unused, double *out_4648923236647578076) {
  H_14(state, unused, out_4648923236647578076);
}
void live_h_33(double *state, double *unused, double *out_3264372632123712536) {
  h_33(state, unused, out_3264372632123712536);
}
void live_H_33(double *state, double *unused, double *out_8277280746378963714) {
  H_33(state, unused, out_8277280746378963714);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
